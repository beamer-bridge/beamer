{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_claimStake",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "_claimRequestExtension",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "claimerStake",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "challengerStakeTotal",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "ClaimMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "stakeRecipient",
          "type": "address"
        }
      ],
      "name": "ClaimStakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "DepositWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "FillInvalidatedResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "FinalityPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "lp",
          "type": "address"
        }
      ],
      "name": "LpRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "validUntil",
          "type": "uint32"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "RequestResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "minLpFee",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "lpFeePPM",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "protocolFeePPM",
          "type": "uint32"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_VALIDITY_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newLp",
          "type": "address"
        }
      ],
      "name": "addAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "callerChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messenger",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "addCaller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedLps",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "callers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRequestExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "claimerStake",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "lastChallenger",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "challengerStakeTotal",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "withdrawnAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validityPeriod",
          "type": "uint256"
        }
      ],
      "name": "createRequest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentNonce",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "finalityPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        }
      ],
      "name": "invalidateFill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "name": "isInvalidFill",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "isWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "lpFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldLp",
          "type": "address"
        }
      ],
      "name": "removeAllowedLp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "validUntil",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "lpFee",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "protocolFee",
          "type": "uint96"
        },
        {
          "internalType": "uint32",
          "name": "activeClaims",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "withdrawClaimId",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "fillId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "resolutionChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "filler",
          "type": "address"
        }
      ],
      "name": "resolveRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "finalityPeriod",
          "type": "uint256"
        }
      ],
      "name": "setFinalityPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "transferLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "minLpFee",
          "type": "uint96"
        },
        {
          "internalType": "uint32",
          "name": "lpFeePPM",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "protocolFeePPM",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "collectedProtocolFees",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "totalFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint96",
          "name": "minLpFee",
          "type": "uint96"
        },
        {
          "internalType": "uint32",
          "name": "lpFeePPM",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "protocolFeePPM",
          "type": "uint32"
        }
      ],
      "name": "updateToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "claimId",
          "type": "uint96"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "withdrawExpiredRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
    "1": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
    "10": "contracts/contracts/RequestManager.sol",
    "11": "contracts/contracts/RestrictedCalls.sol",
    "2": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
    "3": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "4": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "5": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "6": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
    "7": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
    "8": "contracts/contracts/BeamerUtils.sol",
    "9": "contracts/contracts/LpWhitelist.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/RequestManager.sol",
    "exportedSymbols": {
      "Address": [
        3912
      ],
      "BeamerUtils": [
        3296
      ],
      "Context": [
        3546
      ],
      "IERC20": [
        2117
      ],
      "IERC20Permit": [
        3582
      ],
      "IMessenger": [
        3934
      ],
      "LpWhitelist": [
        3369
      ],
      "Math": [
        3263
      ],
      "Ownable": [
        1931
      ],
      "Pausable": [
        2039
      ],
      "RequestManager": [
        1818
      ],
      "RestrictedCalls": [
        3524
      ],
      "SafeERC20": [
        2398
      ]
    },
    "id": 1819,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:10"
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 2118,
        "src": "58:84:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 2399,
        "src": "143:93:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 3264,
        "src": "237:81:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 1932,
        "src": "319:80:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bb/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 2040,
        "src": "400:83:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/BeamerUtils.sol",
        "file": "./BeamerUtils.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 3297,
        "src": "485:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/RestrictedCalls.sol",
        "file": "./RestrictedCalls.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 3525,
        "src": "513:31:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/LpWhitelist.sol",
        "file": "./LpWhitelist.sol",
        "id": 9,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1819,
        "sourceUnit": 3370,
        "src": "545:27:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1931,
              "src": "1168:7:10"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:7:10"
          },
          {
            "baseName": {
              "id": 13,
              "name": "LpWhitelist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3369,
              "src": "1177:11:10"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:11:10"
          },
          {
            "baseName": {
              "id": 15,
              "name": "RestrictedCalls",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3524,
              "src": "1190:15:10"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "1190:15:10"
          },
          {
            "baseName": {
              "id": 17,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2039,
              "src": "1207:8:10"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "1207:8:10"
          }
        ],
        "canonicalName": "RequestManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10,
          "nodeType": "StructuredDocumentation",
          "src": "574:567:10",
          "text": "The request manager.\n This contract is responsible for keeping track of transfer requests,\n implementing the rules of the challenge game and holding deposited\n tokens until they are withdrawn.\n The information passed by L1 resolution will be stored with the respective requests.\n It is the only contract that agents need to interact with on the source chain.\n .. note::\n   The functions resolveRequest and invalidateFill can only be called by\n   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract."
        },
        "fullyImplemented": true,
        "id": 1818,
        "linearizedBaseContracts": [
          1818,
          2039,
          3524,
          3369,
          1931,
          3546
        ],
        "name": "RequestManager",
        "nameLocation": "1150:14:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 21,
            "libraryName": {
              "id": 19,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3263,
              "src": "1228:4:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1222:23:10",
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1237:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 25,
            "libraryName": {
              "id": 22,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2398,
              "src": "1256:9:10"
            },
            "nodeType": "UsingForDirective",
            "src": "1250:27:10",
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2117,
                "src": "1270:6:10"
              },
              "referencedDeclaration": 2117,
              "src": "1270:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2117",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 52,
            "members": [
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1462:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1454:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1454:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "1486:18:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1478:26:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1478:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 31,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "1522:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1514:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1514:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 33,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1553:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1545:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 32,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1545:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "1576:10:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1569:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 34,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1569:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "lpFee",
                "nameLocation": "1603:5:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1596:12:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1596:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "1625:11:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1618:18:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1618:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "activeClaims",
                "nameLocation": "1653:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1646:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1646:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 43,
                "mutability": "mutable",
                "name": "withdrawClaimId",
                "nameLocation": "1682:15:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1675:22:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1675:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 45,
                "mutability": "mutable",
                "name": "filler",
                "nameLocation": "1715:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1707:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 44,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1707:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "1739:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1731:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 46,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1731:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51,
                "mutability": "mutable",
                "name": "invalidFillIds",
                "nameLocation": "1780:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 52,
                "src": "1755:39:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                  "typeString": "mapping(bytes32 => bool)"
                },
                "typeName": {
                  "id": 50,
                  "keyType": {
                    "id": 48,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1755:24:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "valueType": {
                    "id": 49,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1774:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "1436:7:10",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1429:372:10",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 73,
            "members": [
              {
                "constant": false,
                "id": 54,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "1838:9:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1830:17:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 53,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1830:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "1865:7:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1857:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 55,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1857:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 58,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "1889:12:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1882:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 57,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62,
                "mutability": "mutable",
                "name": "challengersStakes",
                "nameLocation": "1938:17:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1911:44:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                  "typeString": "mapping(address => uint96)"
                },
                "typeName": {
                  "id": 61,
                  "keyType": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1911:26:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                    "typeString": "mapping(address => uint96)"
                  },
                  "valueType": {
                    "id": 60,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "lastChallenger",
                "nameLocation": "1973:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1965:22:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 63,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1965:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "challengerStakeTotal",
                "nameLocation": "2004:20:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "1997:27:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 65,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "1997:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "withdrawnAmount",
                "nameLocation": "2042:15:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2034:23:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 70,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "2075:11:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2067:19:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2067:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 72,
                "mutability": "mutable",
                "name": "fillId",
                "nameLocation": "2104:6:10",
                "nodeType": "VariableDeclaration",
                "scope": 73,
                "src": "2096:14:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 71,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2096:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "1814:5:10",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "1807:310:10",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Token",
            "id": 84,
            "members": [
              {
                "constant": false,
                "id": 75,
                "mutability": "mutable",
                "name": "transferLimit",
                "nameLocation": "2154:13:10",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "2146:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 74,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2146:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 77,
                "mutability": "mutable",
                "name": "minLpFee",
                "nameLocation": "2184:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "2177:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 76,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2177:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79,
                "mutability": "mutable",
                "name": "lpFeePPM",
                "nameLocation": "2209:8:10",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "2202:15:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 78,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2202:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 81,
                "mutability": "mutable",
                "name": "protocolFeePPM",
                "nameLocation": "2234:14:10",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "2227:21:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 80,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2227:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 83,
                "mutability": "mutable",
                "name": "collectedProtocolFees",
                "nameLocation": "2265:21:10",
                "nodeType": "VariableDeclaration",
                "scope": 84,
                "src": "2258:28:10",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 82,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2258:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Token",
            "nameLocation": "2130:5:10",
            "nodeType": "StructDefinition",
            "scope": 1818,
            "src": "2123:170:10",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 85,
              "nodeType": "StructuredDocumentation",
              "src": "2314:103:10",
              "text": "Emitted when a new request has been created.\n .. seealso:: :sol:func:`createRequest`"
            },
            "eventSelector": "869ab8728bdae6aae9b6d728da37437ccf3ddfd7a141903f22cb8324739683de",
            "id": 105,
            "name": "RequestCreated",
            "nameLocation": "2428:14:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "2468:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2452:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "2495:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2487:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "2526:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2518:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "2562:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2554:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2554:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sourceAddress",
                  "nameLocation": "2606:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2590:29:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2590:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 97,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "2637:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2629:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2668:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2660:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2660:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2691:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2684:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "validUntil",
                  "nameLocation": "2713:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 105,
                  "src": "2706:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2442:287:10"
            },
            "src": "2422:308:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 106,
              "nodeType": "StructuredDocumentation",
              "src": "2736:445:10",
              "text": "Emitted when the token deposit for request ``requestId`` has been\n transferred to the ``receiver``.\n This can happen in two cases:\n  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n  * a claim related to the request has been resolved successfully in favor of the claimer\n .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
            },
            "eventSelector": "ab63a14c4aaba38366fd39116091672bb44520328ee870be35a51e573296e565",
            "id": 112,
            "name": "DepositWithdrawn",
            "nameLocation": "3192:16:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 108,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3217:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "3209:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 107,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3236:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "3228:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:37:10"
            },
            "src": "3186:60:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 113,
              "nodeType": "StructuredDocumentation",
              "src": "3252:151:10",
              "text": "Emitted when a claim or a counter-claim (challenge) has been made.\n .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
            },
            "eventSelector": "f0289b2c09d4e59035c29451cfbb75c07a50fdcc68db2eccef5a84db99285e44",
            "id": 131,
            "name": "ClaimMade",
            "nameLocation": "3414:9:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3449:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3433:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3475:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3468:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "3500:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3492:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3492:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimerStake",
                  "nameLocation": "3524:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3517:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastChallenger",
                  "nameLocation": "3554:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3546:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challengerStakeTotal",
                  "nameLocation": "3585:20:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3578:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3578:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "3623:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3615:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3615:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "3652:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "3644:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3644:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:241:10"
            },
            "src": "3408:257:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "3671:277:10",
              "text": "Emitted when staked native tokens tied to a claim have been withdrawn.\n This can only happen when the claim has been resolved and the caller\n of :sol:func:`withdraw` is allowed to withdraw their stake.\n .. seealso:: :sol:func:`withdraw`"
            },
            "eventSelector": "c9e74e0700d0c6488af9c81d70fdd4158aea77687137ff85499509c41a10612b",
            "id": 140,
            "name": "ClaimStakeWithdrawn",
            "nameLocation": "3959:19:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "3995:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "3988:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3988:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4028:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "4012:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4012:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakeRecipient",
                  "nameLocation": "4055:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "4047:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4047:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3978:97:10"
            },
            "src": "3953:123:10"
          },
          {
            "anonymous": false,
            "eventSelector": "aba57b48b9f1dfd5747a52ed348a6ab6aa7bafb0575363a5cb7b62659f727b65",
            "id": 146,
            "name": "FinalityPeriodUpdated",
            "nameLocation": "4088:21:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "4118:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "4110:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4110:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "4141:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "4133:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4133:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4109:47:10"
            },
            "src": "4082:75:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "4163:113:10",
              "text": "Emitted when token object of a token address is updated.\n .. seealso:: :sol:func:`updateToken`"
            },
            "eventSelector": "b226edffd2920f3fe08961dc98b19d4815bbe75af416f5e82ca7bf7be50350c4",
            "id": 159,
            "name": "TokenUpdated",
            "nameLocation": "4287:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "4317:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4309:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4309:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "transferLimit",
                  "nameLocation": "4347:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4339:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minLpFee",
                  "nameLocation": "4377:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4370:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4370:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpFeePPM",
                  "nameLocation": "4402:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4395:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4395:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "protocolFeePPM",
                  "nameLocation": "4427:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "4420:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4420:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:148:10"
            },
            "src": "4281:167:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "4454:119:10",
              "text": "Emitted when a request has been resolved via L1 resolution.\n .. seealso:: :sol:func:`resolveRequest`"
            },
            "eventSelector": "b32d3c8b5539b0cc3050d5b75e9dad8eca8744a0892259bda27fdb51b9956736",
            "id": 168,
            "name": "RequestResolved",
            "nameLocation": "4584:15:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4608:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4600:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "4627:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4619:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4619:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4643:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "4635:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4635:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:51:10"
            },
            "src": "4578:73:10"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "4657:111:10",
              "text": "Emitted when an invalidated fill has been resolved.\n .. seealso:: :sol:func:`invalidateFill`"
            },
            "eventSelector": "5571b83c623961fb42d39ce6d6d2092153ace66c008e2dc2472ec6d2e8fad045",
            "id": 175,
            "name": "FillInvalidatedResolved",
            "nameLocation": "4779:23:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "4811:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "4803:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4803:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "4830:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 175,
                  "src": "4822:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4822:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4802:35:10"
            },
            "src": "4773:65:10"
          },
          {
            "constant": false,
            "documentation": {
              "id": 176,
              "nodeType": "StructuredDocumentation",
              "src": "4862:161:10",
              "text": "The minimum amount of source chain's native token that the claimer needs to\n provide when making a claim, as well in each round of the challenge game."
            },
            "functionSelector": "eb321173",
            "id": 178,
            "mutability": "immutable",
            "name": "claimStake",
            "nameLocation": "5052:10:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "5028:34:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 177,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "5028:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "5069:114:10",
              "text": "The additional time given to claim a request. This value is added to the\n validity period of a request."
            },
            "functionSelector": "83d208c3",
            "id": 181,
            "mutability": "immutable",
            "name": "claimRequestExtension",
            "nameLocation": "5213:21:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "5188:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5188:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 182,
              "nodeType": "StructuredDocumentation",
              "src": "5241:44:10",
              "text": "The period for which the claim is valid."
            },
            "functionSelector": "7dc2cd98",
            "id": 184,
            "mutability": "immutable",
            "name": "claimPeriod",
            "nameLocation": "5315:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "5290:36:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5290:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "5333:598:10",
              "text": "The period by which the termination time of a claim is extended after each\n round of the challenge game. This period should allow enough time for the\n other parties to counter-challenge.\n .. note::\n    The claim's termination time is extended only if it is less than the\n    extension time.\n Note that in the first challenge round, i.e. the round initiated by the first\n challenger, the termination time is extended additionally by the finality\n period of the target chain. This is done to allow for L1 resolution."
            },
            "functionSelector": "1d18adc5",
            "id": 187,
            "mutability": "immutable",
            "name": "challengePeriodExtension",
            "nameLocation": "5961:24:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "5936:49:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5936:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "5992:45:10",
              "text": "The minimum validity period of a request."
            },
            "functionSelector": "1489f8d2",
            "id": 191,
            "mutability": "constant",
            "name": "MIN_VALIDITY_PERIOD",
            "nameLocation": "6066:19:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6042:56:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 189,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6042:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 190,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6088:10:10",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1800_by_1",
                "typeString": "int_const 1800"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "6105:45:10",
              "text": "The maximum validity period of a request."
            },
            "functionSelector": "96171d05",
            "id": 195,
            "mutability": "constant",
            "name": "MAX_VALIDITY_PERIOD",
            "nameLocation": "6179:19:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6155:54:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 193,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6155:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3438",
              "id": 194,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6201:8:10",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_172800_by_1",
                "typeString": "int_const 172800"
              },
              "value": "48"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 196,
              "nodeType": "StructuredDocumentation",
              "src": "6216:93:10",
              "text": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
            },
            "functionSelector": "ea628898",
            "id": 203,
            "mutability": "constant",
            "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
            "nameLocation": "6337:26:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6314:68:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 197,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "6314:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "6371:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    },
                    "typeName": {
                      "id": 199,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "6371:6:10",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint96_$",
                      "typeString": "type(uint96)"
                    }
                  ],
                  "id": 198,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "6366:4:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 201,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "6366:12:10",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint96",
                  "typeString": "type(uint96)"
                }
              },
              "id": 202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "6366:16:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "6407:163:10",
              "text": "A counter used to generate request and claim IDs.\n The variable holds the most recently used nonce and must\n be incremented to get the next nonce"
            },
            "functionSelector": "adb610a3",
            "id": 206,
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "6589:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6575:26:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint96",
              "typeString": "uint96"
            },
            "typeName": {
              "id": 205,
              "name": "uint96",
              "nodeType": "ElementaryTypeName",
              "src": "6575:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint96",
                "typeString": "uint96"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "6608:94:10",
              "text": "Maps target rollup chain IDs to finality periods.\n Finality periods are in seconds."
            },
            "functionSelector": "2f92f009",
            "id": 211,
            "mutability": "mutable",
            "name": "finalityPeriods",
            "nameLocation": "6742:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6707:50:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 210,
              "keyType": {
                "id": 208,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6715:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6707:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 209,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6726:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 212,
              "nodeType": "StructuredDocumentation",
              "src": "6764:33:10",
              "text": "Maps request IDs to requests."
            },
            "functionSelector": "9d866985",
            "id": 217,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "6837:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6802:43:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
              "typeString": "mapping(bytes32 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 216,
              "keyType": {
                "id": 213,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "6810:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "6802:27:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                "typeString": "mapping(bytes32 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 215,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 214,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52,
                  "src": "6821:7:10"
                },
                "referencedDeclaration": 52,
                "src": "6821:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 218,
              "nodeType": "StructuredDocumentation",
              "src": "6852:29:10",
              "text": "Maps claim IDs to claims."
            },
            "functionSelector": "3b046f09",
            "id": 223,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "6918:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6886:38:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
              "typeString": "mapping(uint96 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 222,
              "keyType": {
                "id": 219,
                "name": "uint96",
                "nodeType": "ElementaryTypeName",
                "src": "6894:6:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                }
              },
              "nodeType": "Mapping",
              "src": "6886:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                "typeString": "mapping(uint96 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 221,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 220,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "6904:5:10"
                },
                "referencedDeclaration": 73,
                "src": "6904:5:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 224,
              "nodeType": "StructuredDocumentation",
              "src": "6931:38:10",
              "text": "Maps ERC20 token address to tokens"
            },
            "functionSelector": "e4860339",
            "id": 229,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "7007:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 1818,
            "src": "6974:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
              "typeString": "mapping(address => struct RequestManager.Token)"
            },
            "typeName": {
              "id": 228,
              "keyType": {
                "id": 225,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6982:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6974:25:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                "typeString": "mapping(address => struct RequestManager.Token)"
              },
              "valueType": {
                "id": 227,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 226,
                  "name": "Token",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84,
                  "src": "6993:5:10"
                },
                "referencedDeclaration": 84,
                "src": "6993:5:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                  "typeString": "struct RequestManager.Token"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "7225:139:10",
              "statements": [
                {
                  "assignments": [
                    241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 241,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7249:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 259,
                      "src": "7235:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                        "typeString": "struct RequestManager.Token"
                      },
                      "typeName": {
                        "id": 240,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 239,
                          "name": "Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 84,
                          "src": "7235:5:10"
                        },
                        "referencedDeclaration": 84,
                        "src": "7235:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 245,
                  "initialValue": {
                    "baseExpression": {
                      "id": 242,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "7257:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                        "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                      }
                    },
                    "id": 244,
                    "indexExpression": {
                      "id": 243,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "7264:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7257:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$84_storage",
                      "typeString": "struct RequestManager.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7235:42:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 248,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 241,
                          "src": "7303:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                            "typeString": "struct RequestManager.Token storage pointer"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minLpFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 77,
                        "src": "7303:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 250,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "7320:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "expression": {
                                  "id": 251,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 241,
                                  "src": "7329:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                                    "typeString": "struct RequestManager.Token storage pointer"
                                  }
                                },
                                "id": 252,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lpFeePPM",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 79,
                                "src": "7329:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "7320:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 254,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7319:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "315f3030305f303030",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7347:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1_000_000"
                        },
                        "src": "7319:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 246,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3263,
                        "src": "7294:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$3263_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2423,
                      "src": "7294:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7294:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 238,
                  "id": 258,
                  "nodeType": "Return",
                  "src": "7287:70:10"
                }
              ]
            },
            "documentation": {
              "id": 230,
              "nodeType": "StructuredDocumentation",
              "src": "7020:89:10",
              "text": "Compute the liquidity provider fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "909ef10c",
            "id": 260,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lpFee",
            "nameLocation": "7123:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7137:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "7129:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7129:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 234,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7159:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "7151:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7151:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7128:38:10"
            },
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "7212:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7212:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7211:9:10"
            },
            "scope": 1818,
            "src": "7114:250:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "7571:82:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 270,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "7589:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 271,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 229,
                                "src": "7598:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                                  "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                                }
                              },
                              "id": 273,
                              "indexExpression": {
                                "id": 272,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 263,
                                "src": "7605:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7598:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Token_$84_storage",
                                "typeString": "struct RequestManager.Token storage ref"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "protocolFeePPM",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 81,
                            "src": "7598:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "7589:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 276,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7588:46:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "315f3030305f303030",
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7637:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000_by_1",
                        "typeString": "int_const 1000000"
                      },
                      "value": "1_000_000"
                    },
                    "src": "7588:58:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 279,
                  "nodeType": "Return",
                  "src": "7581:65:10"
                }
              ]
            },
            "documentation": {
              "id": 261,
              "nodeType": "StructuredDocumentation",
              "src": "7370:79:10",
              "text": "Compute the protocol fee that needs to be paid for a given transfer amount."
            },
            "functionSelector": "30b72906",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "protocolFee",
            "nameLocation": "7463:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 263,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7483:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7475:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7475:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 265,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7505:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7497:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7497:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7474:38:10"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 281,
                  "src": "7558:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7558:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7557:9:10"
            },
            "scope": 1818,
            "src": "7454:199:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "7939:87:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 292,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "7962:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 293,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "7976:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 291,
                        "name": "lpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 260,
                        "src": "7956:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7956:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 296,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "7998:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 297,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "8012:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 295,
                        "name": "protocolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "7986:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7986:33:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7956:63:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 290,
                  "id": 300,
                  "nodeType": "Return",
                  "src": "7949:70:10"
                }
              ]
            },
            "documentation": {
              "id": 282,
              "nodeType": "StructuredDocumentation",
              "src": "7659:161:10",
              "text": "Compute the total fee that needs to be paid for a given transfer amount.\n The total fee is the sum of the liquidity provider fee and the protocol fee."
            },
            "functionSelector": "2c9af6b7",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalFee",
            "nameLocation": "7834:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7851:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "7843:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7843:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7873:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "7865:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7865:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7842:38:10"
            },
            "returnParameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "7926:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7926:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7925:9:10"
            },
            "scope": 1818,
            "src": "7825:201:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "8144:134:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 308,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "8175:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                                "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                              }
                            },
                            "id": 310,
                            "indexExpression": {
                              "id": 309,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "8184:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8175:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage",
                              "typeString": "struct RequestManager.Request storage ref"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 27,
                          "src": "8175:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8213:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8205:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 312,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8205:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8205:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8175:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726571756573744964206e6f742076616c6964",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8229:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        },
                        "value": "requestId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0bb782a5a1857b463ef883d3e4b99e9751b0d5423347851634a49140c150f705",
                          "typeString": "literal_string \"requestId not valid\""
                        }
                      ],
                      "id": 307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8154:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8154:106:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "8154:106:10"
                },
                {
                  "id": 320,
                  "nodeType": "PlaceholderStatement",
                  "src": "8270:1:10"
                }
              ]
            },
            "documentation": {
              "id": 303,
              "nodeType": "StructuredDocumentation",
              "src": "8050:46:10",
              "text": "Check whether a given request ID is valid."
            },
            "id": 322,
            "name": "validRequestId",
            "nameLocation": "8110:14:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "8133:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "8125:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8125:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8124:19:10"
            },
            "src": "8101:177:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "8371:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 328,
                              "name": "claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "8389:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                                "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                              }
                            },
                            "id": 330,
                            "indexExpression": {
                              "id": 329,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 325,
                              "src": "8396:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8389:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$73_storage",
                              "typeString": "struct RequestManager.Claim storage ref"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "8389:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8424:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8416:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 332,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8416:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8416:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8389:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8428:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8381:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8381:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "8381:67:10"
                },
                {
                  "id": 340,
                  "nodeType": "PlaceholderStatement",
                  "src": "8458:1:10"
                }
              ]
            },
            "documentation": {
              "id": 323,
              "nodeType": "StructuredDocumentation",
              "src": "8284:44:10",
              "text": "Check whether a given claim ID is valid."
            },
            "id": 342,
            "name": "validClaimId",
            "nameLocation": "8342:12:10",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "8362:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 342,
                  "src": "8355:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8355:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8354:16:10"
            },
            "src": "8333:133:10",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 370,
              "nodeType": "Block",
              "src": "8937:195:10",
              "statements": [
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 354,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "8947:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 355,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "8960:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8947:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "8947:24:10"
                },
                {
                  "expression": {
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 358,
                      "name": "claimRequestExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "8981:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 359,
                      "name": "_claimRequestExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "9005:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8981:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "8981:46:10"
                },
                {
                  "expression": {
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 362,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "9037:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 363,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "9051:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9037:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 365,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:26:10"
                },
                {
                  "expression": {
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 366,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "9073:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 367,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 351,
                      "src": "9100:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9073:52:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "9073:52:10"
                }
              ]
            },
            "documentation": {
              "id": 343,
              "nodeType": "StructuredDocumentation",
              "src": "8472:301:10",
              "text": "Constructor.\n @param _claimStake Claim stake amount.\n @param _claimRequestExtension Extension to claim a request after validity period ends.\n @param _claimPeriod Claim period, in seconds.\n @param _challengePeriodExtension Challenge period extension, in seconds."
            },
            "id": 371,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "8806:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "8799:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8799:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_claimRequestExtension",
                  "nameLocation": "8835:22:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "8827:30:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8827:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "8875:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "8867:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8867:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "8905:25:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 371,
                  "src": "8897:33:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8897:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8789:147:10"
            },
            "returnParameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8937:0:10"
            },
            "scope": 1818,
            "src": "8778:354:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "10240:2132:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 392,
                            "name": "finalityPeriods",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "10271:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 394,
                          "indexExpression": {
                            "id": 393,
                            "name": "targetChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 374,
                            "src": "10287:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10271:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10305:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "10271:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54617267657420726f6c6c7570206e6f7420737570706f72746564",
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10320:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        },
                        "value": "Target rollup not supported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce613defff4868c9fbec08ddde530282de33cee8241a08645b008dbc00137e2b",
                          "typeString": "literal_string \"Target rollup not supported\""
                        }
                      ],
                      "id": 391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10250:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10250:109:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "10250:109:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 401,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "10390:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 402,
                          "name": "MIN_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "10408:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10390:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f2073686f7274",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10441:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        },
                        "value": "Validity period too short"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c45904cb6a178378bb37a9a1c03f015a39361ce913918834ec5a52c283667008",
                          "typeString": "literal_string \"Validity period too short\""
                        }
                      ],
                      "id": 400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10369:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10369:109:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "10369:109:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 408,
                          "name": "validityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "10509:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 409,
                          "name": "MAX_VALIDITY_PERIOD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "10527:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10509:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616c696469747920706572696f6420746f6f206c6f6e67",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10560:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        },
                        "value": "Validity period too long"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ac933946aa9f1b3cff59a7d1daa9668099cd3b65a18787e4f598bc11cc28194",
                          "typeString": "literal_string \"Validity period too long\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10488:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10488:108:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "10488:108:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 415,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "10627:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 416,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 229,
                              "src": "10637:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                                "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                              }
                            },
                            "id": 418,
                            "indexExpression": {
                              "id": 417,
                              "name": "sourceTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "10644:18:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10637:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Token_$84_storage",
                              "typeString": "struct RequestManager.Token storage ref"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferLimit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75,
                          "src": "10637:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10627:50:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e742065786365656473207472616e73666572206c696d6974",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10691:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        },
                        "value": "Amount exceeds transfer limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62ea95ea2c2e47e95fdd347a7b56999ecf4d6210b6715ec00b4f5e3d0c9f95d8",
                          "typeString": "literal_string \"Amount exceeds transfer limit\""
                        }
                      ],
                      "id": 414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10606:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10606:126:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 423,
                  "nodeType": "ExpressionStatement",
                  "src": "10606:126:10"
                },
                {
                  "assignments": [
                    425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 425,
                      "mutability": "mutable",
                      "name": "lpFeeTokenAmount",
                      "nameLocation": "10751:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "10743:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10743:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 430,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 427,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "10776:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 428,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "10796:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 426,
                      "name": "lpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "10770:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10770:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:60:10"
                },
                {
                  "assignments": [
                    432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 432,
                      "mutability": "mutable",
                      "name": "protocolFeeTokenAmount",
                      "nameLocation": "10821:22:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "10813:30:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10813:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 437,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 434,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "10871:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 435,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "10903:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 433,
                      "name": "protocolFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "10846:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10846:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10813:106:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 443,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10988:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10988:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 447,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11008:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_RequestManager_$1818",
                                    "typeString": "contract RequestManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_RequestManager_$1818",
                                    "typeString": "contract RequestManager"
                                  }
                                ],
                                "id": 446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11000:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 445,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11000:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11000:13:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 440,
                                  "name": "sourceTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 376,
                                  "src": "10958:18:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 439,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2117,
                                "src": "10951:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$2117_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10951:26:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$2117",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2094,
                            "src": "10951:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10951:63:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 450,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "11034:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 451,
                              "name": "lpFeeTokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 425,
                              "src": "11043:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11034:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 453,
                            "name": "protocolFeeTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "11062:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11034:50:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10951:133:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11098:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10930:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10930:202:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "10930:202:10"
                },
                {
                  "assignments": [
                    460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 460,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "11150:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "11143:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 459,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "11143:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 464,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 461,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "11158:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11173:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "11158:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11143:31:10"
                },
                {
                  "expression": {
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 465,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "11184:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 466,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 460,
                      "src": "11199:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "11184:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "11184:20:10"
                },
                {
                  "assignments": [
                    470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 470,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "11223:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "11215:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 469,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11215:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 481,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 473,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11276:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "11276:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 475,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "11303:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 476,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "11330:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "11362:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 478,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "11389:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 479,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "11409:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 471,
                        "name": "BeamerUtils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3296,
                        "src": "11235:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BeamerUtils_$3296_$",
                          "typeString": "type(library BeamerUtils)"
                        }
                      },
                      "id": 472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createRequestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3295,
                      "src": "11235:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint96_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,address,address,uint256,uint96) pure returns (bytes32)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11235:189:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11215:209:10"
                },
                {
                  "assignments": [
                    484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 484,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "11451:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "11435:26:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 483,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 482,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "11435:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "11435:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 488,
                  "initialValue": {
                    "baseExpression": {
                      "id": 485,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "11464:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 487,
                    "indexExpression": {
                      "id": 486,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 470,
                      "src": "11473:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11464:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11435:48:10"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 489,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11493:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "11493:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 492,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "11513:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11513:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11493:30:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "11493:30:10"
                },
                {
                  "expression": {
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 496,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11533:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "11533:29:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 499,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 376,
                      "src": "11565:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11533:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "11533:50:10"
                },
                {
                  "expression": {
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 502,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11593:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31,
                      "src": "11593:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 505,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "11620:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11593:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 507,
                  "nodeType": "ExpressionStatement",
                  "src": "11593:40:10"
                },
                {
                  "expression": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 508,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11643:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 510,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33,
                      "src": "11643:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 511,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 382,
                      "src": "11663:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11643:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "11643:26:10"
                },
                {
                  "expression": {
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 514,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11679:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "validUntil",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "11679:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 519,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11710:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11710:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 521,
                            "name": "validityPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "11728:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11710:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11703:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11703:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11703:40:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11679:64:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "11679:64:10"
                },
                {
                  "expression": {
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 526,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11753:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "11753:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 531,
                          "name": "lpFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 425,
                          "src": "11779:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11772:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "11772:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11772:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "11753:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 534,
                  "nodeType": "ExpressionStatement",
                  "src": "11753:43:10"
                },
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 535,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "11806:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 537,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "11806:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 540,
                          "name": "protocolFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "11838:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11831:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "11831:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11831:30:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "11806:55:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "11806:55:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 545,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "11905:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 546,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "11928:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 547,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "11955:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 548,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "11987:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 549,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12019:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12019:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 551,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 380,
                        "src": "12043:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 552,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 382,
                        "src": "12070:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 553,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "12090:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 556,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12116:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12116:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 558,
                              "name": "validityPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "12134:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12116:32:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12109:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 554,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "12109:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12109:40:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 544,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "11877:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint96_$_t_uint32_$returns$__$",
                        "typeString": "function (bytes32,uint256,address,address,address,address,uint256,uint96,uint32)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11877:282:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "EmitStatement",
                  "src": "11872:287:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12227:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12227:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 571,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12259:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RequestManager_$1818",
                              "typeString": "contract RequestManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RequestManager_$1818",
                              "typeString": "contract RequestManager"
                            }
                          ],
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12251:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 569,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12251:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12251:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 573,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "12278:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 574,
                            "name": "lpFeeTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "12287:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12278:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 576,
                          "name": "protocolFeeTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 432,
                          "src": "12306:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12278:50:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 564,
                            "name": "sourceTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "12177:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 563,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "12170:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$2117_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12170:26:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2175,
                      "src": "12170:43:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2117_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2117_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12170:168:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "12170:168:10"
                },
                {
                  "expression": {
                    "id": 580,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 470,
                    "src": "12356:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 390,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "12349:16:10"
                }
              ]
            },
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "9138:837:10",
              "text": "Create a new transfer request.\n @param targetChainId ID of the target chain.\n @param sourceTokenAddress Address of the token contract on the source chain.\n @param targetTokenAddress Address of the token contract on the target chain.\n @param targetAddress Recipient address on the target chain.\n @param amount Amount of tokens to transfer. Does not include fees.\n @param validityPeriod The number of seconds the request is to be considered valid.\n                       Once its validity period has elapsed, the request cannot be claimed\n                       anymore and will eventually expire, allowing the request submitter\n                       to withdraw the deposited tokens if there are no active claims.\n @return ID of the newly created request."
            },
            "functionSelector": "2f4212b8",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 387,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 386,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1966,
                  "src": "10208:13:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "10208:13:10"
              }
            ],
            "name": "createRequest",
            "nameLocation": "9989:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "10020:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10012:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "10051:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10043:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10043:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "10087:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10079:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10079:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "10123:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10115:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10115:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10154:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10146:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10146:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 384,
                  "mutability": "mutable",
                  "name": "validityPeriod",
                  "nameLocation": "10178:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10170:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 383,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10170:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10002:196:10"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "10231:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10231:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10230:9:10"
            },
            "scope": 1818,
            "src": "9980:2392:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 659,
              "nodeType": "Block",
              "src": "12660:639:10",
              "statements": [
                {
                  "assignments": [
                    594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 594,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "12686:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "12670:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 593,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 592,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "12670:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "12670:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 598,
                  "initialValue": {
                    "baseExpression": {
                      "id": 595,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "12696:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 597,
                    "indexExpression": {
                      "id": 596,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "12705:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12696:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12670:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 600,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "12734:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "12734:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12761:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12734:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12764:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12726:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12726:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 606,
                  "nodeType": "ExpressionStatement",
                  "src": "12726:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 608,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12823:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12823:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 610,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "12842:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "validUntil",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "12842:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "12823:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "52657175657374206e6f74206578706972656420796574",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12874:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        },
                        "value": "Request not expired yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_39bdfa9a2d26c13da0c9b6ca3d4e83611affcc397929e29cfb9e09c9d5c42830",
                          "typeString": "literal_string \"Request not expired yet\""
                        }
                      ],
                      "id": 607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12802:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12802:107:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "ExpressionStatement",
                  "src": "12802:107:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 617,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "12927:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeClaims",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "12927:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12951:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12927:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41637469766520636c61696d732072756e6e696e67",
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12954:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        },
                        "value": "Active claims running"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f03ffa7bffee1c6dfb6edeb3466aa724b633b692eb668560f915ebb9d3a9a8b",
                          "typeString": "literal_string \"Active claims running\""
                        }
                      ],
                      "id": 616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12919:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12919:59:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 623,
                  "nodeType": "ExpressionStatement",
                  "src": "12919:59:10"
                },
                {
                  "expression": {
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 624,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "12989:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "12989:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 627,
                      "name": "CLAIM_ID_WITHDRAWN_EXPIRED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "13015:26:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "12989:52:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "12989:52:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 631,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "13074:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 632,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "13085:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "13085:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 630,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "13057:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13057:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "EmitStatement",
                  "src": "13052:48:10"
                },
                {
                  "assignments": [
                    638
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "13118:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 659,
                      "src": "13111:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2117",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 637,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 636,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2117,
                          "src": "13111:6:10"
                        },
                        "referencedDeclaration": 2117,
                        "src": "13111:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 643,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 640,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "13133:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "13133:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 639,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2117,
                      "src": "13126:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2117_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13126:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2117",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13111:49:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 647,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "13202:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 27,
                        "src": "13202:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 649,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "13230:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33,
                            "src": "13230:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 651,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "13247:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 652,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lpFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "13247:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "13230:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 654,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "13263:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 655,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "protocolFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "13263:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "13230:52:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 644,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "13170:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2149,
                      "src": "13170:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2117_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2117_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13170:122:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "13170:122:10"
                }
              ]
            },
            "documentation": {
              "id": 584,
              "nodeType": "StructuredDocumentation",
              "src": "12378:171:10",
              "text": "Withdraw funds deposited with an expired request.\n No claims must be active for the request.\n @param requestId ID of the expired request."
            },
            "functionSelector": "79650559",
            "id": 660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 589,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 586,
                    "src": "12645:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 588,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 322,
                  "src": "12630:14:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "12630:25:10"
              }
            ],
            "name": "withdrawExpiredRequest",
            "nameLocation": "12563:22:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "12594:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 660,
                  "src": "12586:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12586:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12585:19:10"
            },
            "returnParameters": {
              "id": 591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12660:0:10"
            },
            "scope": 1818,
            "src": "12554:745:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 684,
              "nodeType": "Block",
              "src": "13823:67:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 678,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13853:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13853:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 680,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "13865:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 681,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "13876:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 677,
                      "name": "claimRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "13840:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes32_$returns$_t_uint96_$",
                        "typeString": "function (address,bytes32,bytes32) returns (uint96)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13840:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 676,
                  "id": 683,
                  "nodeType": "Return",
                  "src": "13833:50:10"
                }
              ]
            },
            "documentation": {
              "id": 661,
              "nodeType": "StructuredDocumentation",
              "src": "13305:328:10",
              "text": "Claim that a request was filled by the caller.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "743c151a",
            "id": 685,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 668,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 663,
                    "src": "13751:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 667,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 322,
                  "src": "13736:14:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "13736:25:10"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 671,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "13782:3:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "13782:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 670,
                  "name": "onlyAllowed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3331,
                  "src": "13770:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "13770:23:10"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "13647:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "13668:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "13660:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13660:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "13687:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "13679:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13679:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13659:35:10"
            },
            "returnParameters": {
              "id": 676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 675,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 685,
                  "src": "13811:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 674,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "13811:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13810:8:10"
            },
            "scope": 1818,
            "src": "13638:252:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "14544:1061:10",
              "statements": [
                {
                  "assignments": [
                    705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 705,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "14570:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "14554:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 704,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 703,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "14554:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "14554:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 709,
                  "initialValue": {
                    "baseExpression": {
                      "id": 706,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "14580:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 708,
                    "indexExpression": {
                      "id": 707,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "14589:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14580:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14554:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 711,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14631:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14631:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 713,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 705,
                              "src": "14649:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "validUntil",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "14649:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 715,
                            "name": "claimRequestExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 181,
                            "src": "14670:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14649:42:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14631:60:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526571756573742063616e6e6f7420626520636c61696d656420616e796d6f7265",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14705:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfe1866924a090c953658487b5079255d7ae70dccbf04474adb58caef75ac4ed",
                          "typeString": "literal_string \"Request cannot be claimed anymore\""
                        },
                        "value": "Request cannot be claimed anymore"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfe1866924a090c953658487b5079255d7ae70dccbf04474adb58caef75ac4ed",
                          "typeString": "literal_string \"Request cannot be claimed anymore\""
                        }
                      ],
                      "id": 710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14610:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14610:140:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "14610:140:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 722,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "14768:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawClaimId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "14768:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14795:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14768:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616c72656164792077697468647261776e",
                        "id": 726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14798:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        },
                        "value": "Deposit already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03fc7e2598240ebf130b828b27940ebfdb1cbd2521f0efcc8233351b88bd966a",
                          "typeString": "literal_string \"Deposit already withdrawn\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14760:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14760:66:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "14760:66:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 730,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14844:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "14844:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 732,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "14857:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "14844:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207374616b6520616d6f756e74",
                        "id": 734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14869:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        },
                        "value": "Invalid stake amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ad3e5bc3e0d5a08a9885d6e44516a7467939c5df8fabf19beccfc02562b99dc",
                          "typeString": "literal_string \"Invalid stake amount\""
                        }
                      ],
                      "id": 729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14836:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14836:56:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "14836:56:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 738,
                          "name": "fillId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 692,
                          "src": "14910:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14928:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14920:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 739,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "14920:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14920:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "14910:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c4964206d757374206e6f7420626520307830",
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14932:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        },
                        "value": "FillId must not be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_576d47f738afedfa6cd889e052ba048e590239bf0398ab4e36e95ec97dbb5828",
                          "typeString": "literal_string \"FillId must not be 0x0\""
                        }
                      ],
                      "id": 737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14902:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14902:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 746,
                  "nodeType": "ExpressionStatement",
                  "src": "14902:55:10"
                },
                {
                  "expression": {
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 747,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "14968:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeClaims",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "14968:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14992:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14968:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 752,
                  "nodeType": "ExpressionStatement",
                  "src": "14968:25:10"
                },
                {
                  "assignments": [
                    754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "15011:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "15004:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 753,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "15004:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 755,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "15019:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15034:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15019:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15004:31:10"
                },
                {
                  "expression": {
                    "id": 761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 759,
                      "name": "currentNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "15045:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 760,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "15060:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "15045:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 762,
                  "nodeType": "ExpressionStatement",
                  "src": "15045:20:10"
                },
                {
                  "assignments": [
                    764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 764,
                      "mutability": "mutable",
                      "name": "termination",
                      "nameLocation": "15083:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "15075:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15075:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 769,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 765,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "15097:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "15097:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 767,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "15115:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15097:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15075:51:10"
                },
                {
                  "assignments": [
                    772
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 772,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "15151:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 831,
                      "src": "15137:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 771,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 770,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "15137:5:10"
                        },
                        "referencedDeclaration": 73,
                        "src": "15137:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "baseExpression": {
                      "id": 773,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "15159:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 775,
                    "indexExpression": {
                      "id": 774,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "15166:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15159:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$73_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15137:35:10"
                },
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 777,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "15182:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "15182:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 780,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 690,
                      "src": "15200:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15182:27:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "15182:27:10"
                },
                {
                  "expression": {
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 783,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "15219:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 785,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "15219:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 786,
                      "name": "claimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "15235:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15219:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "15219:23:10"
                },
                {
                  "expression": {
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 789,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "15252:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 791,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58,
                      "src": "15252:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 794,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15280:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15280:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15273:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint96_$",
                          "typeString": "type(uint96)"
                        },
                        "typeName": {
                          "id": 792,
                          "name": "uint96",
                          "nodeType": "ElementaryTypeName",
                          "src": "15273:6:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15273:17:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "15252:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "15252:38:10"
                },
                {
                  "expression": {
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 799,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "15300:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 801,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70,
                      "src": "15300:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 802,
                      "name": "termination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 764,
                      "src": "15320:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15300:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "15300:31:10"
                },
                {
                  "expression": {
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 805,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "15341:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "15341:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 808,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "15356:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "15341:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 810,
                  "nodeType": "ExpressionStatement",
                  "src": "15341:21:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 812,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "15401:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 813,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "15424:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 814,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 688,
                        "src": "15443:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 817,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "15471:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "15471:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15464:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 815,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "15464:6:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15464:17:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15503:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15495:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 820,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15495:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15495:10:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15519:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 825,
                        "name": "termination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "15534:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 826,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "15559:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 811,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "15378:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint96_$_t_address_$_t_uint96_$_t_address_$_t_uint96_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint96,address,uint96,address,uint96,uint256,bytes32)"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15378:197:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "EmitStatement",
                  "src": "15373:202:10"
                },
                {
                  "expression": {
                    "id": 829,
                    "name": "nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 754,
                    "src": "15593:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 702,
                  "id": 830,
                  "nodeType": "Return",
                  "src": "15586:12:10"
                }
              ]
            },
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "13896:416:10",
              "text": "Claim that a request was filled.\n The request must still be valid at call time.\n The caller must provide the ``claimStake`` amount of source rollup's native\n token.\n Only the claimer may get the stake back later.\n @param claimer Address of the claimer.\n @param requestId ID of the request.\n @param fillId The fill ID.\n @return The claim ID."
            },
            "functionSelector": "599b08a2",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 695,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 690,
                    "src": "14475:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 694,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 322,
                  "src": "14460:14:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "14460:25:10"
              },
              {
                "arguments": [
                  {
                    "id": 698,
                    "name": "claimer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 688,
                    "src": "14506:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 699,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 697,
                  "name": "onlyAllowed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3331,
                  "src": "14494:11:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "14494:20:10"
              }
            ],
            "name": "claimRequest",
            "nameLocation": "14326:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "14356:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "14348:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14348:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "14381:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "14373:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14373:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "14408:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "14400:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14400:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14338:82:10"
            },
            "returnParameters": {
              "id": 702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "14532:6:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "14532:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14531:8:10"
            },
            "scope": 1818,
            "src": "14317:1288:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1059,
              "nodeType": "Block",
              "src": "16910:2217:10",
              "statements": [
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "16934:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "16920:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 842,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 841,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "16920:5:10"
                        },
                        "referencedDeclaration": 73,
                        "src": "16920:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "baseExpression": {
                      "id": 844,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "16942:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 846,
                    "indexExpression": {
                      "id": 845,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 835,
                      "src": "16949:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16942:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$73_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16920:37:10"
                },
                {
                  "assignments": [
                    849
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 849,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "16975:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "16967:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 848,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "16967:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "expression": {
                      "id": 850,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "16987:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requestId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "16987:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16967:35:10"
                },
                {
                  "assignments": [
                    854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "termination",
                      "nameLocation": "17020:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "17012:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17012:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 857,
                  "initialValue": {
                    "expression": {
                      "id": 855,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "17034:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "termination",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 70,
                    "src": "17034:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17012:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 859,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17069:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17069:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 861,
                          "name": "termination",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 854,
                          "src": "17087:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17069:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2065787069726564",
                        "id": 863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17100:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        },
                        "value": "Claim expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_798014e7325cea2d102adb3bd5e2a99ef885fb00dba060d9a4f562f3b9926d61",
                          "typeString": "literal_string \"Claim expired\""
                        }
                      ],
                      "id": 858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17061:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17061:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "17061:55:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 867,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 217,
                              "src": "17147:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                                "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                              }
                            },
                            "id": 869,
                            "indexExpression": {
                              "id": 868,
                              "name": "requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "17156:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17147:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage",
                              "typeString": "struct RequestManager.Request storage ref"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "17147:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17185:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17177:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 871,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17177:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17177:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17147:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265717565737420616c7265616479207265736f6c766564",
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17201:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3526c2b4809a8f35cd282edb7833ea9202ea44b37236862f00d8e3beacb26fb",
                          "typeString": "literal_string \"Request already resolved\""
                        },
                        "value": "Request already resolved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3526c2b4809a8f35cd282edb7833ea9202ea44b37236862f00d8e3beacb26fb",
                          "typeString": "literal_string \"Request already resolved\""
                        }
                      ],
                      "id": 866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17126:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17126:111:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "17126:111:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17268:49:10",
                        "subExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 880,
                                "name": "requests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 217,
                                "src": "17269:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                                  "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                                }
                              },
                              "id": 882,
                              "indexExpression": {
                                "id": 881,
                                "name": "requestId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 849,
                                "src": "17278:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17269:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage",
                                "typeString": "struct RequestManager.Request storage ref"
                              }
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "invalidFillIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "17269:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 886,
                          "indexExpression": {
                            "expression": {
                              "id": 884,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "17304:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 885,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fillId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72,
                            "src": "17304:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17269:48:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20616c726561647920696e76616c696461746564",
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17331:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        },
                        "value": "Fill already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        }
                      ],
                      "id": 879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17247:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17247:120:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 890,
                  "nodeType": "ExpressionStatement",
                  "src": "17247:120:10"
                },
                {
                  "assignments": [
                    892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 892,
                      "mutability": "mutable",
                      "name": "periodExtension",
                      "nameLocation": "17386:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "17378:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17378:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 894,
                  "initialValue": {
                    "id": 893,
                    "name": "challengePeriodExtension",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 187,
                    "src": "17404:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17378:50:10"
                },
                {
                  "assignments": [
                    896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 896,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "17446:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "17438:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17438:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "expression": {
                      "id": 897,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "17456:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "17456:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17438:31:10"
                },
                {
                  "assignments": [
                    901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 901,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "17486:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "17479:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 900,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "17479:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 904,
                  "initialValue": {
                    "expression": {
                      "id": 902,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "17501:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 903,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58,
                    "src": "17501:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17479:40:10"
                },
                {
                  "assignments": [
                    906
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 906,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "17536:20:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1059,
                      "src": "17529:27:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 905,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "17529:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 909,
                  "initialValue": {
                    "expression": {
                      "id": 907,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "17559:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66,
                    "src": "17559:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17529:56:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 910,
                      "name": "claimerStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "17600:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 911,
                      "name": "challengerStakeTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 906,
                      "src": "17615:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "17600:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 968,
                    "nodeType": "Block",
                    "src": "18062:240:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 949,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18084:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 950,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "18084:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 951,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "18098:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "18084:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18107:24:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                                "typeString": "literal_string \"Not eligible to outbid\""
                              },
                              "value": "Not eligible to outbid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                                "typeString": "literal_string \"Not eligible to outbid\""
                              }
                            ],
                            "id": 948,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18076:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18076:56:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 955,
                        "nodeType": "ExpressionStatement",
                        "src": "18076:56:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 957,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18171:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "18171:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  },
                                  "id": 961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 959,
                                    "name": "challengerStakeTotal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "18184:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 960,
                                    "name": "claimerStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 901,
                                    "src": "18207:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "src": "18184:35:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 962,
                                  "name": "claimStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 178,
                                  "src": "18222:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "18184:48:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "18171:61:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18250:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              },
                              "value": "Not enough stake provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              }
                            ],
                            "id": 956,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18146:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18146:145:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 967,
                        "nodeType": "ExpressionStatement",
                        "src": "18146:145:10"
                      }
                    ]
                  },
                  "id": 969,
                  "nodeType": "IfStatement",
                  "src": "17596:706:10",
                  "trueBody": {
                    "id": 947,
                    "nodeType": "Block",
                    "src": "17637:419:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 913,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "17655:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17679:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17655:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 926,
                        "nodeType": "IfStatement",
                        "src": "17651:171:10",
                        "trueBody": {
                          "id": 925,
                          "nodeType": "Block",
                          "src": "17682:140:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 916,
                                  "name": "periodExtension",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 892,
                                  "src": "17700:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 917,
                                    "name": "finalityPeriods",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 211,
                                    "src": "17719:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 922,
                                  "indexExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 918,
                                        "name": "requests",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 217,
                                        "src": "17756:8:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                                          "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                                        }
                                      },
                                      "id": 920,
                                      "indexExpression": {
                                        "id": 919,
                                        "name": "requestId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 849,
                                        "src": "17765:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "17756:19:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$52_storage",
                                        "typeString": "struct RequestManager.Request storage ref"
                                      }
                                    },
                                    "id": 921,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "targetChainId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "17756:33:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17719:88:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17700:107:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 924,
                              "nodeType": "ExpressionStatement",
                              "src": "17700:107:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 928,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17843:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17843:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 930,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 896,
                                "src": "17857:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17843:21:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74206368616c6c656e6765206f776e20636c61696d",
                              "id": 932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17866:28:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              },
                              "value": "Cannot challenge own claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64fb5de882b2bc56d2cbaf6fec54a1e8989ac954bff861bb575a51a0c2e2517c",
                                "typeString": "literal_string \"Cannot challenge own claim\""
                              }
                            ],
                            "id": 927,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17835:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17835:60:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 934,
                        "nodeType": "ExpressionStatement",
                        "src": "17835:60:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 936,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17934:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "17934:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  },
                                  "id": 940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 938,
                                    "name": "claimerStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 901,
                                    "src": "17947:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 939,
                                    "name": "challengerStakeTotal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 906,
                                    "src": "17962:20:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "src": "17947:35:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17985:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "17947:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "17934:52:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f756768207374616b652070726f7669646564",
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18004:27:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              },
                              "value": "Not enough stake provided"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f1b113b6f456a64bcbd409e272149b4abdef1b69f8076e949cba48f176e25e5",
                                "typeString": "literal_string \"Not enough stake provided\""
                              }
                            ],
                            "id": 935,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17909:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17909:136:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 946,
                        "nodeType": "ExpressionStatement",
                        "src": "17909:136:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 970,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "18316:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "18316:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 972,
                      "name": "claimer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "18330:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18316:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "18450:246:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 989,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "18464:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastChallenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64,
                            "src": "18464:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 992,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "18487:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "18487:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "18464:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 995,
                        "nodeType": "ExpressionStatement",
                        "src": "18464:33:10"
                      },
                      {
                        "expression": {
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 996,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 843,
                                "src": "18511:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1000,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "18511:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 1001,
                            "indexExpression": {
                              "expression": {
                                "id": 998,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18535:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18535:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18511:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1004,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18557:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "18557:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18550:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 1002,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "18550:6:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18550:17:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "18511:56:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1008,
                        "nodeType": "ExpressionStatement",
                        "src": "18511:56:10"
                      },
                      {
                        "expression": {
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1009,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "18581:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1012,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18612:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "18612:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18605:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 1010,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "18605:6:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18605:17:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "18581:41:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1016,
                        "nodeType": "ExpressionStatement",
                        "src": "18581:41:10"
                      },
                      {
                        "expression": {
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1017,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "18636:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1019,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "18636:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1020,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 906,
                            "src": "18665:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "18636:49:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1022,
                        "nodeType": "ExpressionStatement",
                        "src": "18636:49:10"
                      }
                    ]
                  },
                  "id": 1024,
                  "nodeType": "IfStatement",
                  "src": "18312:384:10",
                  "trueBody": {
                    "id": 988,
                    "nodeType": "Block",
                    "src": "18339:105:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 974,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "18353:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 977,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "18376:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "18376:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18369:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint96_$",
                                "typeString": "type(uint96)"
                              },
                              "typeName": {
                                "id": 975,
                                "name": "uint96",
                                "nodeType": "ElementaryTypeName",
                                "src": "18369:6:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18369:17:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "18353:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 981,
                        "nodeType": "ExpressionStatement",
                        "src": "18353:33:10"
                      },
                      {
                        "expression": {
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 982,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "18400:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 984,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "18400:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 985,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "18421:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "18400:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 987,
                        "nodeType": "ExpressionStatement",
                        "src": "18400:33:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1025,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "18710:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "18710:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 1027,
                        "name": "periodExtension",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 892,
                        "src": "18728:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "18710:33:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1029,
                      "name": "termination",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 854,
                      "src": "18746:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18710:47:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1045,
                  "nodeType": "IfStatement",
                  "src": "18706:170:10",
                  "trueBody": {
                    "id": 1044,
                    "nodeType": "Block",
                    "src": "18759:117:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1031,
                            "name": "termination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "18773:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1032,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "18787:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "18787:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1034,
                              "name": "periodExtension",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "18805:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18787:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18773:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1037,
                        "nodeType": "ExpressionStatement",
                        "src": "18773:47:10"
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1038,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "18834:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "termination",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 70,
                            "src": "18834:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1041,
                            "name": "termination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "18854:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18834:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "18834:31:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1047,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "18914:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1048,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 835,
                        "src": "18937:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1049,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "18958:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1050,
                        "name": "claimerStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "18979:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 1051,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "19005:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastChallenger",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64,
                        "src": "19005:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1053,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "19039:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1054,
                        "name": "termination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "19073:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1055,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "19098:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "fillId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "19098:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1046,
                      "name": "ClaimMade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "18891:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint96_$_t_address_$_t_uint96_$_t_address_$_t_uint96_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint96,address,uint96,address,uint96,uint256,bytes32)"
                      }
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18891:229:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1058,
                  "nodeType": "EmitStatement",
                  "src": "18886:234:10"
                }
              ]
            },
            "documentation": {
              "id": 833,
              "nodeType": "StructuredDocumentation",
              "src": "15611:1187:10",
              "text": "Challenge an existing claim.\n The claim must still be valid at call time.\n This function implements one round of the challenge game.\n The original claimer is allowed to call this function only\n after someone else made a challenge, i.e. every second round.\n However, once the original claimer counter-challenges, anyone\n can join the game and make another challenge.\n The caller must provide enough native tokens as their stake.\n For the original claimer, the minimum stake is\n ``challengerStakeTotal - claimerStake + claimStake``.\n For challengers, the minimum stake is\n ``claimerStake - challengerStakeTotal + 1``.\n An example (time flows downwards, claimStake = 10)::\n   claimRequest() by Max [stakes 10]\n   challengeClaim() by Alice [stakes 11]\n   challengeClaim() by Max [stakes 11]\n   challengeClaim() by Bob [stakes 16]\n In this example, if Max didn't want to lose the challenge game to\n Alice and Bob, he would have to challenge with a stake of at least 16.\n @param claimId The claim ID."
            },
            "functionSelector": "b4d1d27a",
            "id": 1060,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 838,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 835,
                    "src": "16897:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                ],
                "id": 839,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 837,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 342,
                  "src": "16884:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "16884:21:10"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "16812:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "16834:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1060,
                  "src": "16827:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "16827:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16826:16:10"
            },
            "returnParameters": {
              "id": 840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16910:0:10"
            },
            "scope": 1818,
            "src": "16803:2324:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1077,
              "nodeType": "Block",
              "src": "19785:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19811:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19811:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1074,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "19823:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 1071,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1229,
                      "src": "19802:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$_t_address_$",
                        "typeString": "function (address,uint96) returns (address)"
                      }
                    },
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19802:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1070,
                  "id": 1076,
                  "nodeType": "Return",
                  "src": "19795:36:10"
                }
              ]
            },
            "documentation": {
              "id": 1061,
              "nodeType": "StructuredDocumentation",
              "src": "19133:536:10",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @return The claim stakes receiver."
            },
            "functionSelector": "dee4dea0",
            "id": 1078,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1066,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1063,
                    "src": "19746:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                ],
                "id": 1067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1065,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 342,
                  "src": "19733:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "19733:21:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "19683:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "19699:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "19692:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19692:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19691:16:10"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1069,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1078,
                  "src": "19772:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19772:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19771:9:10"
            },
            "scope": 1818,
            "src": "19674:164:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1228,
              "nodeType": "Block",
              "src": "20736:1461:10",
              "statements": [
                {
                  "assignments": [
                    1093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "20760:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "20746:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1092,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1091,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "20746:5:10"
                        },
                        "referencedDeclaration": 73,
                        "src": "20746:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1097,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1094,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "20768:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1096,
                    "indexExpression": {
                      "id": 1095,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "20775:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20768:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$73_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20746:37:10"
                },
                {
                  "assignments": [
                    1099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1099,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "20801:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "20793:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1098,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "20793:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1102,
                  "initialValue": {
                    "expression": {
                      "id": 1100,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "20811:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "20811:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20793:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1104,
                            "name": "participant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "20855:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1105,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1099,
                            "src": "20870:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "20855:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 1107,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "20881:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1108,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "20881:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 1110,
                            "indexExpression": {
                              "id": 1109,
                              "name": "participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1081,
                              "src": "20905:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20881:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20920:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20881:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20855:66:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616e20616374697665207061727469636970616e7420696e207468697320636c61696d",
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20935:41:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b89ff78c6da2e318f493253e20534d9bc747eb96f8fef4de5e3c8d43d89728c",
                          "typeString": "literal_string \"Not an active participant in this claim\""
                        },
                        "value": "Not an active participant in this claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b89ff78c6da2e318f493253e20534d9bc747eb96f8fef4de5e3c8d43d89728c",
                          "typeString": "literal_string \"Not an active participant in this claim\""
                        }
                      ],
                      "id": 1103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20834:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20834:152:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "20834:152:10"
                },
                {
                  "assignments": [
                    1118
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "21004:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "20996:17:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20996:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1121,
                  "initialValue": {
                    "expression": {
                      "id": 1119,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "21016:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "requestId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 54,
                    "src": "21016:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20996:35:10"
                },
                {
                  "assignments": [
                    1124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "21057:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "21041:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1123,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1122,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "21041:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "21041:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1128,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1125,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "21067:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1127,
                    "indexExpression": {
                      "id": 1126,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1118,
                      "src": "21076:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21067:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21041:45:10"
                },
                {
                  "assignments": [
                    1130,
                    1132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "stakeRecipient",
                      "nameLocation": "21106:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "21098:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "21098:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1132,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "21130:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "21122:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21122:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1137,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1134,
                        "name": "participant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "21173:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1135,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "21198:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 1133,
                      "name": "resolveClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "21147:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint96_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (address,uint96) view returns (address,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21147:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21097:118:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 1138,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "21230:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengersStakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62,
                        "src": "21230:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                          "typeString": "mapping(address => uint96)"
                        }
                      },
                      "id": 1141,
                      "indexExpression": {
                        "id": 1140,
                        "name": "stakeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "21254:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "21230:39:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21272:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21230:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1153,
                  "nodeType": "IfStatement",
                  "src": "21226:154:10",
                  "trueBody": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "21275:105:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 1144,
                                "name": "claim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1093,
                                "src": "21326:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                  "typeString": "struct RequestManager.Claim storage pointer"
                                }
                              },
                              "id": 1147,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "challengersStakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "21326:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                "typeString": "mapping(address => uint96)"
                              }
                            },
                            "id": 1148,
                            "indexExpression": {
                              "id": 1146,
                              "name": "stakeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "21350:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21326:39:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21368:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21326:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "21326:43:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1155
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1155,
                      "mutability": "mutable",
                      "name": "withdrawnAmount",
                      "nameLocation": "21398:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "21390:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1154,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21390:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1158,
                  "initialValue": {
                    "expression": {
                      "id": 1156,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "21416:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawnAmount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68,
                    "src": "21416:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21390:47:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1159,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "21523:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21542:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21523:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1169,
                  "nodeType": "IfStatement",
                  "src": "21519:76:10",
                  "trueBody": {
                    "id": 1168,
                    "nodeType": "Block",
                    "src": "21545:50:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1162,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "21559:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "activeClaims",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "21559:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21583:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "21559:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ExpressionStatement",
                        "src": "21559:25:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1170,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "21604:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1171,
                      "name": "ethToTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1132,
                      "src": "21623:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21604:32:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "21604:32:10"
                },
                {
                  "expression": {
                    "id": 1178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1174,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "21646:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawnAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68,
                      "src": "21646:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1177,
                      "name": "withdrawnAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "21670:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21646:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1179,
                  "nodeType": "ExpressionStatement",
                  "src": "21646:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1181,
                          "name": "withdrawnAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1155,
                          "src": "21717:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1182,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "21736:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1183,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "21736:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1184,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1093,
                              "src": "21757:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStakeTotal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66,
                            "src": "21757:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "21736:47:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "21717:66:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e7420746f20776974686472617720746f6f206c61726765",
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21797:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        },
                        "value": "Amount to withdraw too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fbc1cd561c6fdb8c44ffb8537b819c0b098bbbbb6ac5255fbe98d734e5cf1dc0",
                          "typeString": "literal_string \"Amount to withdraw too large\""
                        }
                      ],
                      "id": 1180,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21696:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21696:141:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "21696:141:10"
                },
                {
                  "assignments": [
                    1192,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "21854:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1228,
                      "src": "21849:9:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "21849:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1199,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21906:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1193,
                          "name": "stakeRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "21864:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "21864:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1195,
                          "name": "ethToTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "21891:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "21864:41:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21864:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21848:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1201,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "21927:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21933:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "21919:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21919:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "21919:37:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1206,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1083,
                        "src": "21992:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1207,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "22001:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1208,
                        "name": "stakeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "22012:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1205,
                      "name": "ClaimStakeWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "21972:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (uint96,bytes32,address)"
                      }
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21972:55:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1210,
                  "nodeType": "EmitStatement",
                  "src": "21967:60:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 1214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1211,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "22042:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawClaimId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43,
                        "src": "22042:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22069:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "22042:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1215,
                        "name": "stakeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "22074:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 1216,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1099,
                        "src": "22092:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "22074:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "22042:57:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1225,
                  "nodeType": "IfStatement",
                  "src": "22038:121:10",
                  "trueBody": {
                    "id": 1224,
                    "nodeType": "Block",
                    "src": "22101:58:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1220,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "22131:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            {
                              "id": 1221,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "22140:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 1219,
                            "name": "withdrawDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1512,
                            "src": "22115:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Request_$52_storage_ptr_$_t_uint96_$returns$__$",
                              "typeString": "function (struct RequestManager.Request storage pointer,uint96)"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22115:33:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "22115:33:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1226,
                    "name": "stakeRecipient",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1130,
                    "src": "22176:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1090,
                  "id": 1227,
                  "nodeType": "Return",
                  "src": "22169:21:10"
                }
              ]
            },
            "documentation": {
              "id": 1079,
              "nodeType": "StructuredDocumentation",
              "src": "19844:757:10",
              "text": "Withdraw the deposit that the request submitter left with the contract,\n as well as the staked native tokens associated with the claim.\n This function is called on behalf of a participant. Only a participant\n may receive the funds if he is the winner of the challenge or the claim is valid.\n In case the caller of this function is a challenger that won the game,\n they will only get their staked native tokens plus the reward in the form\n of full (sole challenger) or partial (multiple challengers) amount\n of native tokens staked by the dishonest claimer.\n @param claimId The claim ID.\n @param participant The participant.\n @return The claim stakes receiver."
            },
            "functionSelector": "8c8c3c9d",
            "id": 1229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1086,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1083,
                    "src": "20697:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  }
                ],
                "id": 1087,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1085,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 342,
                  "src": "20684:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "20684:21:10"
              }
            ],
            "name": "withdraw",
            "nameLocation": "20615:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "20632:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "20624:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20624:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "20652:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "20645:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "20645:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20623:37:10"
            },
            "returnParameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1229,
                  "src": "20723:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20723:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20722:9:10"
            },
            "scope": 1818,
            "src": "20606:1591:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "22330:3307:10",
              "statements": [
                {
                  "assignments": [
                    1242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1242,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "22354:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22340:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1241,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1240,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "22340:5:10"
                        },
                        "referencedDeclaration": 73,
                        "src": "22340:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1246,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1243,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "22362:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1245,
                    "indexExpression": {
                      "id": 1244,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1233,
                      "src": "22369:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22362:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$73_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22340:37:10"
                },
                {
                  "assignments": [
                    1249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "22403:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22387:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1247,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "22387:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "22387:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1254,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1250,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "22413:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1253,
                    "indexExpression": {
                      "expression": {
                        "id": 1251,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "22422:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54,
                      "src": "22422:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "22413:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22387:51:10"
                },
                {
                  "assignments": [
                    1256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1256,
                      "mutability": "mutable",
                      "name": "withdrawClaimId",
                      "nameLocation": "22455:15:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22448:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1255,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "22448:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1259,
                  "initialValue": {
                    "expression": {
                      "id": 1257,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "22473:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1258,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "withdrawClaimId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43,
                    "src": "22473:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22448:48:10"
                },
                {
                  "assignments": [
                    1261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1261,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "22514:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22506:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1260,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22506:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1264,
                  "initialValue": {
                    "expression": {
                      "id": 1262,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "22524:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "22524:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22506:31:10"
                },
                {
                  "assignments": [
                    1266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1266,
                      "mutability": "mutable",
                      "name": "claimerStake",
                      "nameLocation": "22554:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22547:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "22547:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1269,
                  "initialValue": {
                    "expression": {
                      "id": 1267,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "22569:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimerStake",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58,
                    "src": "22569:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22547:40:10"
                },
                {
                  "assignments": [
                    1271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1271,
                      "mutability": "mutable",
                      "name": "challengerStakeTotal",
                      "nameLocation": "22604:20:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22597:27:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1270,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "22597:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1274,
                  "initialValue": {
                    "expression": {
                      "id": 1272,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "22627:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1273,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "challengerStakeTotal",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66,
                    "src": "22627:26:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22597:56:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1276,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1242,
                            "src": "22684:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawnAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "22684:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1278,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "22708:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1279,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "22723:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "22708:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "22684:59:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20616c72656164792077697468647261776e",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22757:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        },
                        "value": "Claim already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed46cfba65dedd80d8275fc8dce90ac19cc49eb8cac5fe8e04a827801d5c7ac",
                          "typeString": "literal_string \"Claim already withdrawn\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22663:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22663:129:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "22663:129:10"
                },
                {
                  "assignments": [
                    1286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "claimValid",
                      "nameLocation": "22808:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "22803:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "22803:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1288,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22821:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22803:23:10"
                },
                {
                  "assignments": [
                    1290
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "filler",
                      "nameLocation": "23264:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "23256:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1289,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "23256:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1293,
                  "initialValue": {
                    "expression": {
                      "id": 1291,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "23273:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "filler",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 45,
                    "src": "23273:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23256:31:10"
                },
                {
                  "assignments": [
                    1295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "fillId",
                      "nameLocation": "23305:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "23297:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1294,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "23297:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1298,
                  "initialValue": {
                    "expression": {
                      "id": 1296,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1249,
                      "src": "23314:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request storage pointer"
                      }
                    },
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "fillId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47,
                    "src": "23314:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23297:31:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1299,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1290,
                      "src": "23343:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23361:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "23353:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23353:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23353:10:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "23343:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "baseExpression": {
                        "expression": {
                          "id": 1317,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "23495:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "23495:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1320,
                      "indexExpression": {
                        "id": 1319,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1295,
                        "src": "23518:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "23495:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1326,
                          "name": "withdrawClaimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "23619:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23638:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23619:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1362,
                        "nodeType": "Block",
                        "src": "23848:246:10",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1352,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1348,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "23926:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "23926:15:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1350,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1242,
                                      "src": "23945:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "termination",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 70,
                                    "src": "23945:17:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "23926:36:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                                  "id": 1353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23980:27:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  },
                                  "value": "Claim period not finished"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                    "typeString": "literal_string \"Claim period not finished\""
                                  }
                                ],
                                "id": 1347,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "23901:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23901:120:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1355,
                            "nodeType": "ExpressionStatement",
                            "src": "23901:120:10"
                          },
                          {
                            "expression": {
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1356,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1286,
                                "src": "24035:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                "id": 1359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1357,
                                  "name": "claimerStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1266,
                                  "src": "24048:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1358,
                                  "name": "challengerStakeTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1271,
                                  "src": "24063:20:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "24048:35:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "24035:48:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1361,
                            "nodeType": "ExpressionStatement",
                            "src": "24035:48:10"
                          }
                        ]
                      },
                      "id": 1363,
                      "nodeType": "IfStatement",
                      "src": "23615:479:10",
                      "trueBody": {
                        "id": 1346,
                        "nodeType": "Block",
                        "src": "23641:201:10",
                        "statements": [
                          {
                            "expression": {
                              "id": 1344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1329,
                                "name": "claimValid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1286,
                                "src": "23694:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1335,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1330,
                                    "name": "claimer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1261,
                                    "src": "23723:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1331,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 223,
                                        "src": "23734:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                                          "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1333,
                                      "indexExpression": {
                                        "id": 1332,
                                        "name": "withdrawClaimId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1256,
                                        "src": "23741:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23734:23:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$73_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1334,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "claimer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 56,
                                    "src": "23734:31:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "23723:42:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "id": 1342,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1336,
                                      "name": "claim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1242,
                                      "src": "23785:5:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                        "typeString": "struct RequestManager.Claim storage pointer"
                                      }
                                    },
                                    "id": 1337,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fillId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 72,
                                    "src": "23785:12:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1338,
                                        "name": "claims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 223,
                                        "src": "23801:6:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                                          "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                                        }
                                      },
                                      "id": 1340,
                                      "indexExpression": {
                                        "id": 1339,
                                        "name": "withdrawClaimId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1256,
                                        "src": "23808:15:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "23801:23:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Claim_$73_storage",
                                        "typeString": "struct RequestManager.Claim storage ref"
                                      }
                                    },
                                    "id": 1341,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fillId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 72,
                                    "src": "23801:30:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "src": "23785:46:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "23723:108:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "23694:137:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1345,
                            "nodeType": "ExpressionStatement",
                            "src": "23694:137:10"
                          }
                        ]
                      }
                    },
                    "id": 1364,
                    "nodeType": "IfStatement",
                    "src": "23491:603:10",
                    "trueBody": {
                      "id": 1325,
                      "nodeType": "Block",
                      "src": "23527:82:10",
                      "statements": [
                        {
                          "expression": {
                            "id": 1323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1321,
                              "name": "claimValid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1286,
                              "src": "23580:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "66616c7365",
                              "id": 1322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "23593:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "23580:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1324,
                          "nodeType": "ExpressionStatement",
                          "src": "23580:18:10"
                        }
                      ]
                    }
                  },
                  "id": 1365,
                  "nodeType": "IfStatement",
                  "src": "23339:755:10",
                  "trueBody": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "23365:120:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1305,
                            "name": "claimValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "23418:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1306,
                                "name": "filler",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1290,
                                "src": "23431:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1307,
                                "name": "claimer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1261,
                                "src": "23441:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "23431:17:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1309,
                                "name": "fillId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1295,
                                "src": "23452:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1310,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1242,
                                  "src": "23462:5:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 1311,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fillId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 72,
                                "src": "23462:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "23452:22:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "23431:43:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "23418:56:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1315,
                        "nodeType": "ExpressionStatement",
                        "src": "23418:56:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1367,
                      "mutability": "mutable",
                      "name": "ethToTransfer",
                      "nameLocation": "24165:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "24158:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 1366,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "24158:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1368,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24158:20:10"
                },
                {
                  "assignments": [
                    1370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1370,
                      "mutability": "mutable",
                      "name": "stakeRecipient",
                      "nameLocation": "24196:14:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1450,
                      "src": "24188:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1369,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "24188:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1371,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "24188:22:10"
                },
                {
                  "condition": {
                    "id": 1372,
                    "name": "claimValid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1286,
                    "src": "24225:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 1386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1384,
                        "name": "challengerStakeTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1271,
                        "src": "24424:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24447:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "24424:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1417,
                      "nodeType": "Block",
                      "src": "24734:272:10",
                      "statements": [
                        {
                          "expression": {
                            "id": 1411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1408,
                              "name": "stakeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1370,
                              "src": "24929:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1409,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1859,
                                "src": "24946:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24946:7:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "24929:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1412,
                          "nodeType": "ExpressionStatement",
                          "src": "24929:24:10"
                        },
                        {
                          "expression": {
                            "id": 1415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1413,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "24967:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1414,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "24983:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "24967:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "id": 1416,
                          "nodeType": "ExpressionStatement",
                          "src": "24967:28:10"
                        }
                      ]
                    },
                    "id": 1418,
                    "nodeType": "IfStatement",
                    "src": "24420:586:10",
                    "trueBody": {
                      "id": 1407,
                      "nodeType": "Block",
                      "src": "24450:278:10",
                      "statements": [
                        {
                          "expression": {
                            "id": 1389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1387,
                              "name": "stakeRecipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1370,
                              "src": "24538:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1388,
                              "name": "participant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1231,
                              "src": "24555:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "24538:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1390,
                          "nodeType": "ExpressionStatement",
                          "src": "24538:28:10"
                        },
                        {
                          "expression": {
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1391,
                              "name": "ethToTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "24580:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "32",
                                "id": 1392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24596:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1393,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1242,
                                    "src": "24600:5:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                                      "typeString": "struct RequestManager.Claim storage pointer"
                                    }
                                  },
                                  "id": 1394,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "challengersStakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 62,
                                  "src": "24600:23:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint96_$",
                                    "typeString": "mapping(address => uint96)"
                                  }
                                },
                                "id": 1396,
                                "indexExpression": {
                                  "id": 1395,
                                  "name": "stakeRecipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1370,
                                  "src": "24624:14:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24600:39:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "src": "24596:43:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "24580:59:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "id": 1399,
                          "nodeType": "ExpressionStatement",
                          "src": "24580:59:10"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                },
                                "id": 1403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1401,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "24661:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24677:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "24661:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4368616c6c656e67657220686173206e6f7468696e6720746f207769746864726177",
                                "id": 1404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24680:36:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                },
                                "value": "Challenger has nothing to withdraw"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_53dcae0c26834ddf9df4522d4ebdb30b7c2bd99b5ce87dd1bca47f3b3a7ab017",
                                  "typeString": "literal_string \"Challenger has nothing to withdraw\""
                                }
                              ],
                              "id": 1400,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "24653:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24653:64:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1406,
                          "nodeType": "ExpressionStatement",
                          "src": "24653:64:10"
                        }
                      ]
                    }
                  },
                  "id": 1419,
                  "nodeType": "IfStatement",
                  "src": "24221:785:10",
                  "trueBody": {
                    "id": 1383,
                    "nodeType": "Block",
                    "src": "24237:177:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1373,
                            "name": "stakeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1370,
                            "src": "24314:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1374,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1261,
                            "src": "24331:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "24314:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1376,
                        "nodeType": "ExpressionStatement",
                        "src": "24314:24:10"
                      },
                      {
                        "expression": {
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1377,
                            "name": "ethToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1367,
                            "src": "24352:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 1380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1378,
                              "name": "claimerStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "24368:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1379,
                              "name": "challengerStakeTotal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1271,
                              "src": "24383:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "24368:35:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "24352:51:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "24352:51:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1420,
                      "name": "stakeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "25297:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 1421,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1242,
                        "src": "25315:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 1422,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastChallenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64,
                      "src": "25315:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "25297:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1445,
                  "nodeType": "IfStatement",
                  "src": "25293:289:10",
                  "trueBody": {
                    "id": 1444,
                    "nodeType": "Block",
                    "src": "25337:245:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1424,
                            "name": "claimerStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "25355:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1425,
                            "name": "challengerStakeTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1271,
                            "src": "25370:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "src": "25355:35:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1442,
                          "nodeType": "Block",
                          "src": "25485:87:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1435,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "25503:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      },
                                      "id": 1438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1436,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1271,
                                        "src": "25521:20:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1437,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1266,
                                        "src": "25544:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "src": "25521:35:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "id": 1439,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "25520:37:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "25503:54:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 1441,
                              "nodeType": "ExpressionStatement",
                              "src": "25503:54:10"
                            }
                          ]
                        },
                        "id": 1443,
                        "nodeType": "IfStatement",
                        "src": "25351:221:10",
                        "trueBody": {
                          "id": 1434,
                          "nodeType": "Block",
                          "src": "25392:87:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1427,
                                  "name": "ethToTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "25410:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      },
                                      "id": 1430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1428,
                                        "name": "claimerStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1266,
                                        "src": "25428:12:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1429,
                                        "name": "challengerStakeTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1271,
                                        "src": "25443:20:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint96",
                                          "typeString": "uint96"
                                        }
                                      },
                                      "src": "25428:35:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint96",
                                        "typeString": "uint96"
                                      }
                                    }
                                  ],
                                  "id": 1431,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "25427:37:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint96",
                                    "typeString": "uint96"
                                  }
                                },
                                "src": "25410:54:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "id": 1433,
                              "nodeType": "ExpressionStatement",
                              "src": "25410:54:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 1446,
                        "name": "stakeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1370,
                        "src": "25600:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1447,
                        "name": "ethToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1367,
                        "src": "25616:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "id": 1448,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "25599:31:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint96_$",
                      "typeString": "tuple(address,uint96)"
                    }
                  },
                  "functionReturnParameters": 1239,
                  "id": 1449,
                  "nodeType": "Return",
                  "src": "25592:38:10"
                }
              ]
            },
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "resolveClaim",
            "nameLocation": "22212:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "participant",
                  "nameLocation": "22233:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "22225:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22225:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "22253:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "22246:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "22246:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22224:37:10"
            },
            "returnParameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "22308:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22308:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "22317:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22317:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22307:18:10"
            },
            "scope": 1818,
            "src": "22203:3434:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1511,
              "nodeType": "Block",
              "src": "25717:428:10",
              "statements": [
                {
                  "assignments": [
                    1461
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1461,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "25741:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1511,
                      "src": "25727:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 1460,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1459,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73,
                          "src": "25727:5:10"
                        },
                        "referencedDeclaration": 73,
                        "src": "25727:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1465,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1462,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "25749:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Claim_$73_storage_$",
                        "typeString": "mapping(uint96 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 1464,
                    "indexExpression": {
                      "id": 1463,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "25756:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25749:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$73_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25727:37:10"
                },
                {
                  "assignments": [
                    1467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1467,
                      "mutability": "mutable",
                      "name": "claimer",
                      "nameLocation": "25782:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1511,
                      "src": "25774:15:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1466,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25774:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1470,
                  "initialValue": {
                    "expression": {
                      "id": 1468,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "25792:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                        "typeString": "struct RequestManager.Claim storage pointer"
                      }
                    },
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "claimer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "25792:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25774:31:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1472,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1461,
                          "src": "25837:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$73_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54,
                        "src": "25837:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1474,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "25854:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1471,
                      "name": "DepositWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "25820:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25820:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1476,
                  "nodeType": "EmitStatement",
                  "src": "25815:47:10"
                },
                {
                  "expression": {
                    "id": 1481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1477,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "25873:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "25873:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1480,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "25899:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "25873:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1482,
                  "nodeType": "ExpressionStatement",
                  "src": "25873:33:10"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1483,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "25917:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                            "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                          }
                        },
                        "id": 1486,
                        "indexExpression": {
                          "expression": {
                            "id": 1484,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "25924:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sourceTokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "25924:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25917:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage",
                          "typeString": "struct RequestManager.Token storage ref"
                        }
                      },
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectedProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "25917:56:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1488,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "25977:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "protocolFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "25977:32:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "25917:92:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "25917:92:10"
                },
                {
                  "assignments": [
                    1494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1494,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "26027:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1511,
                      "src": "26020:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2117",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1493,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1492,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2117,
                          "src": "26020:6:10"
                        },
                        "referencedDeclaration": 2117,
                        "src": "26020:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1499,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1496,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "26042:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1497,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29,
                        "src": "26042:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1495,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2117,
                      "src": "26035:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2117_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26035:34:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2117",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26020:49:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1503,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "26098:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1504,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "26107:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33,
                          "src": "26107:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 1506,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1454,
                            "src": "26124:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1507,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lpFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37,
                          "src": "26124:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "26107:30:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1500,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1494,
                        "src": "26079:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2149,
                      "src": "26079:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2117_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2117_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26079:59:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "26079:59:10"
                }
              ]
            },
            "id": 1512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDeposit",
            "nameLocation": "25652:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "25684:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1512,
                  "src": "25668:23:10",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 1453,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1452,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52,
                      "src": "25668:7:10"
                    },
                    "referencedDeclaration": 52,
                    "src": "25668:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "25700:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1512,
                  "src": "25693:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "25693:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25667:41:10"
            },
            "returnParameters": {
              "id": 1458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25717:0:10"
            },
            "scope": 1818,
            "src": "25643:502:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1530,
              "nodeType": "Block",
              "src": "26779:64:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1523,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "26796:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                            "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                          }
                        },
                        "id": 1525,
                        "indexExpression": {
                          "id": 1524,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1515,
                          "src": "26805:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "26796:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage",
                          "typeString": "struct RequestManager.Request storage ref"
                        }
                      },
                      "id": 1526,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawClaimId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "26796:35:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26835:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "26796:40:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1522,
                  "id": 1529,
                  "nodeType": "Return",
                  "src": "26789:47:10"
                }
              ]
            },
            "documentation": {
              "id": 1513,
              "nodeType": "StructuredDocumentation",
              "src": "26151:494:10",
              "text": "Returns whether a request's deposit was withdrawn or not\n This can be true in two cases:\n 1. The deposit was withdrawn after the request was claimed and filled.\n 2. The submitter withdrew the deposit after the request's expiry.\n .. seealso:: :sol:func:`withdraw`\n .. seealso:: :sol:func:`withdrawExpiredRequest`\n @param requestId The request ID\n @return Whether the deposit corresponding to the given request ID was withdrawn"
            },
            "functionSelector": "0e3a918c",
            "id": 1531,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1518,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1515,
                    "src": "26741:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1517,
                  "name": "validRequestId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 322,
                  "src": "26726:14:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "26726:25:10"
              }
            ],
            "name": "isWithdrawn",
            "nameLocation": "26659:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "26679:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1531,
                  "src": "26671:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1514,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "26671:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26670:19:10"
            },
            "returnParameters": {
              "id": 1522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1531,
                  "src": "26769:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1520,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "26769:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26768:6:10"
            },
            "scope": 1818,
            "src": "26650:193:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "27296:278:10",
              "statements": [
                {
                  "assignments": [
                    1542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1542,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "27314:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1576,
                      "src": "27306:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "27306:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1547,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 1543,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "27323:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                          "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                        }
                      },
                      "id": 1545,
                      "indexExpression": {
                        "id": 1544,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1534,
                        "src": "27330:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "27323:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$84_storage",
                        "typeString": "struct RequestManager.Token storage ref"
                      }
                    },
                    "id": 1546,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collectedProtocolFees",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83,
                    "src": "27323:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27306:59:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1549,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1542,
                          "src": "27383:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27392:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "27383:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f746f636f6c20666565206973207a65726f",
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27395:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        },
                        "value": "Protocol fee is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8ad1c74ab92ff10c0820b04fa1725b871af2e2542ec5c6a08e76dbfc13ba06",
                          "typeString": "literal_string \"Protocol fee is zero\""
                        }
                      ],
                      "id": 1548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27375:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27375:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "27375:43:10"
                },
                {
                  "expression": {
                    "id": 1560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1555,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "27428:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                            "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                          }
                        },
                        "id": 1557,
                        "indexExpression": {
                          "id": 1556,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1534,
                          "src": "27435:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "27428:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage",
                          "typeString": "struct RequestManager.Token storage ref"
                        }
                      },
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collectedProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83,
                      "src": "27428:42:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "27473:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "27428:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1561,
                  "nodeType": "ExpressionStatement",
                  "src": "27428:46:10"
                },
                {
                  "assignments": [
                    1564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1564,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "27492:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1576,
                      "src": "27485:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2117",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1563,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1562,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2117,
                          "src": "27485:6:10"
                        },
                        "referencedDeclaration": 2117,
                        "src": "27485:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1568,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1566,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1534,
                        "src": "27507:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1565,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2117,
                      "src": "27500:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$2117_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27500:20:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2117",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27485:35:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1572,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1536,
                        "src": "27549:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1573,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1542,
                        "src": "27560:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1569,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "27530:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2117",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2149,
                      "src": "27530:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2117_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2117_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27530:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1575,
                  "nodeType": "ExpressionStatement",
                  "src": "27530:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1532,
              "nodeType": "StructuredDocumentation",
              "src": "26849:332:10",
              "text": "Withdraw protocol fees collected by the contract.\n Protocol fees are paid in token transferred.\n .. note:: This function can only be called by the contract owner.\n @param tokenAddress The address of the token contract.\n @param recipient The address the fees should be sent to."
            },
            "functionSelector": "cf7b287f",
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1538,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1850,
                  "src": "27282:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "27282:9:10"
              }
            ],
            "name": "withdrawProtocolFees",
            "nameLocation": "27195:20:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "27224:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "27216:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27216:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1536,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "27246:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "27238:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27238:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27215:41:10"
            },
            "returnParameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27296:0:10"
            },
            "scope": 1818,
            "src": "27186:388:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1645,
              "nodeType": "Block",
              "src": "27768:535:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1593,
                          "name": "lpFeePPM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1585,
                          "src": "27786:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3939395f393939",
                          "id": 1594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27798:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_999999_by_1",
                            "typeString": "int_const 999999"
                          },
                          "value": "999_999"
                        },
                        "src": "27786:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d2050504d206f6620393939393939206578636565646564",
                        "id": 1596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27807:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc6ff3dc4d84c986e73c0da29ac18687d279f8a5d01bde11c3824d0de87d9570",
                          "typeString": "literal_string \"Maximum PPM of 999999 exceeded\""
                        },
                        "value": "Maximum PPM of 999999 exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc6ff3dc4d84c986e73c0da29ac18687d279f8a5d01bde11c3824d0de87d9570",
                          "typeString": "literal_string \"Maximum PPM of 999999 exceeded\""
                        }
                      ],
                      "id": 1592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27778:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27778:62:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "27778:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1600,
                          "name": "protocolFeePPM",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "27858:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3939395f393939",
                          "id": 1601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27876:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_999999_by_1",
                            "typeString": "int_const 999999"
                          },
                          "value": "999_999"
                        },
                        "src": "27858:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d6178696d756d2050504d206f6620393939393939206578636565646564",
                        "id": 1603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27885:32:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc6ff3dc4d84c986e73c0da29ac18687d279f8a5d01bde11c3824d0de87d9570",
                          "typeString": "literal_string \"Maximum PPM of 999999 exceeded\""
                        },
                        "value": "Maximum PPM of 999999 exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc6ff3dc4d84c986e73c0da29ac18687d279f8a5d01bde11c3824d0de87d9570",
                          "typeString": "literal_string \"Maximum PPM of 999999 exceeded\""
                        }
                      ],
                      "id": 1599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27850:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27850:68:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1605,
                  "nodeType": "ExpressionStatement",
                  "src": "27850:68:10"
                },
                {
                  "assignments": [
                    1608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1608,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "27943:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1645,
                      "src": "27929:19:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                        "typeString": "struct RequestManager.Token"
                      },
                      "typeName": {
                        "id": 1607,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1606,
                          "name": "Token",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 84,
                          "src": "27929:5:10"
                        },
                        "referencedDeclaration": 84,
                        "src": "27929:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1612,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1609,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "27951:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Token_$84_storage_$",
                        "typeString": "mapping(address => struct RequestManager.Token storage ref)"
                      }
                    },
                    "id": 1611,
                    "indexExpression": {
                      "id": 1610,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1579,
                      "src": "27958:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27951:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Token_$84_storage",
                      "typeString": "struct RequestManager.Token storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27929:42:10"
                },
                {
                  "expression": {
                    "id": 1617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1613,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "27981:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token storage pointer"
                        }
                      },
                      "id": 1615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "transferLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75,
                      "src": "27981:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1616,
                      "name": "transferLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1581,
                      "src": "28003:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27981:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1618,
                  "nodeType": "ExpressionStatement",
                  "src": "27981:35:10"
                },
                {
                  "expression": {
                    "id": 1623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1619,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "28026:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token storage pointer"
                        }
                      },
                      "id": 1621,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "minLpFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77,
                      "src": "28026:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1622,
                      "name": "minLpFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1583,
                      "src": "28043:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "28026:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 1624,
                  "nodeType": "ExpressionStatement",
                  "src": "28026:25:10"
                },
                {
                  "expression": {
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1625,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "28061:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token storage pointer"
                        }
                      },
                      "id": 1627,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpFeePPM",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79,
                      "src": "28061:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1628,
                      "name": "lpFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "28078:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "28061:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "28061:25:10"
                },
                {
                  "expression": {
                    "id": 1635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1631,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1608,
                        "src": "28096:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Token_$84_storage_ptr",
                          "typeString": "struct RequestManager.Token storage pointer"
                        }
                      },
                      "id": 1633,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "protocolFeePPM",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81,
                      "src": "28096:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1634,
                      "name": "protocolFeePPM",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "28119:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "28096:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1636,
                  "nodeType": "ExpressionStatement",
                  "src": "28096:37:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1638,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1579,
                        "src": "28175:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1639,
                        "name": "transferLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1581,
                        "src": "28201:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1640,
                        "name": "minLpFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1583,
                        "src": "28228:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 1641,
                        "name": "lpFeePPM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "28250:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1642,
                        "name": "protocolFeePPM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "28272:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 1637,
                      "name": "TokenUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 159,
                      "src": "28149:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint96_$_t_uint32_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint256,uint96,uint32,uint32)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28149:147:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1644,
                  "nodeType": "EmitStatement",
                  "src": "28144:152:10"
                }
              ]
            },
            "functionSelector": "962ddf89",
            "id": 1646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1589,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1850,
                  "src": "27758:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "27758:9:10"
              }
            ],
            "name": "updateToken",
            "nameLocation": "27589:11:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1579,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "27618:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1646,
                  "src": "27610:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27610:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1581,
                  "mutability": "mutable",
                  "name": "transferLimit",
                  "nameLocation": "27648:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1646,
                  "src": "27640:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27640:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "minLpFee",
                  "nameLocation": "27678:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1646,
                  "src": "27671:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "27671:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "lpFeePPM",
                  "nameLocation": "27703:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1646,
                  "src": "27696:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27696:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "protocolFeePPM",
                  "nameLocation": "27728:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1646,
                  "src": "27721:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27721:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27600:148:10"
            },
            "returnParameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27768:0:10"
            },
            "scope": 1818,
            "src": "27580:723:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1674,
              "nodeType": "Block",
              "src": "28680:211:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1657,
                          "name": "finalityPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1651,
                          "src": "28698:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "28715:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "28698:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696e616c69747920706572696f64206d7573742062652067726561746572207468616e2030",
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28718:40:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        },
                        "value": "Finality period must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25ea573be6ea1512aa3df00891acf9b351bb62ca968c15c699c1ce305b8feae2",
                          "typeString": "literal_string \"Finality period must be greater than 0\""
                        }
                      ],
                      "id": 1656,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28690:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28690:69:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1662,
                  "nodeType": "ExpressionStatement",
                  "src": "28690:69:10"
                },
                {
                  "expression": {
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1663,
                        "name": "finalityPeriods",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "28769:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1665,
                      "indexExpression": {
                        "id": 1664,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "28785:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28769:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1666,
                      "name": "finalityPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "28802:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28769:47:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "28769:47:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1670,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "28854:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1671,
                        "name": "finalityPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1651,
                        "src": "28869:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1669,
                      "name": "FinalityPeriodUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "28832:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28832:52:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1673,
                  "nodeType": "EmitStatement",
                  "src": "28827:57:10"
                }
              ]
            },
            "documentation": {
              "id": 1647,
              "nodeType": "StructuredDocumentation",
              "src": "28309:253:10",
              "text": "Set the finality period for the given target chain.\n .. note:: This function can only be called by the contract owner.\n @param targetChainId The target chain ID.\n @param finalityPeriod Finality period in seconds."
            },
            "functionSelector": "d137920b",
            "id": 1675,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1654,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1653,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1850,
                  "src": "28666:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "28666:9:10"
              }
            ],
            "name": "setFinalityPeriod",
            "nameLocation": "28576:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "28602:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "28594:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28594:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "finalityPeriod",
                  "nameLocation": "28625:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1675,
                  "src": "28617:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28617:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28593:47:10"
            },
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28680:0:10"
            },
            "scope": 1818,
            "src": "28567:324:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1692,
              "nodeType": "Block",
              "src": "29596:66:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1685,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 217,
                          "src": "29613:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                            "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                          }
                        },
                        "id": 1687,
                        "indexExpression": {
                          "id": 1686,
                          "name": "requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1678,
                          "src": "29622:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29613:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage",
                          "typeString": "struct RequestManager.Request storage ref"
                        }
                      },
                      "id": 1688,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invalidFillIds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51,
                      "src": "29613:34:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 1690,
                    "indexExpression": {
                      "id": 1689,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1680,
                      "src": "29648:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "29613:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1684,
                  "id": 1691,
                  "nodeType": "Return",
                  "src": "29606:49:10"
                }
              ]
            },
            "documentation": {
              "id": 1676,
              "nodeType": "StructuredDocumentation",
              "src": "28897:581:10",
              "text": "Returns whether a fill is invalidated or not\n Calling invalidateFill() will set this boolean to true,\n marking that the ``fillId`` for the corresponding ``requestId`` was\n invalidated.\n Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n to false.\n .. seealso:: :sol:func:`invalidateFill`\n .. seealso:: :sol:func:`resolveRequest`\n @param requestId The request ID\n @param fillId The fill ID\n @return Whether the fill ID is invalid for the given request ID"
            },
            "functionSelector": "30a08cbc",
            "id": 1693,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isInvalidFill",
            "nameLocation": "29492:13:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1678,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "29514:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "29506:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1677,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29506:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1680,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "29533:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "29525:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1679,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29525:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29505:35:10"
            },
            "returnParameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1693,
                  "src": "29586:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "29586:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29585:6:10"
            },
            "scope": 1818,
            "src": "29483:179:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1741,
              "nodeType": "Block",
              "src": "30257:235:10",
              "statements": [
                {
                  "assignments": [
                    1710
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1710,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "30283:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1741,
                      "src": "30267:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1709,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1708,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "30267:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "30267:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1714,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1711,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "30293:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1713,
                    "indexExpression": {
                      "id": 1712,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1696,
                      "src": "30302:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "30293:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30267:45:10"
                },
                {
                  "expression": {
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1715,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "30322:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1717,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "filler",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "30322:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1718,
                      "name": "filler",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1702,
                      "src": "30339:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "30322:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1720,
                  "nodeType": "ExpressionStatement",
                  "src": "30322:23:10"
                },
                {
                  "expression": {
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1721,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1710,
                        "src": "30355:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fillId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47,
                      "src": "30355:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1724,
                      "name": "fillId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1698,
                      "src": "30372:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "30355:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1726,
                  "nodeType": "ExpressionStatement",
                  "src": "30355:23:10"
                },
                {
                  "expression": {
                    "id": 1733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1727,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1710,
                          "src": "30389:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "30389:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1731,
                      "indexExpression": {
                        "id": 1729,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "30412:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "30389:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30422:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "30389:38:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1734,
                  "nodeType": "ExpressionStatement",
                  "src": "30389:38:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1736,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1696,
                        "src": "30459:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1737,
                        "name": "filler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1702,
                        "src": "30470:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1738,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1698,
                        "src": "30478:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1735,
                      "name": "RequestResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "30443:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,address,bytes32)"
                      }
                    },
                    "id": 1739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30443:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1740,
                  "nodeType": "EmitStatement",
                  "src": "30438:47:10"
                }
              ]
            },
            "documentation": {
              "id": 1694,
              "nodeType": "StructuredDocumentation",
              "src": "29668:405:10",
              "text": "Mark the request identified by ``requestId`` as filled by ``filler``.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID.\n @param filler The address that filled the request."
            },
            "functionSelector": "5b3a6ef2",
            "id": 1742,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1705,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1700,
                    "src": "30238:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1706,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1704,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "30227:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "30227:29:10"
              }
            ],
            "name": "resolveRequest",
            "nameLocation": "30087:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1696,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "30119:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "30111:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1695,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30111:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "30146:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "30138:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1697,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30138:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1700,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "30170:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "30162:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30162:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1702,
                  "mutability": "mutable",
                  "name": "filler",
                  "nameLocation": "30205:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1742,
                  "src": "30197:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30197:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30101:116:10"
            },
            "returnParameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30257:0:10"
            },
            "scope": 1818,
            "src": "30078:414:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1796,
              "nodeType": "Block",
              "src": "31003:405:10",
              "statements": [
                {
                  "assignments": [
                    1757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1757,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "31029:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1796,
                      "src": "31013:23:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 1756,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1755,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52,
                          "src": "31013:7:10"
                        },
                        "referencedDeclaration": 52,
                        "src": "31013:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1761,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1758,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "31039:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Request_$52_storage_$",
                        "typeString": "mapping(bytes32 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 1760,
                    "indexExpression": {
                      "id": 1759,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1745,
                      "src": "31048:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31039:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$52_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31013:45:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1763,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1757,
                            "src": "31089:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                              "typeString": "struct RequestManager.Request storage pointer"
                            }
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "filler",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45,
                          "src": "31089:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31115:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "31107:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1765,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "31107:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31107:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "31089:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420696e76616c6964617465207265736f6c7665642066696c6c73",
                        "id": 1770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31131:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        },
                        "value": "Cannot invalidate resolved fills"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c76b1b933590b1d78f647fc6d1d56cd7bfc7e7706ad90fdd0c3a26eadf9d14ae",
                          "typeString": "literal_string \"Cannot invalidate resolved fills\""
                        }
                      ],
                      "id": 1762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31068:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31068:107:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1772,
                  "nodeType": "ExpressionStatement",
                  "src": "31068:107:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "id": 1774,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "31206:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 1775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "invalidFillIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51,
                            "src": "31206:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1777,
                          "indexExpression": {
                            "id": 1776,
                            "name": "fillId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "31229:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31206:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "31240:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "31206:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c6c20616c726561647920696e76616c696461746564",
                        "id": 1780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31259:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        },
                        "value": "Fill already invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8c16296ae5b68b3a4b2277be98d9404b6766aa65e63140a7bf7f2813c4dabc3",
                          "typeString": "literal_string \"Fill already invalidated\""
                        }
                      ],
                      "id": 1773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31185:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31185:110:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1782,
                  "nodeType": "ExpressionStatement",
                  "src": "31185:110:10"
                },
                {
                  "expression": {
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 1783,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1757,
                          "src": "31306:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$52_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 1786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "invalidFillIds",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51,
                        "src": "31306:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1787,
                      "indexExpression": {
                        "id": 1785,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "31329:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "31306:30:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31339:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "31306:37:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "31306:37:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1792,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1745,
                        "src": "31383:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1793,
                        "name": "fillId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "31394:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1791,
                      "name": "FillInvalidatedResolved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "31359:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31359:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1795,
                  "nodeType": "EmitStatement",
                  "src": "31354:47:10"
                }
              ]
            },
            "documentation": {
              "id": 1743,
              "nodeType": "StructuredDocumentation",
              "src": "30498:345:10",
              "text": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n .. note::\n     This function is a restricted call function. Only callable by the added caller.\n @param requestId The request ID.\n @param fillId The fill ID.\n @param resolutionChainId The resolution (L1) chain ID."
            },
            "functionSelector": "03fc4c37",
            "id": 1797,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1752,
                    "name": "resolutionChainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1749,
                    "src": "30984:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1751,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "30973:10:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "30973:29:10"
              }
            ],
            "name": "invalidateFill",
            "nameLocation": "30857:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "30889:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "30881:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30881:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1747,
                  "mutability": "mutable",
                  "name": "fillId",
                  "nameLocation": "30916:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "30908:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1746,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30908:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1749,
                  "mutability": "mutable",
                  "name": "resolutionChainId",
                  "nameLocation": "30940:17:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1797,
                  "src": "30932:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30932:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30871:92:10"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31003:0:10"
            },
            "scope": 1818,
            "src": "30848:560:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1806,
              "nodeType": "Block",
              "src": "31822:25:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1803,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2022,
                      "src": "31832:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31832:8:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "31832:8:10"
                }
              ]
            },
            "documentation": {
              "id": 1798,
              "nodeType": "StructuredDocumentation",
              "src": "31414:367:10",
              "text": "Pauses the contract.\n Once the contract is paused, it cannot be used to create new\n requests anymore. Withdrawing deposited funds and claim stakes\n still works, though.\n .. note:: This function can only be called when the contract is not paused.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "8456cb59",
            "id": 1807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1801,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1800,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1850,
                  "src": "31812:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "31812:9:10"
              }
            ],
            "name": "pause",
            "nameLocation": "31795:5:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31800:2:10"
            },
            "returnParameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31822:0:10"
            },
            "scope": 1818,
            "src": "31786:61:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "32156:27:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1813,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2038,
                      "src": "32166:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32166:10:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1815,
                  "nodeType": "ExpressionStatement",
                  "src": "32166:10:10"
                }
              ]
            },
            "documentation": {
              "id": 1808,
              "nodeType": "StructuredDocumentation",
              "src": "31853:260:10",
              "text": "Unpauses the contract.\n Once the contract is unpaused, it can be used normally.\n .. note:: This function can only be called when the contract is paused.\n .. note:: This function can only be called by the contract owner."
            },
            "functionSelector": "3f4ba83a",
            "id": 1817,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1811,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1810,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1850,
                  "src": "32146:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "32146:9:10"
              }
            ],
            "name": "unpause",
            "nameLocation": "32127:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32134:2:10"
            },
            "returnParameters": {
              "id": 1812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32156:0:10"
            },
            "scope": 1818,
            "src": "32118:65:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1819,
        "src": "1141:31044:10",
        "usedErrors": []
      }
    ],
    "src": "32:32154:10"
  },
  "bytecode": "",
  "bytecodeSha1": "502d6a496d6e37375d711ab896891b447ed2ba7c",
  "compiler": {
    "evm_version": "london",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "198": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "197": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "Pausable._requireNotPaused": {
          "199": [
            1836,
            1845,
            true
          ]
        }
      },
      "10": {
        "RequestManager.challengeClaim": {
          "170": [
            17069,
            17098,
            true
          ],
          "171": [
            17147,
            17187,
            true
          ],
          "172": [
            17268,
            17317,
            true
          ],
          "173": [
            17600,
            17635,
            false
          ],
          "174": [
            17655,
            17680,
            false
          ],
          "175": [
            17843,
            17864,
            true
          ],
          "176": [
            17934,
            17986,
            true
          ],
          "177": [
            18084,
            18105,
            true
          ],
          "178": [
            18171,
            18232,
            true
          ],
          "179": [
            18316,
            18337,
            false
          ],
          "180": [
            18710,
            18757,
            false
          ]
        },
        "RequestManager.claimRequest": {
          "154": [
            14631,
            14691,
            true
          ],
          "155": [
            14768,
            14796,
            true
          ],
          "156": [
            14844,
            14867,
            true
          ]
        },
        "RequestManager.createRequest": {
          "149": [
            10271,
            10306,
            true
          ],
          "150": [
            10390,
            10427,
            true
          ],
          "151": [
            10509,
            10546,
            true
          ],
          "152": [
            10627,
            10677,
            true
          ],
          "153": [
            10951,
            11084,
            true
          ]
        },
        "RequestManager.invalidateFill": {
          "147": [
            31089,
            31117,
            true
          ],
          "148": [
            31206,
            31245,
            true
          ]
        },
        "RequestManager.resolveClaim": {
          "182": [
            22684,
            22743,
            true
          ],
          "183": [
            23343,
            23363,
            false
          ],
          "184": [
            23495,
            23525,
            false
          ],
          "185": [
            23619,
            23639,
            false
          ],
          "186": [
            23926,
            23962,
            true
          ],
          "187": [
            24225,
            24235,
            false
          ],
          "188": [
            24424,
            24448,
            false
          ],
          "189": [
            24661,
            24678,
            true
          ],
          "190": [
            25297,
            25335,
            false
          ],
          "191": [
            25355,
            25390,
            false
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "181": [
            28698,
            28716,
            true
          ]
        },
        "RequestManager.updateToken": {
          "168": [
            27786,
            27805,
            true
          ],
          "169": [
            27858,
            27883,
            true
          ]
        },
        "RequestManager.withdraw": {
          "160": [
            20855,
            20877,
            true
          ],
          "161": [
            20881,
            20921,
            true
          ],
          "162": [
            21230,
            21273,
            false
          ],
          "163": [
            21523,
            21543,
            false
          ],
          "164": [
            21717,
            21783,
            true
          ],
          "165": [
            21927,
            21931,
            true
          ],
          "166": [
            22042,
            22070,
            false
          ],
          "167": [
            22074,
            22099,
            false
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "157": [
            12734,
            12762,
            true
          ],
          "158": [
            12823,
            12860,
            true
          ],
          "159": [
            12927,
            12952,
            true
          ]
        }
      },
      "11": {
        "RequestManager.resolveRequest": {
          "200": [
            2129,
            2159,
            false
          ],
          "201": [
            2183,
            2203,
            true
          ],
          "202": [
            2485,
            2538,
            true
          ]
        },
        "RestrictedCalls._addCaller": {
          "203": [
            763,
            783,
            true
          ],
          "204": [
            854,
            893,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "205": [
            4275,
            4296,
            false
          ],
          "206": [
            4359,
            4389,
            true
          ]
        }
      },
      "5": {
        "Address._revert": {
          "194": [
            8775,
            8796,
            false
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "192": [
            7674,
            7681,
            false
          ],
          "193": [
            7701,
            7723,
            false
          ]
        }
      },
      "6": {},
      "7": {
        "Math.max": {
          "196": [
            497,
            502,
            true
          ]
        }
      },
      "8": {},
      "9": {
        "RequestManager.claimRequest": {
          "195": [
            1011,
            1037,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "107": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "110": [
            2541,
            2558
          ],
          "111": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "2": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "49": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "102": [
            2161,
            2234
          ],
          "103": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "Pausable._pause": {
          "116": [
            2245,
            2259
          ],
          "117": [
            2269,
            2294
          ]
        },
        "Pausable._requireNotPaused": {
          "104": [
            1828,
            1866
          ]
        },
        "Pausable._requirePaused": {
          "139": [
            2003,
            2044
          ]
        },
        "Pausable._unpause": {
          "108": [
            2491,
            2506
          ],
          "109": [
            2516,
            2543
          ]
        },
        "Pausable.paused": {
          "1": [
            1678,
            1692
          ]
        }
      },
      "10": {
        "RequestManager.challengeClaim": {
          "78": [
            17061,
            17116
          ],
          "79": [
            17126,
            17237
          ],
          "80": [
            17247,
            17367
          ],
          "81": [
            17700,
            17807
          ],
          "82": [
            17835,
            17895
          ],
          "83": [
            17909,
            18045
          ],
          "84": [
            18076,
            18132
          ],
          "85": [
            18146,
            18291
          ],
          "86": [
            18353,
            18386
          ],
          "87": [
            18400,
            18433
          ],
          "88": [
            18464,
            18497
          ],
          "89": [
            18511,
            18567
          ],
          "90": [
            18581,
            18622
          ],
          "91": [
            18636,
            18685
          ],
          "92": [
            18773,
            18820
          ],
          "93": [
            18834,
            18865
          ],
          "94": [
            18886,
            19120
          ]
        },
        "RequestManager.claimRequest": {
          "32": [
            14610,
            14750
          ],
          "33": [
            14760,
            14826
          ],
          "34": [
            14836,
            14892
          ],
          "35": [
            14902,
            14957
          ],
          "36": [
            14968,
            14993
          ],
          "37": [
            15045,
            15065
          ],
          "38": [
            15182,
            15209
          ],
          "39": [
            15219,
            15242
          ],
          "40": [
            15252,
            15290
          ],
          "41": [
            15300,
            15331
          ],
          "42": [
            15341,
            15362
          ],
          "43": [
            15373,
            15575
          ],
          "44": [
            15586,
            15598
          ],
          "51": [
            13833,
            13883
          ]
        },
        "RequestManager.createRequest": {
          "9": [
            10250,
            10359
          ],
          "10": [
            10369,
            10478
          ],
          "11": [
            10488,
            10596
          ],
          "12": [
            10606,
            10732
          ],
          "13": [
            10930,
            11132
          ],
          "14": [
            11184,
            11204
          ],
          "16": [
            11493,
            11523
          ],
          "17": [
            11533,
            11583
          ],
          "18": [
            11593,
            11633
          ],
          "19": [
            11643,
            11669
          ],
          "20": [
            11679,
            11743
          ],
          "21": [
            11753,
            11796
          ],
          "22": [
            11806,
            11861
          ],
          "23": [
            11872,
            12159
          ],
          "24": [
            12170,
            12338
          ],
          "25": [
            12349,
            12365
          ]
        },
        "RequestManager.invalidateFill": {
          "3": [
            31068,
            31175
          ],
          "4": [
            31185,
            31295
          ],
          "5": [
            31306,
            31343
          ],
          "6": [
            31354,
            31401
          ]
        },
        "RequestManager.isInvalidFill": {
          "0": [
            29606,
            29655
          ]
        },
        "RequestManager.isWithdrawn": {
          "7": [
            26789,
            26836
          ]
        },
        "RequestManager.lpFee": {
          "70": [
            7287,
            7357
          ]
        },
        "RequestManager.pause": {
          "59": [
            31832,
            31840
          ]
        },
        "RequestManager.protocolFee": {
          "26": [
            7581,
            7646
          ]
        },
        "RequestManager.resolveClaim": {
          "118": [
            22663,
            22792
          ],
          "119": [
            23418,
            23474
          ],
          "120": [
            23580,
            23598
          ],
          "121": [
            23694,
            23831
          ],
          "122": [
            23901,
            24021
          ],
          "123": [
            24035,
            24083
          ],
          "124": [
            24314,
            24338
          ],
          "125": [
            24352,
            24403
          ],
          "126": [
            24580,
            24639
          ],
          "127": [
            24538,
            24566
          ],
          "128": [
            24653,
            24717
          ],
          "129": [
            24967,
            24995
          ],
          "130": [
            25410,
            25464
          ],
          "131": [
            25503,
            25557
          ],
          "132": [
            25592,
            25630
          ]
        },
        "RequestManager.resolveRequest": {
          "45": [
            30322,
            30345
          ],
          "46": [
            30355,
            30378
          ],
          "47": [
            30389,
            30427
          ],
          "48": [
            30438,
            30485
          ]
        },
        "RequestManager.setFinalityPeriod": {
          "98": [
            28690,
            28759
          ],
          "99": [
            28769,
            28816
          ],
          "100": [
            28827,
            28884
          ]
        },
        "RequestManager.totalFee": {
          "8": [
            7949,
            8019
          ]
        },
        "RequestManager.unpause": {
          "31": [
            32166,
            32176
          ]
        },
        "RequestManager.updateToken": {
          "71": [
            27778,
            27840
          ],
          "72": [
            27850,
            27918
          ],
          "73": [
            27981,
            28016
          ],
          "74": [
            28026,
            28051
          ],
          "75": [
            28061,
            28086
          ],
          "76": [
            28096,
            28133
          ],
          "77": [
            28144,
            28296
          ]
        },
        "RequestManager.withdraw": {
          "60": [
            20834,
            20986
          ],
          "61": [
            21326,
            21369
          ],
          "62": [
            21559,
            21584
          ],
          "63": [
            21604,
            21636
          ],
          "64": [
            21646,
            21685
          ],
          "65": [
            21696,
            21837
          ],
          "66": [
            21919,
            21956
          ],
          "67": [
            21967,
            22027
          ],
          "68": [
            22115,
            22148
          ],
          "69": [
            22169,
            22190
          ],
          "101": [
            19795,
            19831
          ]
        },
        "RequestManager.withdrawDeposit": {
          "133": [
            25815,
            25862
          ],
          "134": [
            25873,
            25906
          ],
          "135": [
            25917,
            26009
          ],
          "136": [
            26079,
            26138
          ]
        },
        "RequestManager.withdrawExpiredRequest": {
          "53": [
            12726,
            12792
          ],
          "54": [
            12802,
            12909
          ],
          "55": [
            12919,
            12978
          ],
          "56": [
            12989,
            13041
          ],
          "57": [
            13052,
            13100
          ],
          "58": [
            13170,
            13292
          ]
        },
        "RequestManager.withdrawProtocolFees": {
          "95": [
            27375,
            27418
          ],
          "96": [
            27428,
            27474
          ],
          "97": [
            27530,
            27567
          ]
        }
      },
      "11": {
        "RestrictedCalls._addCaller": {
          "112": [
            755,
            823
          ],
          "113": [
            833,
            957
          ],
          "114": [
            967,
            1011
          ]
        },
        "RestrictedCalls.addCaller": {
          "50": [
            1567,
            1611
          ],
          "52": [
            1185,
            1230
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "SafeERC20._callOptionalReturn": {
          "138": [
            4351,
            4436
          ]
        },
        "SafeERC20.safeTransfer": {
          "115": [
            875,
            961
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "105": [
            1112,
            1208
          ]
        }
      },
      "5": {
        "Address._revert": {
          "146": [
            9119,
            9139
          ]
        },
        "Address.functionCall": {
          "140": [
            4030,
            4089
          ]
        },
        "Address.functionCallWithValue": {
          "141": [
            5323,
            5399
          ]
        },
        "Address.isContract": {
          "142": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "143": [
            7908,
            7968
          ],
          "144": [
            7996,
            8013
          ],
          "145": [
            8044,
            8077
          ]
        }
      },
      "6": {
        "Context._msgSender": {
          "106": [
            712,
            729
          ]
        }
      },
      "7": {
        "Math.max": {
          "137": [
            490,
            510
          ]
        }
      },
      "8": {
        "BeamerUtils.createRequestId": {
          "15": [
            340,
            642
          ]
        }
      },
      "9": {
        "LpWhitelist.addAllowedLp": {
          "27": [
            1352,
            1376
          ],
          "28": [
            1387,
            1406
          ]
        },
        "LpWhitelist.removeAllowedLp": {
          "29": [
            1702,
            1726
          ],
          "30": [
            1737,
            1758
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "BeamerUtils",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC20Permit",
    "LpWhitelist",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Pausable",
    "RestrictedCalls",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/SafeERC20"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1141:31044:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30848:560;;;;;;;;;;-1:-1:-1;30848:560:10;;;;;:::i;:::-;;:::i;:::-;;576:45:11;;;;;;;;;;-1:-1:-1;576:45:11;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;752:32:13;;;734:51;;722:2;707:18;576:45:11;;;;;;;;26650:193:10;;;;;;;;;;-1:-1:-1;26650:193:10;;;;;:::i;:::-;;:::i;:::-;;;1146:14:13;;1139:22;1121:41;;1109:2;1094:18;26650:193:10;981:187:13;6042:56:10;;;;;;;;;;;;6088:10;6042:56;;;;;1319:25:13;;;1307:2;1292:18;6042:56:10;1173:177:13;5936:49:10;;;;;;;;;;;;;;;7825:201;;;;;;;;;;-1:-1:-1;7825:201:10;;;;;:::i;:::-;;:::i;9980:2392::-;;;;;;;;;;-1:-1:-1;9980:2392:10;;;;;:::i;:::-;;:::i;6707:50::-;;;;;;;;;;-1:-1:-1;6707:50:10;;;;;:::i;:::-;;;;;;;;;;;;;;29483:179;;;;;;;;;;-1:-1:-1;29483:179:10;;;;;:::i;:::-;29586:4;29613:19;;;:8;:19;;;;;;;;:42;;;:34;;;;:42;;;;;;;;29483:179;7454:199;;;;;;;;;;-1:-1:-1;7454:199:10;;;;;:::i;:::-;;:::i;1288:125:9:-;;;;;;;;;;-1:-1:-1;1288:125:9;;;;;:::i;:::-;;:::i;1635:130::-;;;;;;;;;;-1:-1:-1;1635:130:9;;;;;:::i;:::-;;:::i;6886:38:10:-;;;;;;;;;;-1:-1:-1;6886:38:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6886:38:10;;;;-1:-1:-1;;;;;;;;6886:38:10;;;;;;;;;;;;;;;;;;;;;;;;;3861:25:13;;;-1:-1:-1;;;;;3960:15:13;;;3955:2;3940:18;;3933:43;-1:-1:-1;;;;;4057:15:13;;;4037:18;;;4030:43;4109:15;;;;4104:2;4089:18;;4082:43;4162:15;;4156:3;4141:19;;4134:44;3913:3;4194:19;;4187:35;;;;4253:3;4238:19;;4231:35;4297:3;4282:19;;4275:35;3848:3;3833:19;6886:38:10;3522:794:13;32118:65:10;;;;;;;;;;;;;:::i;14317:1288::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4810:39:13;;;4792:58;;4780:2;4765:18;14317:1288:10;4648:208:13;30078:414:10;;;;;;;;;;-1:-1:-1;30078:414:10;;;;;:::i;:::-;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1685:7:1;;;;1615:84;;1831:101:0;;;;;;;;;;;;;:::i;1431:187:11:-;;;;;;;;;;-1:-1:-1;1431:187:11;;;;;:::i;:::-;;:::i;13638:252:10:-;;;;;;:::i;:::-;;:::i;1121:116:11:-;;;;;;;;;;-1:-1:-1;1121:116:11;;;;;:::i;:::-;;:::i;12554:745:10:-;;;;;;;;;;-1:-1:-1;12554:745:10;;;;;:::i;:::-;;:::i;5290:36::-;;;;;;;;;;;;;;;5188:46;;;;;;;;;;;;;;;31786:61;;;;;;;;;;;;;:::i;20606:1591::-;;;;;;;;;;-1:-1:-1;20606:1591:10;;;;;:::i;:::-;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;7114:250:10;;;;;;;;;;-1:-1:-1;7114:250:10;;;;;:::i;:::-;;:::i;6155:54::-;;;;;;;;;;;;6201:8;6155:54;;27580:723;;;;;;;;;;-1:-1:-1;27580:723:10;;;;;:::i;:::-;;:::i;6802:43::-;;;;;;;;;;-1:-1:-1;6802:43:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6802:43:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6802:43:10;;;;;;-1:-1:-1;;;6802:43:10;;;;;-1:-1:-1;;;6802:43:10;;;;;;;;;;;-1:-1:-1;;;6802:43:10;;;;;;;;;;;;;-1:-1:-1;;;;;6972:15:13;;;6954:34;;7024:15;;;7019:2;7004:18;;6997:43;7056:18;;7049:34;;;;7114:2;7099:18;;7092:34;;;;7145:10;7192:15;;;7186:3;7171:19;;7164:44;-1:-1:-1;;;;;7290:15:13;;;6934:3;7269:19;;7262:44;7343:15;;;7337:3;7322:19;;7315:44;7396:15;;;7390:3;7375:19;;7368:44;7449:15;7443:3;7428:19;;7421:44;7502:15;;;7496:3;7481:19;;7474:44;7549:3;7534:19;;7527:36;;;;6903:3;6888:19;6802:43:10;6498:1071:13;829:42:9;;;;;;;;;;-1:-1:-1;829:42:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;6575:26:10;;;;;;;;;;-1:-1:-1;6575:26:10;;;;;;;-1:-1:-1;;;;;6575:26:10;;;16803:2324;;;;;;:::i;:::-;;:::i;27186:388::-;;;;;;;;;;-1:-1:-1;27186:388:10;;;;;:::i;:::-;;:::i;28567:324::-;;;;;;;;;;-1:-1:-1;28567:324:10;;;;;:::i;:::-;;:::i;19674:164::-;;;;;;;;;;-1:-1:-1;19674:164:10;;;;;:::i;:::-;;:::i;6974:39::-;;;;;;;;;;-1:-1:-1;6974:39:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6974:39:10;;;;;-1:-1:-1;;;6974:39:10;;;;;-1:-1:-1;;;6974:39:10;;;;;;-1:-1:-1;;;6974:39:10;;;;;;;;;8090:25:13;;;-1:-1:-1;;;;;8196:15:13;;;8191:2;8176:18;;8169:43;8231:10;8277:15;;;8257:18;;;8250:43;8329:15;;8324:2;8309:18;;8302:43;8382:15;8376:3;8361:19;;8354:44;8077:3;8062:19;6974:39:10;7839:565:13;6314:68:10;;;;;;;;;;;;-1:-1:-1;;;;;6314:68:10;;5028:34;;;;;;;;;;;;;;;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;30848:560:10:-;2072:14:11;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:11;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:11;;;2175:65;;;;-1:-1:-1;;;2175:65:11;;;;;;;:::i;:::-;;;;;;;;;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:11;;2330:116;;;;-1:-1:-1;;;2330:116:11;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:11;;-1:-1:-1;;;;;9535:15:13;;;2485:53:11;;;9517:34:13;2527:10:11;9567:18:13;;;9560:43;2485:33:11;;;;;9452:18:13;;2485:53:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:11;;;;;;;:::i;:::-;2257:358;2125:490;31013:23:10::1;31039:19:::0;;;:8:::1;:19;::::0;;;;;;;31089:14;;::::1;::::0;-1:-1:-1;;;31089:14:10;::::1;-1:-1:-1::0;;;;;31089:14:10::1;:28:::0;31068:107:::1;;;::::0;-1:-1:-1;;;31068:107:10;;10098:2:13;31068:107:10::1;::::0;::::1;10080:21:13::0;;;10117:18;;;10110:30;10176:34;10156:18;;;10149:62;10228:18;;31068:107:10::1;9896:356:13::0;31068:107:10::1;31206:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;::::1;;:39;31185:110;;;::::0;-1:-1:-1;;;31185:110:10;;10459:2:13;31185:110:10::1;::::0;::::1;10441:21:13::0;10498:2;10478:18;;;10471:30;-1:-1:-1;;;10517:18:13;;;10510:54;10581:18;;31185:110:10::1;10257:348:13::0;31185:110:10::1;31306:30;::::0;;;:22:::1;::::0;::::1;:30;::::0;;;;;;:37;;-1:-1:-1;;31306:37:10::1;31339:4;31306:37;::::0;;31359:42;::::1;::::0;::::1;::::0;31383:9;;31329:6;;10784:25:13;;;10840:2;10825:18;;10818:34;10772:2;10757:18;;10610:248;31359:42:10::1;;;;;;;;31003:405;2062:570:11::0;30848:560:10;;;;:::o;576:45:11:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;576:45:11;;-1:-1:-1;576:45:11;;-1:-1:-1;576:45:11:o;26650:193:10:-;26769:4;8175:19;;;:8;:19;;;;;:26;26741:9;;-1:-1:-1;;;;;8175:26:10;8154:106;;;;-1:-1:-1;;;8154:106:10;;;;;;;:::i;:::-;-1:-1:-1;;26796:19:10::1;::::0;;;:8:::1;:19;::::0;;;;;;;:35:::1;::::0;-1:-1:-1;;;;;26796:35:10::1;:40:::0;::::1;::::0;26650:193::o;7825:201::-;7926:7;7986:33;7998:12;8012:6;7986:11;:33::i;:::-;7956:27;7962:12;7976:6;7956:5;:27::i;:::-;:63;;;;:::i;:::-;7949:70;7825:201;-1:-1:-1;;;7825:201:10:o;9980:2392::-;10231:7;1239:19:1;:17;:19::i;:::-;10271:30:10::1;::::0;;;:15:::1;:30;::::0;;;;;:35;;10250:109:::1;;;::::0;-1:-1:-1;;;10250:109:10;;11678:2:13;10250:109:10::1;::::0;::::1;11660:21:13::0;11717:2;11697:18;;;11690:30;11756:29;11736:18;;;11729:57;11803:18;;10250:109:10::1;11476:351:13::0;10250:109:10::1;6088:10;10390:14;:37;;10369:109;;;::::0;-1:-1:-1;;;10369:109:10;;12034:2:13;10369:109:10::1;::::0;::::1;12016:21:13::0;12073:2;12053:18;;;12046:30;12112:27;12092:18;;;12085:55;12157:18;;10369:109:10::1;11832:349:13::0;10369:109:10::1;6201:8;10509:14;:37;;10488:108;;;::::0;-1:-1:-1;;;10488:108:10;;12388:2:13;10488:108:10::1;::::0;::::1;12370:21:13::0;12427:2;12407:18;;;12400:30;12466:26;12446:18;;;12439:54;12510:18;;10488:108:10::1;12186:348:13::0;10488:108:10::1;-1:-1:-1::0;;;;;10637:26:10;::::1;;::::0;;;:6:::1;:26;::::0;;;;:40;10627:50;::::1;;10606:126;;;::::0;-1:-1:-1;;;10606:126:10;;12741:2:13;10606:126:10::1;::::0;::::1;12723:21:13::0;12780:2;12760:18;;;12753:30;12819:31;12799:18;;;12792:59;12868:18;;10606:126:10::1;12539:353:13::0;10606:126:10::1;10743:24;10770:33;10776:18;10796:6;10770:5;:33::i;:::-;10743:60;;10813:30;10846:73;10871:18;10903:6;10846:11;:73::i;:::-;10813:106:::0;-1:-1:-1;10813:106:10;11034:25:::1;11043:16:::0;11034:6;:25:::1;:::i;:::-;:50;;;;:::i;:::-;10951:63;::::0;-1:-1:-1;;;10951:63:10;;10988:10:::1;10951:63;::::0;::::1;9517:34:13::0;11008:4:10::1;9567:18:13::0;;;9560:43;-1:-1:-1;;;;;10951:36:10;::::1;::::0;::::1;::::0;9452:18:13;;10951:63:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:133;;10930:202;;;::::0;-1:-1:-1;;;10930:202:10;;13288:2:13;10930:202:10::1;::::0;::::1;13270:21:13::0;13327:2;13307:18;;;13300:30;-1:-1:-1;;;13346:18:13;;;13339:52;13408:18;;10930:202:10::1;13086:346:13::0;10930:202:10::1;11158:12;::::0;11143::::1;::::0;11158:16:::1;::::0;:12:::1;::::0;::::1;-1:-1:-1::0;;;;;11158:12:10::1;;:16;:::i;:::-;11184:12;:20:::0;;-1:-1:-1;;;;;11184:20:10;::::1;;;-1:-1:-1::0;;11184:20:10;;::::1;;::::0;;386:242:8;;;11276:13:10::1;386:242:8::0;;;;26799:19:13;;;;26834:12;;;26827:28;;;-1:-1:-1;;;;;;26943:2:13;26939:15;;;26935:24;;26921:12;;;26914:46;26994:15;;;26990:24;26976:12;;;26969:46;27031:13;;;27024:29;;;-1:-1:-1;;;;;;27110:3:13;27088:16;;;27084:59;27069:13;;;27062:82;386:242:8;;;;;;;;;27160:13:13;;;;386:242:8;;;359:283;;;;;11184:20:10;;-1:-1:-1;;;11435:26:10::1;11464:19:::0;;;:8:::1;:19;::::0;;;;11493:30;;11513:10:::1;-1:-1:-1::0;;;;;;11493:30:10;;::::1;;::::0;;-1:-1:-1;11533:29:10;::::1;:50:::0;;;;::::1;-1:-1:-1::0;;;;;11533:50:10;::::1;;::::0;;11593:24:::1;::::0;::::1;:40:::0;;;11643:17:::1;::::0;::::1;:26:::0;;;11464:19;;-1:-1:-1;11710:32:10::1;11728:14:::0;11710:15:::1;:32;:::i;:::-;11679:10;:21;;;:64;;;;;;;;;;;;;;;;;;11779:16;11753:10;:16;;;:43;;;;;-1:-1:-1::0;;;;;11753:43:10::1;;;;;-1:-1:-1::0;;;;;11753:43:10::1;;;;;;11838:22;11806:10;:22;;;:55;;;;;-1:-1:-1::0;;;;;11806:55:10::1;;;;;-1:-1:-1::0;;;;;11806:55:10::1;;;;;;12019:10;-1:-1:-1::0;;;;;11877:282:10::1;11905:9;11877:282;11928:13;11955:18;11987;12043:13;12070:6;12090:5;12134:14;12116:15;:32;;;;:::i;:::-;11877:282;::::0;;13997:25:13;;;-1:-1:-1;;;;;14096:15:13;;;14091:2;14076:18;;14069:43;14148:15;;;14128:18;;;14121:43;14200:15;;;;14195:2;14180:18;;14173:43;14247:3;14232:19;;14225:35;-1:-1:-1;;;;;14297:39:13;;;14049:3;14276:19;;14269:68;14386:10;14374:23;;;14368:3;14353:19;;14346:52;11877:282:10;;;;;13984:3:13;11877:282:10;;::::1;12170:168;12227:10;12259:4;12306:22:::0;12278:25:::1;12287:16:::0;12278:6;:25:::1;:::i;:::-;:50;;;;:::i;:::-;-1:-1:-1::0;;;;;12170:43:10;::::1;::::0;:168;;:43:::1;:168::i;:::-;-1:-1:-1::0;12356:9:10;9980:2392;-1:-1:-1;;;;;;;;;;9980:2392:10:o;7454:199::-;-1:-1:-1;;;;;7598:20:10;;7558:7;7598:20;;;:6;:20;;;;;:35;;;7637:9;;7589:44;;-1:-1:-1;;;7598:35:10;;;;7589:6;:44;:::i;:::-;7588:58;;;;:::i;1288:125:9:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1352:17:9;::::1;;::::0;;;1372:4:::1;1352:17;::::0;;;;;;;;:24;;-1:-1:-1;;1352:24:9::1;::::0;;::::1;::::0;;;1392:14;;734:51:13;;;1392:14:9::1;::::0;707:18:13;1392:14:9::1;;;;;;;;1288:125:::0;:::o;1635:130::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1709:17:9;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;1702:24;;-1:-1:-1;;1702:24:9::1;::::0;;1742:16;;734:51:13;;;1742:16:9::1;::::0;707:18:13;1742:16:9::1;588:203:13::0;32118:65:10;1094:13:0;:11;:13::i;:::-;32166:10:10::1;:8;:10::i;:::-;32118:65::o:0;14317:1288::-;14532:6;8175:19;;;:8;:19;;;;;:26;14475:9;;-1:-1:-1;;;;;8175:26:10;8154:106;;;;-1:-1:-1;;;8154:106:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;1011:26:9;::::1;;::::0;;;:10:::1;:26;::::0;;;;;14506:7:10;;1011:26:9::1;;1003:50;;;::::0;-1:-1:-1;;;1003:50:9;;15006:2:13;1003:50:9::1;::::0;::::1;14988:21:13::0;15045:2;15025:18;;;15018:30;-1:-1:-1;;;15064:18:13;;;15057:41;15115:18;;1003:50:9::1;14804:335:13::0;1003:50:9::1;14554:23:10::2;14580:19:::0;;;:8:::2;:19;::::0;;;;14649:18:::2;::::0;::::2;::::0;:42:::2;::::0;14670:21:::2;::::0;14649:18:::2;;:42;:::i;:::-;14631:15;:60;14610:140;;;::::0;-1:-1:-1;;;14610:140:10;;15346:2:13;14610:140:10::2;::::0;::::2;15328:21:13::0;15385:2;15365:18;;;15358:30;15424:34;15404:18;;;15397:62;-1:-1:-1;;;15475:18:13;;;15468:31;15516:19;;14610:140:10::2;15144:397:13::0;14610:140:10::2;14768:23;::::0;::::2;::::0;-1:-1:-1;;;;;14768:23:10::2;:28:::0;14760:66:::2;;;::::0;-1:-1:-1;;;14760:66:10;;15748:2:13;14760:66:10::2;::::0;::::2;15730:21:13::0;15787:2;15767:18;;;15760:30;-1:-1:-1;;;15806:18:13;;;15799:55;15871:18;;14760:66:10::2;15546:349:13::0;14760:66:10::2;14857:10;-1:-1:-1::0;;;;;14844:23:10::2;:9;:23;14836:56;;;::::0;-1:-1:-1;;;14836:56:10;;16102:2:13;14836:56:10::2;::::0;::::2;16084:21:13::0;16141:2;16121:18;;;16114:30;-1:-1:-1;;;16160:18:13;;;16153:50;16220:18;;14836:56:10::2;15900:344:13::0;14836:56:10::2;14910:6:::0;14902:55:::2;;;::::0;-1:-1:-1;;;14902:55:10;;16451:2:13;14902:55:10::2;::::0;::::2;16433:21:13::0;16490:2;16470:18;;;16463:30;-1:-1:-1;;;16509:18:13;;;16502:52;16571:18;;14902:55:10::2;16249:346:13::0;14902:55:10::2;14992:1;14968:7;:20;;;:25;;;;;;;;;;;;;;;;:::i;:::-;::::0;;::::2;::::0;;::::2;;::::0;;::::2;::::0;;::::2;::::0;::::2;;;;::::0;;;15019:12:::2;::::0;-1:-1:-1;;;15019:16:10::2;::::0;-1:-1:-1;;;;;15019:12:10;::::2;;-1:-1:-1::0;15019:16:10::2;:::i;:::-;15045:12;:20:::0;;-1:-1:-1;;15045:20:10::2;;-1:-1:-1::0;;;;;15045:20:10;::::2;;;::::0;;;-1:-1:-1;;15097:29:10::2;15115:11;15097:15;:29;:::i;:::-;15075:51;;15137:19;15159:6;:13;15166:5;-1:-1:-1::0;;;;;15159:13:10::2;-1:-1:-1::0;;;;;15159:13:10::2;;;;;;;;;;;;15137:35;;15200:9;15182:5;:15;;:27;;;;15235:7;15219:5;:13;;;:23;;;;;-1:-1:-1::0;;;;;15219:23:10::2;;;;;-1:-1:-1::0;;;;;15219:23:10::2;;;;;;15280:9;15252:5;:18;;;:38;;;;;-1:-1:-1::0;;;;;15252:38:10::2;;;;;-1:-1:-1::0;;;;;15252:38:10::2;;;;;;15320:11;15300:5;:17;;:31;;;;15356:6;15341:5;:12;;:21;;;;15401:9;15378:197;15424:5;15443:7;15471:9;15503:1;15519::::0;15534:11:::2;15559:6;15378:197;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;15593:5:10;;14317:1288;-1:-1:-1;;;;;;;;14317:1288:10:o;30078:414::-;2072:14:11;2089:22;;;:7;:22;;;;;:25;:22;;-1:-1:-1;;;;;2089:25:11;2146:13;2129:30;;2125:490;;2183:10;-1:-1:-1;;;;;2183:20:11;;;2175:65;;;;-1:-1:-1;;;2175:65:11;;;;;;;:::i;:::-;2125:490;;;2271:17;2291:22;;;:7;:22;;;;;2314:1;2291:25;;-1:-1:-1;;;;;2291:25:11;;2330:116;;;;-1:-1:-1;;;2330:116:11;;;;;;;:::i;:::-;2485:53;;-1:-1:-1;;;2485:53:11;;-1:-1:-1;;;;;9535:15:13;;;2485:53:11;;;9517:34:13;2527:10:11;9567:18:13;;;9560:43;2485:33:11;;;;;9452:18:13;;2485:53:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2460:144;;;;-1:-1:-1;;;2460:144:11;;;;;;;:::i;:::-;2257:358;2125:490;30267:23:10::1;30293:19:::0;;;:8:::1;:19;::::0;;;;;;;30322:14;;::::1;:23:::0;;-1:-1:-1;;;;;30322:23:10::1;-1:-1:-1::0;;;;;;;;30322:23:10;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;30355:14:::1;::::0;::::1;:23:::0;;;30389:30;;;:22:::1;::::0;::::1;:30:::0;;;;;;:38;;-1:-1:-1;;30389:38:10::1;::::0;;30443:42;;17778:25:13;;;17819:18;;;17812:60;;;;17888:18;;;17881:34;;;30293:19:10;30443:42:::1;::::0;17766:2:13;17751:18;30443:42:10::1;;;;;;;30257:235;2062:570:11::0;30078:414:10;;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1431:187:11:-:0;1094:13:0;:11;:13::i;:::-;1567:44:11::1;1578:13;1593:6;1601:9;1567:10;:44::i;:::-;1431:187:::0;;;:::o;13638:252:10:-;13811:6;8175:19;;;:8;:19;;;;;:26;13751:9;;-1:-1:-1;;;;;8175:26:10;8154:106;;;;-1:-1:-1;;;8154:106:10;;;;;;;:::i;:::-;13782:10:::1;1011:26:9;::::0;;;:10:::1;:26;::::0;;;;;::::1;;1003:50;;;::::0;-1:-1:-1;;;1003:50:9;;15006:2:13;1003:50:9::1;::::0;::::1;14988:21:13::0;15045:2;15025:18;;;15018:30;-1:-1:-1;;;15064:18:13;;;15057:41;15115:18;;1003:50:9::1;14804:335:13::0;1003:50:9::1;13840:43:10::2;13853:10;13865:9;13876:6;13840:12;:43::i;:::-;13833:50:::0;13638:252;-1:-1:-1;;;;;13638:252:10:o;1121:116:11:-;1094:13:0;:11;:13::i;:::-;1185:45:11::1;1196:13;1211:6;1227:1;1185:10;:45::i;:::-;1121:116:::0;:::o;12554:745:10:-;8213:1;8175:19;;;:8;:19;;;;;:26;12645:9;;-1:-1:-1;;;;;8175:26:10;8154:106;;;;-1:-1:-1;;;8154:106:10;;;;;;;:::i;:::-;12670:23:::1;12696:19:::0;;;:8:::1;:19;::::0;;;;;;;12734:23;;::::1;::::0;-1:-1:-1;;;;;12734:23:10::1;:28:::0;12726:66:::1;;;::::0;-1:-1:-1;;;12726:66:10;;15748:2:13;12726:66:10::1;::::0;::::1;15730:21:13::0;15787:2;15767:18;;;15760:30;-1:-1:-1;;;15806:18:13;;;15799:55;15871:18;;12726:66:10::1;15546:349:13::0;12726:66:10::1;12842:18;::::0;::::1;::::0;::::1;;12823:15;:37;;12802:107;;;::::0;-1:-1:-1;;;12802:107:10;;18128:2:13;12802:107:10::1;::::0;::::1;18110:21:13::0;18167:2;18147:18;;;18140:30;18206:25;18186:18;;;18179:53;18249:18;;12802:107:10::1;17926:347:13::0;12802:107:10::1;12927:20;::::0;::::1;::::0;-1:-1:-1;;;12927:20:10;::::1;;;:25:::0;12919:59:::1;;;::::0;-1:-1:-1;;;12919:59:10;;18480:2:13;12919:59:10::1;::::0;::::1;18462:21:13::0;18519:2;18499:18;;;18492:30;-1:-1:-1;;;18538:18:13;;;18531:51;18599:18;;12919:59:10::1;18278:345:13::0;12919:59:10::1;12989:23;::::0;::::1;:52:::0;;-1:-1:-1;;;;;;12989:52:10::1;-1:-1:-1::0;;;;;12989:52:10::1;::::0;;13085:14;;13057:43:::1;::::0;;18802:25:13;;;-1:-1:-1;;;;;13085:14:10;;::::1;18858:2:13::0;18843:18;;18836:60;13057:43:10::1;::::0;18775:18:13;13057:43:10::1;;;;;;;13133:26;::::0;::::1;::::0;13202:14;;13263:19:::1;::::0;::::1;::::0;13230:14:::1;::::0;::::1;::::0;-1:-1:-1;;;;;13133:26:10;;::::1;::::0;13170:122:::1;::::0;13202:14:::1;::::0;-1:-1:-1;;;;;;;;13263:19:10;::::1;::::0;::::1;::::0;13230:30:::1;::::0;13247:13;;::::1;::::0;;::::1;::::0;13230:30:::1;:::i;:::-;:52;;;;:::i;:::-;-1:-1:-1::0;;;;;13170:18:10;::::1;::::0;:122;:18:::1;:122::i;:::-;12660:639;;12554:745:::0;;:::o;31786:61::-;1094:13:0;:11;:13::i;:::-;31832:8:10::1;:6;:8::i;20606:1591::-:0;-1:-1:-1;;;;;8389:15:10;;20723:7;8389:15;;;:6;:15;;;;;:23;;;20697:7;;-1:-1:-1;;;;;8389:23:10;8381:67;;;;-1:-1:-1;;;8381:67:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;20768:15:10;::::1;20746:19;20768:15:::0;;;:6:::1;:15;::::0;;;;20811:13:::1;::::0;::::1;::::0;-1:-1:-1;;;;;20811:13:10;;::::1;::::0;20855:22;::::1;::::0;::::1;::::0;:66:::1;;-1:-1:-1::0;;;;;;20881:36:10;::::1;20920:1;20881:36:::0;;;:23:::1;::::0;::::1;:36;::::0;;;;;-1:-1:-1;;;;;20881:36:10::1;:40:::0;;20855:66:::1;20834:152;;;::::0;-1:-1:-1;;;20834:152:10;;19455:2:13;20834:152:10::1;::::0;::::1;19437:21:13::0;19494:2;19474:18;;;19467:30;19533:34;19513:18;;;19506:62;-1:-1:-1;;;19584:18:13;;;19577:37;19631:19;;20834:152:10::1;19253:403:13::0;20834:152:10::1;21016:15:::0;;20996:17:::1;21067:19:::0;;;:8:::1;:19;::::0;;;;;20996:17;21147:68:::1;21173:11:::0;21198:7;21147:12:::1;:68::i;:::-;-1:-1:-1::0;;;;;21230:39:10;::::1;21272:1;21230:39:::0;;;:23:::1;::::0;::::1;:39;::::0;;;;;21097:118;;-1:-1:-1;21097:118:10;-1:-1:-1;;;;;;21230:39:10::1;:43:::0;21226:154:::1;;-1:-1:-1::0;;;;;21326:39:10;::::1;21368:1;21326:39:::0;;;:23:::1;::::0;::::1;:39;::::0;;;;:43;;-1:-1:-1;;;;;;21326:43:10::1;::::0;;21226:154:::1;21416:21;::::0;::::1;::::0;21390:23:::1;21523:20:::0;;;21519:76:::1;;21583:1;21559:7;:20;;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;21519:76;21604:32;21623:13:::0;21604:32;::::1;:::i;:::-;21646:21;::::0;::::1;:39:::0;;;21757:26:::1;::::0;::::1;::::0;21736:18:::1;::::0;::::1;::::0;21604:32;;-1:-1:-1;21736:47:10::1;::::0;-1:-1:-1;;;;;;;;21757:26:10;;;::::1;::::0;::::1;::::0;21736:18;;::::1;;:47;:::i;:::-;-1:-1:-1::0;;;;;21717:66:10::1;:15;:66;;21696:141;;;::::0;-1:-1:-1;;;21696:141:10;;20089:2:13;21696:141:10::1;::::0;::::1;20071:21:13::0;20128:2;20108:18;;;20101:30;20167;20147:18;;;20140:58;20215:18;;21696:141:10::1;19887:352:13::0;21696:141:10::1;21849:9;21864:14;-1:-1:-1::0;;;;;21864:19:10::1;21891:13;21864:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21848:61;;;21927:4;21919:37;;;::::0;-1:-1:-1;;;21919:37:10;;20656:2:13;21919:37:10::1;::::0;::::1;20638:21:13::0;20695:2;20675:18;;;20668:30;-1:-1:-1;;;20714:18:13;;;20707:50;20774:18;;21919:37:10::1;20454:344:13::0;21919:37:10::1;21972:55;::::0;;-1:-1:-1;;;;;20993:39:13;;20975:58;;-1:-1:-1;;;;;21069:32:13;;21064:2;21049:18;;21042:60;22001:9:10;;21972:55:::1;::::0;20948:18:13;21972:55:10::1;;;;;;;22042:23;::::0;::::1;::::0;-1:-1:-1;;;;;22042:23:10::1;:28:::0;:57;::::1;;;;22092:7;-1:-1:-1::0;;;;;22074:25:10::1;:14;-1:-1:-1::0;;;;;22074:25:10::1;;22042:57;22038:121;;;22115:33;22131:7;22140;22115:15;:33::i;:::-;-1:-1:-1::0;22176:14:10;;20606:1591;-1:-1:-1;;;;;;;;;;20606:1591:10:o;7114:250::-;-1:-1:-1;;;;;7257:20:10;;7212:7;7257:20;;;:6;:20;;;;;7303:14;;;;7294:63;;-1:-1:-1;;;;;7303:14:10;;;7347:9;;7320:23;;-1:-1:-1;;;7329:14:10;;;;7320:6;:23;:::i;:::-;7319:37;;;;:::i;:::-;7294:8;:63::i;:::-;7287:70;7114:250;-1:-1:-1;;;;7114:250:10:o;27580:723::-;1094:13:0;:11;:13::i;:::-;27798:7:10::1;27786:8;:19;;;;27778:62;;;::::0;-1:-1:-1;;;27778:62:10;;21315:2:13;27778:62:10::1;::::0;::::1;21297:21:13::0;21354:2;21334:18;;;21327:30;21393:32;21373:18;;;21366:60;21443:18;;27778:62:10::1;21113:354:13::0;27778:62:10::1;27876:7;27858:14;:25;;;;27850:68;;;::::0;-1:-1:-1;;;27850:68:10;;21315:2:13;27850:68:10::1;::::0;::::1;21297:21:13::0;21354:2;21334:18;;;21327:30;21393:32;21373:18;;;21366:60;21443:18;;27850:68:10::1;21113:354:13::0;27850:68:10::1;-1:-1:-1::0;;;;;27951:20:10;::::1;27929:19;27951:20:::0;;;:6:::1;:20;::::0;;;;;;;;27981:35;;;28026:14:::1;::::0;::::1;:25:::0;;-1:-1:-1;;;;;28026:25:10;::::1;-1:-1:-1::0;;28061:25:10;;;;;-1:-1:-1;;;28061:25:10::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;28096:37:10::1;-1:-1:-1::0;;;28096:37:10;;::::1;::::0;;::::1;;::::0;;;28149:147;;21725:51:13;;;21792:18;;;21785:34;;;21835:18;;;21828:67;;;;21955:2;21940:18;;21933:43;;;;22007:3;21992:19;;21985:44;27951:20:10;28149:147:::1;::::0;21712:3:13;21697:19;28149:147:10::1;21472:563:13::0;16803:2324:10;-1:-1:-1;;;;;8389:15:10;;8424:1;8389:15;;;:6;:15;;;;;:23;;;16897:7;;-1:-1:-1;;;;;8389:23:10;8381:67;;;;-1:-1:-1;;;8381:67:10;;;;;;;:::i;:::-;-1:-1:-1;;;;;16942:15:10;::::1;16920:19;16942:15:::0;;;:6:::1;:15;::::0;;;;16987;;17034:17:::1;::::0;::::1;::::0;17069:15:::1;:29:::0;-1:-1:-1;17061:55:10::1;;;::::0;-1:-1:-1;;;17061:55:10;;22242:2:13;17061:55:10::1;::::0;::::1;22224:21:13::0;22281:2;22261:18;;;22254:30;-1:-1:-1;;;22300:18:13;;;22293:43;22353:18;;17061:55:10::1;22040:337:13::0;17061:55:10::1;17185:1;17147:19:::0;;;:8:::1;:19;::::0;;;;;;;:26:::1;::::0;-1:-1:-1;;;17147:26:10;::::1;-1:-1:-1::0;;;;;17147:26:10::1;:40:::0;17126:111:::1;;;::::0;-1:-1:-1;;;17126:111:10;;22584:2:13;17126:111:10::1;::::0;::::1;22566:21:13::0;22623:2;22603:18;;;22596:30;22662:26;22642:18;;;22635:54;22706:18;;17126:111:10::1;22382:348:13::0;17126:111:10::1;17269:19;::::0;;;:8:::1;:19;::::0;;;;;;;17304:12:::1;::::0;::::1;::::0;17269:48;;:34:::1;;:48:::0;;;;;;::::1;;17268:49;17247:120;;;::::0;-1:-1:-1;;;17247:120:10;;10459:2:13;17247:120:10::1;::::0;::::1;10441:21:13::0;10498:2;10478:18;;;10471:30;-1:-1:-1;;;10517:18:13;;;10510:54;10581:18;;17247:120:10::1;10257:348:13::0;17247:120:10::1;17456:13;::::0;::::1;::::0;17559:26:::1;::::0;::::1;::::0;17404:24:::1;::::0;-1:-1:-1;;;;;17456:13:10;::::1;::::0;-1:-1:-1;;;;;;;;17501:18:10;;;::::1;::::0;::::1;::::0;17559:26;;::::1;;17600:35:::0;;::::1;17596:706;;;17655:20;-1:-1:-1::0;;;;;17655:25:10::1;17679:1;17655:25:::0;17651:171:::1;;17719:88;17756:19:::0;;;:8:::1;:19;::::0;;;;;;;:33:::1;;::::0;17719:88;;:15:::1;:88:::0;;;;;;17700:107:::1;::::0;;::::1;:::i;:::-;;;17651:171;-1:-1:-1::0;;;;;17843:21:10;::::1;:10;:21:::0;17835:60:::1;;;::::0;-1:-1:-1;;;17835:60:10;;22937:2:13;17835:60:10::1;::::0;::::1;22919:21:13::0;22976:2;22956:18;;;22949:30;23015:28;22995:18;;;22988:56;23061:18;;17835:60:10::1;22735:350:13::0;17835:60:10::1;17947:35;17962:20:::0;17947:12;:35:::1;:::i;:::-;:39;::::0;17985:1:::1;17947:39;:::i;:::-;-1:-1:-1::0;;;;;17934:52:10::1;:9;:52;;17909:136;;;::::0;-1:-1:-1;;;17909:136:10;;23534:2:13;17909:136:10::1;::::0;::::1;23516:21:13::0;23573:2;23553:18;;;23546:30;-1:-1:-1;;;23592:18:13;;;23585:55;23657:18;;17909:136:10::1;23332:349:13::0;17909:136:10::1;17596:706;;;18084:10;-1:-1:-1::0;;;;;18084:21:10;::::1;;18076:56;;;::::0;-1:-1:-1;;;18076:56:10;;23888:2:13;18076:56:10::1;::::0;::::1;23870:21:13::0;23927:2;23907:18;;;23900:30;-1:-1:-1;;;23946:18:13;;;23939:52;24008:18;;18076:56:10::1;23686:346:13::0;18076:56:10::1;18222:10;18184:35;18207:12:::0;18184:20;:35:::1;:::i;:::-;:48;;;;:::i;:::-;-1:-1:-1::0;;;;;18171:61:10::1;:9;:61;;18146:145;;;::::0;-1:-1:-1;;;18146:145:10;;23534:2:13;18146:145:10::1;::::0;::::1;23516:21:13::0;23573:2;23553:18;;;23546:30;-1:-1:-1;;;23592:18:13;;;23585:55;23657:18;;18146:145:10::1;23332:349:13::0;18146:145:10::1;-1:-1:-1::0;;;;;18316:21:10;::::1;:10;:21:::0;18312:384:::1;;18353:33;18376:9;18353:33:::0;::::1;:::i;:::-;18400:18;::::0;::::1;:33:::0;;-1:-1:-1;;;;;18400:33:10::1;-1:-1:-1::0;;;;;;;;18400:33:10;::::1;;;::::0;;;-1:-1:-1;18312:384:10::1;;;18464:20;::::0;::::1;:33:::0;;-1:-1:-1;;;;;;18464:33:10::1;18487:10;18464:33:::0;;::::1;::::0;;;:20:::1;18511:35:::0;;;:23:::1;::::0;::::1;:35;::::0;;;;:56;;18557:9:::1;::::0;18464:20;18511:56:::1;::::0;18557:9;;-1:-1:-1;;;;;18511:56:10::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;18511:56:10::1;;;;;-1:-1:-1::0;;;;;18511:56:10::1;;;;;;18612:9;18581:41;;;;;:::i;:::-;18636:26;::::0;::::1;:49:::0;;-1:-1:-1;;;;;18636:49:10::1;-1:-1:-1::0;;;;;;;;18636:49:10;::::1;;;::::0;;;-1:-1:-1;18312:384:10::1;18746:11:::0;18710:33:::1;18728:15:::0;18710::::1;:33;:::i;:::-;:47;18706:170;;;18787:33;18805:15:::0;18787::::1;:33;:::i;:::-;18834:17;::::0;::::1;:31:::0;;;18773:47;-1:-1:-1;18706:170:10::1;19005:20;::::0;::::1;::::0;19098:12:::1;::::0;::::1;::::0;18891:229:::1;::::0;18914:9;;18891:229:::1;::::0;::::1;::::0;18937:7;;18958;;18979:12;;-1:-1:-1;;;;;19005:20:10;;::::1;::::0;19039;;19073:11;;18891:229:::1;:::i;:::-;;;;;;;;16910:2217;;;;;;;16803:2324:::0;;:::o;27186:388::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;27323:20:10;::::1;27306:14;27323:20:::0;;;:6:::1;:20;::::0;;;;:42:::1;;::::0;-1:-1:-1;;;27323:42:10;::::1;-1:-1:-1::0;;;;;27323:42:10::1;::::0;27375:43:::1;;;::::0;-1:-1:-1;;;27375:43:10;;24973:2:13;27375:43:10::1;::::0;::::1;24955:21:13::0;25012:2;24992:18;;;24985:30;-1:-1:-1;;;25031:18:13;;;25024:50;25091:18;;27375:43:10::1;24771:344:13::0;27375:43:10::1;-1:-1:-1::0;;;;;27428:20:10;;::::1;27473:1;27428:20:::0;;;:6:::1;:20;::::0;;;;:42:::1;;:46:::0;;;;::::1;::::0;;;27435:12;;27530:37:::1;::::0;27549:9;27560:6;27530:18:::1;:37::i;28567:324::-:0;1094:13:0;:11;:13::i;:::-;28715:1:10::1;28698:14;:18;28690:69;;;::::0;-1:-1:-1;;;28690:69:10;;25322:2:13;28690:69:10::1;::::0;::::1;25304:21:13::0;25361:2;25341:18;;;25334:30;25400:34;25380:18;;;25373:62;-1:-1:-1;;;25451:18:13;;;25444:36;25497:19;;28690:69:10::1;25120:402:13::0;28690:69:10::1;28769:30;::::0;;;:15:::1;:30;::::0;;;;;;;;:47;;;28832:52;;10784:25:13;;;10825:18;;;10818:34;;;28832:52:10::1;::::0;10757:18:13;28832:52:10::1;;;;;;;28567:324:::0;;:::o;19674:164::-;-1:-1:-1;;;;;8389:15:10;;19772:7;8389:15;;;:6;:15;;;;;:23;;;19746:7;;-1:-1:-1;;;;;8389:23:10;8381:67;;;;-1:-1:-1;;;8381:67:10;;;;;;;:::i;:::-;19802:29:::1;19811:10;19823:7;19802:8;:29::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;25982:2:13;2161:73:0::1;::::0;::::1;25964:21:13::0;26021:2;26001:18;;;25994:30;26060:34;26040:18;;;26033:62;-1:-1:-1;;;26111:18:13;;;26104:36;26157:19;;2161:73:0::1;25780:402:13::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1767:106:1:-:0;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;26389:2:13;1828:38:1;;;26371:21:13;26428:2;26408:18;;;26401:30;-1:-1:-1;;;26447:18:13;;;26440:46;26503:18;;1828:38:1;26187:340:13;974:241:4;1139:68;;-1:-1:-1;;;;;27442:15:13;;;1139:68:4;;;27424:34:13;27494:15;;27474:18;;;27467:43;27526:18;;;27519:34;;;1112:96:4;;1132:5;;-1:-1:-1;;;1162:27:4;27359:18:13;;1139:68:4;;;;-1:-1:-1;;1139:68:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:4;-1:-1:-1;;;;;;1139:68:4;;;;;;;;;;1112:19;:96::i;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;27766:2:13;1414:68:0;;;27748:21:13;;;27785:18;;;27778:30;27844:34;27824:18;;;27817:62;27896:18;;1414:68:0;27564:356:13;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;752:32:13;;;734:51;;722:2;707:18;2521:22:1::1;;;;;;;2433:117::o:0;:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;628:390:11:-;-1:-1:-1;;;;;763:20:11;;755:68;;;;-1:-1:-1;;;755:68:11;;28127:2:13;755:68:11;;;28109:21:13;28166:2;28146:18;;;28139:30;28205:34;28185:18;;;28178:62;-1:-1:-1;;;28256:18:13;;;28249:33;28299:19;;755:68:11;27925:399:13;755:68:11;891:1;854:22;;;:7;:22;;;;;:25;-1:-1:-1;;;;;854:25:11;:39;833:124;;;;-1:-1:-1;;;833:124:11;;28531:2:13;833:124:11;;;28513:21:13;28570:2;28550:18;;;28543:30;28609:34;28589:18;;;28582:62;-1:-1:-1;;;28660:18:13;;;28653:36;28706:19;;833:124:11;28329:402:13;833:124:11;967:44;;;;;;;;-1:-1:-1;;;;;967:44:11;;;;;;;;;;;;;;;-1:-1:-1;967:22:11;;;:7;:22;;;;;;;;:44;;:22;;:44;;:::i;763:205:4:-;902:58;;-1:-1:-1;;;;;28928:32:13;;902:58:4;;;28910:51:13;28977:18;;;28970:34;;;875:86:4;;895:5;;-1:-1:-1;;;925:23:4;28883:18:13;;902:58:4;28736:274:13;2186:115:1;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;22203:3434:10;-1:-1:-1;;;;;22362:15:10;;;22308:7;22362:15;;;:6;:15;;;;;;;;22422;;22413:25;;:8;:25;;;;;;;22473:23;;;;;22524:13;;;22627:26;;;;22308:7;;;;22362:15;;22413:25;22473:23;;;;-1:-1:-1;;;;;22524:13:10;;;-1:-1:-1;;;22569:18:10;;;;;;;22627:26;;;22708:35;22627:26;22569:18;22708:35;:::i;:::-;-1:-1:-1;;;;;22684:59:10;:5;:21;;;:59;22663:129;;;;-1:-1:-1;;;22663:129:10;;29217:2:13;22663:129:10;;;29199:21:13;29256:2;29236:18;;;29229:30;29295:25;29275:18;;;29268:53;29338:18;;22663:129:10;29015:347:13;22663:129:10;23273:14;;;;23314;;;;22803:15;;-1:-1:-1;;;23273:14:10;;-1:-1:-1;;;;;23273:14:10;;23343:20;;23339:755;;23441:7;-1:-1:-1;;;;;23431:17:10;:6;-1:-1:-1;;;;;23431:17:10;;:43;;;;;23462:5;:12;;;23452:6;:22;23431:43;23418:56;;23339:755;;;23495:30;;;;:22;;;:30;;;;;;;;23491:603;;;23593:5;23580:18;;23491:603;;;-1:-1:-1;;;;;23619:20:10;;;23615:479;;-1:-1:-1;;;;;23734:23:10;;;;;;:6;:23;;;;;:31;;;-1:-1:-1;;;;;23723:42:10;;;23734:31;;23723:42;:108;;;;-1:-1:-1;;;;;;23801:23:10;;;;;;:6;:23;;;;;;;;:30;;;23785:12;;;;:46;23694:137;;23615:479;;;23945:5;:17;;;23926:15;:36;;23901:120;;;;-1:-1:-1;;;23901:120:10;;29569:2:13;23901:120:10;;;29551:21:13;29608:2;29588:18;;;29581:30;29647:27;29627:18;;;29620:55;29692:18;;23901:120:10;29367:349:13;23901:120:10;24063:20;-1:-1:-1;;;;;24048:35:10;:12;-1:-1:-1;;;;;24048:35:10;;24035:48;;23615:479;24158:20;24188:22;24225:10;24221:785;;;-1:-1:-1;24331:7:10;24368:35;24383:20;24368:12;:35;:::i;:::-;24352:51;;24221:785;;;-1:-1:-1;;;;;24424:24:10;;;24420:586;;-1:-1:-1;;;;;;24600:39:10;;;;;;:23;;;;:39;;;;;;;24555:11;;24596:43;;-1:-1:-1;;;;;24600:39:10;;24596:43;:::i;:::-;24580:59;;24677:1;24661:13;-1:-1:-1;;;;;24661:17:10;;24653:64;;;;-1:-1:-1;;;24653:64:10;;30206:2:13;24653:64:10;;;30188:21:13;30245:2;30225:18;;;30218:30;30284:34;30264:18;;;30257:62;-1:-1:-1;;;30335:18:13;;;30328:32;30377:19;;24653:64:10;30004:398:13;24653:64:10;24420:586;;;-1:-1:-1;;1247:7:0;1273:6;24983:12:10;;-1:-1:-1;;;;;1273:6:0;24420:586:10;25315:20;;;;-1:-1:-1;;;;;25315:20:10;;;25297:38;;;;25293:289;;25370:20;-1:-1:-1;;;;;25355:35:10;:12;-1:-1:-1;;;;;25355:35:10;;25351:221;;;25428:35;25443:20;25428:12;:35;:::i;:::-;25410:54;;;;:::i;:::-;;;25351:221;;;25521:35;25544:12;25521:20;:35;:::i;:::-;25503:54;;;;:::i;:::-;;;25351:221;25600:14;-1:-1:-1;;;;;;25592:38:10;;-1:-1:-1;;;;;;;;;;22203:3434:10;;;;;:::o;25643:502::-;-1:-1:-1;;;;;25749:15:10;;25727:19;25749:15;;;:6;:15;;;;;;;;;25792:13;;;;25837:15;;25820:42;;18802:25:13;;;-1:-1:-1;;;;;25792:13:10;;;18843:18:13;;;18836:60;;;25749:15:10;;25820:42;;18775:18:13;25820:42:10;;;;;;;25873:23;;;:33;;-1:-1:-1;;;;;;25873:33:10;-1:-1:-1;;;;;25873:33:10;;;;;;;;;;25977:32;;;;-1:-1:-1;25924:26:10;;;;-1:-1:-1;;;;;25924:26:10;-1:-1:-1;25917:34:10;;;:6;:34;;;;;:56;:92;;-1:-1:-1;;;25977:32:10;;;;;;25917:56;;;;:92;;25977:32;;-1:-1:-1;;;25917:92:10;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;25917:92:10;;;;;;;;;;;;;;;-1:-1:-1;26042:26:10;;;26124:13;;;;26107:14;;;;-1:-1:-1;;;;;26042:26:10;;;;-1:-1:-1;26079:59:10;;26098:7;;26107:30;;26124:13;;;;;;;26107:30;:::i;26079:59::-;25717:428;;;25643:502;;:::o;413:104:7:-;471:7;501:1;497;:5;:13;;509:1;497:13;;;-1:-1:-1;505:1:7;;413:104;-1:-1:-1;413:104:7:o;3747:706:4:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:4;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:4;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:4;;30609:2:13;4351:85:4;;;30591:21:13;30648:2;30628:18;;;30621:30;30687:34;30667:18;;;30660:62;-1:-1:-1;;;30738:18:13;;;30731:40;30788:19;;4351:85:4;30407:406:13;1945:106:1;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;31020:2:13;2003:41:1;;;31002:21:13;31059:2;31039:18;;;31032:30;-1:-1:-1;;;31078:18:13;;;31071:50;31138:18;;2003:41:1;30818:344:13;3873:223:5;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:5;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:5:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:5;;;7908:60;;;;-1:-1:-1;;;7908:60:5;;32318:2:13;7908:60:5;;;32300:21:13;32357:2;32337:18;;;32330:30;32396:31;32376:18;;;32369:59;32445:18;;7908:60:5;32116:353:13;7908:60:5;-1:-1:-1;8003:10:5;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:5;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:316:13;91:6;99;107;160:2;148:9;139:7;135:23;131:32;128:52;;;176:1;173;166:12;128:52;-1:-1:-1;;199:23:13;;;269:2;254:18;;241:32;;-1:-1:-1;320:2:13;305:18;;;292:32;;14:316;-1:-1:-1;14:316:13:o;335:248::-;403:6;411;464:2;452:9;443:7;439:23;435:32;432:52;;;480:1;477;470:12;432:52;-1:-1:-1;;503:23:13;;;573:2;558:18;;;545:32;;-1:-1:-1;335:248:13:o;796:180::-;855:6;908:2;896:9;887:7;883:23;879:32;876:52;;;924:1;921;914:12;876:52;-1:-1:-1;947:23:13;;796:180;-1:-1:-1;796:180:13:o;1355:173::-;1423:20;;-1:-1:-1;;;;;1472:31:13;;1462:42;;1452:70;;1518:1;1515;1508:12;1452:70;1355:173;;;:::o;1533:254::-;1601:6;1609;1662:2;1650:9;1641:7;1637:23;1633:32;1630:52;;;1678:1;1675;1668:12;1630:52;1701:29;1720:9;1701:29;:::i;:::-;1691:39;1777:2;1762:18;;;;1749:32;;-1:-1:-1;;;1533:254:13:o;1792:541::-;1896:6;1904;1912;1920;1928;1936;1989:3;1977:9;1968:7;1964:23;1960:33;1957:53;;;2006:1;2003;1996:12;1957:53;2042:9;2029:23;2019:33;;2071:38;2105:2;2094:9;2090:18;2071:38;:::i;:::-;2061:48;;2128:38;2162:2;2151:9;2147:18;2128:38;:::i;:::-;2118:48;;2185:38;2219:2;2208:9;2204:18;2185:38;:::i;:::-;2175:48;;2270:3;2259:9;2255:19;2242:33;2232:43;;2322:3;2311:9;2307:19;2294:33;2284:43;;1792:541;;;;;;;;:::o;2958:186::-;3017:6;3070:2;3058:9;3049:7;3045:23;3041:32;3038:52;;;3086:1;3083;3076:12;3038:52;3109:29;3128:9;3109:29;:::i;3149:179::-;3216:20;;-1:-1:-1;;;;;3265:38:13;;3255:49;;3245:77;;3318:1;3315;3308:12;3333:184;3391:6;3444:2;3432:9;3423:7;3419:23;3415:32;3412:52;;;3460:1;3457;3450:12;3412:52;3483:28;3501:9;3483:28;:::i;4321:322::-;4398:6;4406;4414;4467:2;4455:9;4446:7;4442:23;4438:32;4435:52;;;4483:1;4480;4473:12;4435:52;4506:29;4525:9;4506:29;:::i;:::-;4496:39;4582:2;4567:18;;4554:32;;-1:-1:-1;4633:2:13;4618:18;;;4605:32;;4321:322;-1:-1:-1;;;4321:322:13:o;4861:391::-;4947:6;4955;4963;4971;5024:3;5012:9;5003:7;4999:23;4995:33;4992:53;;;5041:1;5038;5031:12;4992:53;5077:9;5064:23;5054:33;;5134:2;5123:9;5119:18;5106:32;5096:42;;5185:2;5174:9;5170:18;5157:32;5147:42;;5208:38;5242:2;5231:9;5227:18;5208:38;:::i;:::-;5198:48;;4861:391;;;;;;;:::o;5257:328::-;5334:6;5342;5350;5403:2;5391:9;5382:7;5378:23;5374:32;5371:52;;;5419:1;5416;5409:12;5371:52;5455:9;5442:23;5432:33;;5484:38;5518:2;5507:9;5503:18;5484:38;:::i;:::-;5474:48;;5541:38;5575:2;5564:9;5560:18;5541:38;:::i;:::-;5531:48;;5257:328;;;;;:::o;5590:258::-;5657:6;5665;5718:2;5706:9;5697:7;5693:23;5689:32;5686:52;;;5734:1;5731;5724:12;5686:52;5757:29;5776:9;5757:29;:::i;:::-;5747:39;;5805:37;5838:2;5827:9;5823:18;5805:37;:::i;:::-;5795:47;;5590:258;;;;;:::o;5853:163::-;5920:20;;5980:10;5969:22;;5959:33;;5949:61;;6006:1;6003;5996:12;6021:472;6113:6;6121;6129;6137;6145;6198:3;6186:9;6177:7;6173:23;6169:33;6166:53;;;6215:1;6212;6205:12;6166:53;6238:29;6257:9;6238:29;:::i;:::-;6228:39;;6314:2;6303:9;6299:18;6286:32;6276:42;;6337:37;6370:2;6359:9;6355:18;6337:37;:::i;:::-;6327:47;;6393:37;6426:2;6415:9;6411:18;6393:37;:::i;:::-;6383:47;;6449:38;6482:3;6471:9;6467:19;6449:38;:::i;:::-;6439:48;;6021:472;;;;;;;;:::o;7574:260::-;7642:6;7650;7703:2;7691:9;7682:7;7678:23;7674:32;7671:52;;;7719:1;7716;7709:12;7671:52;7742:29;7761:9;7742:29;:::i;:::-;7732:39;;7790:38;7824:2;7813:9;7809:18;7790:38;:::i;8541:356::-;8743:2;8725:21;;;8762:18;;;8755:30;8821:34;8816:2;8801:18;;8794:62;8888:2;8873:18;;8541:356::o;8902:398::-;9104:2;9086:21;;;9143:2;9123:18;;;9116:30;9182:34;9177:2;9162:18;;9155:62;-1:-1:-1;;;9248:2:13;9233:18;;9226:32;9290:3;9275:19;;8902:398::o;9614:277::-;9681:6;9734:2;9722:9;9713:7;9709:23;9705:32;9702:52;;;9750:1;9747;9740:12;9702:52;9782:9;9776:16;9835:5;9828:13;9821:21;9814:5;9811:32;9801:60;;9857:1;9854;9847:12;10863:343;11065:2;11047:21;;;11104:2;11084:18;;;11077:30;-1:-1:-1;;;11138:2:13;11123:18;;11116:49;11197:2;11182:18;;10863:343::o;11211:127::-;11272:10;11267:3;11263:20;11260:1;11253:31;11303:4;11300:1;11293:15;11327:4;11324:1;11317:15;11343:128;11383:3;11414:1;11410:6;11407:1;11404:13;11401:39;;;11420:18;;:::i;:::-;-1:-1:-1;11456:9:13;;11343:128::o;12897:184::-;12967:6;13020:2;13008:9;12999:7;12995:23;12991:32;12988:52;;;13036:1;13033;13026:12;12988:52;-1:-1:-1;13059:16:13;;12897:184;-1:-1:-1;12897:184:13:o;13437:244::-;13476:3;-1:-1:-1;;;;;13557:2:13;13554:1;13550:10;13587:2;13584:1;13580:10;13618:3;13614:2;13610:12;13605:3;13602:21;13599:47;;;13626:18;;:::i;:::-;13662:13;;13437:244;-1:-1:-1;;;;13437:244:13:o;14409:168::-;14449:7;14515:1;14511;14507:6;14503:14;14500:1;14497:21;14492:1;14485:9;14478:17;14474:45;14471:71;;;14522:18;;:::i;:::-;-1:-1:-1;14562:9:13;;14409:168::o;14582:217::-;14622:1;14648;14638:132;;14692:10;14687:3;14683:20;14680:1;14673:31;14727:4;14724:1;14717:15;14755:4;14752:1;14745:15;14638:132;-1:-1:-1;14784:9:13;;14582:217::o;16600:228::-;16639:3;16667:10;16704:2;16701:1;16697:10;16734:2;16731:1;16727:10;16765:3;16761:2;16757:12;16752:3;16749:21;16746:47;;;16773:18;;:::i;16833:738::-;-1:-1:-1;;;;;17214:15:13;;;17196:34;;-1:-1:-1;;;;;17304:15:13;;;17299:2;17284:18;;17277:43;17356:15;;;17351:2;17336:18;;17329:43;17408:15;;;;17403:2;17388:18;;17381:43;17461:15;;;17455:3;17440:19;;17433:44;17257:3;17493:19;;17486:35;;;;17552:3;17537:19;;17530:35;;;;17138:3;17123:19;;16833:738::o;18907:341::-;19109:2;19091:21;;;19148:2;19128:18;;;19121:30;-1:-1:-1;;;19182:2:13;19167:18;;19160:47;19239:2;19224:18;;18907:341::o;19661:221::-;19700:4;19729:10;19789;;;;19759;;19811:12;;;19808:38;;;19826:18;;:::i;:::-;19863:13;;19661:221;-1:-1:-1;;;19661:221:13:o;23090:237::-;23129:4;-1:-1:-1;;;;;23234:10:13;;;;23204;;23256:12;;;23253:38;;;23271:18;;:::i;29721:278::-;29760:7;-1:-1:-1;;;;;29845:2:13;29842:1;29838:10;29875:2;29872:1;29868:10;29931:3;29927:2;29923:12;29918:3;29915:21;29908:3;29901:11;29894:19;29890:47;29887:73;;;29940:18;;:::i;:::-;29980:13;;29721:278;-1:-1:-1;;;;29721:278:13:o;31574:258::-;31646:1;31656:113;31670:6;31667:1;31664:13;31656:113;;;31746:11;;;31740:18;31727:11;;;31720:39;31692:2;31685:10;31656:113;;;31787:6;31784:1;31781:13;31778:48;;;-1:-1:-1;;31822:1:13;31804:16;;31797:27;31574:258::o;31837:274::-;31966:3;32004:6;31998:13;32020:53;32066:6;32061:3;32054:4;32046:6;32042:17;32020:53;:::i;:::-;32089:16;;;;;31837:274;-1:-1:-1;;31837:274:13:o;32474:383::-;32623:2;32612:9;32605:21;32586:4;32655:6;32649:13;32698:6;32693:2;32682:9;32678:18;32671:34;32714:66;32773:6;32768:2;32757:9;32753:18;32748:2;32740:6;32736:15;32714:66;:::i;:::-;32841:2;32820:15;-1:-1:-1;;32816:29:13;32801:45;;;;32848:2;32797:54;;32474:383;-1:-1:-1;;32474:383:13:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ClaimMade(bytes32,uint96,address,uint96,address,uint96,uint256,bytes32)": {
        "notice": "Emitted when a claim or a counter-claim (challenge) has been made. .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`"
      },
      "ClaimStakeWithdrawn(uint96,bytes32,address)": {
        "notice": "Emitted when staked native tokens tied to a claim have been withdrawn. This can only happen when the claim has been resolved and the caller of :sol:func:`withdraw` is allowed to withdraw their stake. .. seealso:: :sol:func:`withdraw`"
      },
      "DepositWithdrawn(bytes32,address)": {
        "notice": "Emitted when the token deposit for request ``requestId`` has been transferred to the ``receiver``. This can happen in two cases:  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`  * a claim related to the request has been resolved successfully in favor of the claimer .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`"
      },
      "FillInvalidatedResolved(bytes32,bytes32)": {
        "notice": "Emitted when an invalidated fill has been resolved. .. seealso:: :sol:func:`invalidateFill`"
      },
      "LpAdded(address)": {
        "notice": "Emitted when a liquidity provider has been added to the set of allowed liquidity providers. .. seealso:: :sol:func:`addAllowedLp`"
      },
      "LpRemoved(address)": {
        "notice": "Emitted when a liquidity provider has been removed from the set of allowed liquidity providers. .. seealso:: :sol:func:`removeAllowedLp`"
      },
      "RequestCreated(bytes32,uint256,address,address,address,address,uint256,uint96,uint32)": {
        "notice": "Emitted when a new request has been created. .. seealso:: :sol:func:`createRequest`"
      },
      "RequestResolved(bytes32,address,bytes32)": {
        "notice": "Emitted when a request has been resolved via L1 resolution. .. seealso:: :sol:func:`resolveRequest`"
      },
      "TokenUpdated(address,uint256,uint96,uint32,uint32)": {
        "notice": "Emitted when token object of a token address is updated. .. seealso:: :sol:func:`updateToken`"
      }
    },
    "kind": "dev",
    "methods": {
      "CLAIM_ID_WITHDRAWN_EXPIRED()": {
        "notice": "withdrawClaimId is set to this value when an expired request gets withdrawn by the sender"
      },
      "MAX_VALIDITY_PERIOD()": {
        "notice": "The maximum validity period of a request."
      },
      "MIN_VALIDITY_PERIOD()": {
        "notice": "The minimum validity period of a request."
      },
      "addAllowedLp(address)": {
        "notice": "Add a liquidity provider to the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "newLp": "The liquidity provider."
        }
      },
      "addCaller(address)": {
        "notice": "Allow calls from an address on the same chain.",
        "params": {
          "caller": "The caller."
        }
      },
      "addCaller(uint256,address,address)": {
        "notice": "Allow calls from an address on another chain.",
        "params": {
          "caller": "The caller.",
          "callerChainId": "The caller's chain ID.",
          "messenger": "The messenger."
        }
      },
      "allowedLps(address)": {
        "notice": "The mapping indicating whether liquidity providers have allowance or not"
      },
      "callers(uint256,uint256)": {
        "notice": "Maps caller chain IDs to tuples [caller, messenger]. For same-chain calls, the messenger address is 0x0."
      },
      "challengeClaim(uint96)": {
        "notice": "Challenge an existing claim. The claim must still be valid at call time. This function implements one round of the challenge game. The original claimer is allowed to call this function only after someone else made a challenge, i.e. every second round. However, once the original claimer counter-challenges, anyone can join the game and make another challenge. The caller must provide enough native tokens as their stake. For the original claimer, the minimum stake is ``challengerStakeTotal - claimerStake + claimStake``. For challengers, the minimum stake is ``claimerStake - challengerStakeTotal + 1``. An example (time flows downwards, claimStake = 10)::   claimRequest() by Max [stakes 10]   challengeClaim() by Alice [stakes 11]   challengeClaim() by Max [stakes 11]   challengeClaim() by Bob [stakes 16] In this example, if Max didn't want to lose the challenge game to Alice and Bob, he would have to challenge with a stake of at least 16.",
        "params": {
          "claimId": "The claim ID."
        }
      },
      "challengePeriodExtension()": {
        "notice": "The period by which the termination time of a claim is extended after each round of the challenge game. This period should allow enough time for the other parties to counter-challenge. .. note::    The claim's termination time is extended only if it is less than the    extension time. Note that in the first challenge round, i.e. the round initiated by the first challenger, the termination time is extended additionally by the finality period of the target chain. This is done to allow for L1 resolution."
      },
      "claimPeriod()": {
        "notice": "The period for which the claim is valid."
      },
      "claimRequest(address,bytes32,bytes32)": {
        "notice": "Claim that a request was filled. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token. Only the claimer may get the stake back later.",
        "params": {
          "claimer": "Address of the claimer.",
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimRequest(bytes32,bytes32)": {
        "notice": "Claim that a request was filled by the caller. The request must still be valid at call time. The caller must provide the ``claimStake`` amount of source rollup's native token.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "ID of the request."
        },
        "returns": {
          "_0": "The claim ID."
        }
      },
      "claimRequestExtension()": {
        "notice": "The additional time given to claim a request. This value is added to the validity period of a request."
      },
      "claimStake()": {
        "notice": "The minimum amount of source chain's native token that the claimer needs to provide when making a claim, as well in each round of the challenge game."
      },
      "claims(uint96)": {
        "notice": "Maps claim IDs to claims."
      },
      "constructor": {
        "notice": "Constructor.",
        "params": {
          "_challengePeriodExtension": "Challenge period extension, in seconds.",
          "_claimPeriod": "Claim period, in seconds.",
          "_claimRequestExtension": "Extension to claim a request after validity period ends.",
          "_claimStake": "Claim stake amount."
        }
      },
      "createRequest(uint256,address,address,address,uint256,uint256)": {
        "notice": "Create a new transfer request.",
        "params": {
          "amount": "Amount of tokens to transfer. Does not include fees.",
          "sourceTokenAddress": "Address of the token contract on the source chain.",
          "targetAddress": "Recipient address on the target chain.",
          "targetChainId": "ID of the target chain.",
          "targetTokenAddress": "Address of the token contract on the target chain.",
          "validityPeriod": "The number of seconds the request is to be considered valid.                       Once its validity period has elapsed, the request cannot be claimed                       anymore and will eventually expire, allowing the request submitter                       to withdraw the deposited tokens if there are no active claims."
        },
        "returns": {
          "_0": "ID of the newly created request."
        }
      },
      "currentNonce()": {
        "notice": "A counter used to generate request and claim IDs. The variable holds the most recently used nonce and must be incremented to get the next nonce"
      },
      "finalityPeriods(uint256)": {
        "notice": "Maps target rollup chain IDs to finality periods. Finality periods are in seconds."
      },
      "invalidateFill(bytes32,bytes32,uint256)": {
        "notice": "Mark the fill identified by ``requestId`` and ``fillId`` as invalid. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "isInvalidFill(bytes32,bytes32)": {
        "notice": "Returns whether a fill is invalidated or not Calling invalidateFill() will set this boolean to true, marking that the ``fillId`` for the corresponding ``requestId`` was invalidated. Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId] to false. .. seealso:: :sol:func:`invalidateFill` .. seealso:: :sol:func:`resolveRequest`",
        "params": {
          "fillId": "The fill ID",
          "requestId": "The request ID"
        },
        "returns": {
          "_0": "Whether the fill ID is invalid for the given request ID"
        }
      },
      "isWithdrawn(bytes32)": {
        "notice": "Returns whether a request's deposit was withdrawn or not This can be true in two cases: 1. The deposit was withdrawn after the request was claimed and filled. 2. The submitter withdrew the deposit after the request's expiry. .. seealso:: :sol:func:`withdraw` .. seealso:: :sol:func:`withdrawExpiredRequest`",
        "params": {
          "requestId": "The request ID"
        },
        "returns": {
          "_0": "Whether the deposit corresponding to the given request ID was withdrawn"
        }
      },
      "lpFee(address,uint256)": {
        "notice": "Compute the liquidity provider fee that needs to be paid for a given transfer amount."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "notice": "Pauses the contract. Once the contract is paused, it cannot be used to create new requests anymore. Withdrawing deposited funds and claim stakes still works, though. .. note:: This function can only be called when the contract is not paused. .. note:: This function can only be called by the contract owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "protocolFee(address,uint256)": {
        "notice": "Compute the protocol fee that needs to be paid for a given transfer amount."
      },
      "removeAllowedLp(address)": {
        "notice": "Remove a liquidity provider from the set of allowed liquidity providers. .. note:: This function can only be called by the contract owner.",
        "params": {
          "oldLp": "The liquidity provider."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requests(bytes32)": {
        "notice": "Maps request IDs to requests."
      },
      "resolveRequest(bytes32,bytes32,uint256,address)": {
        "notice": "Mark the request identified by ``requestId`` as filled by ``filler``. .. note::     This function is a restricted call function. Only callable by the added caller.",
        "params": {
          "fillId": "The fill ID.",
          "filler": "The address that filled the request.",
          "requestId": "The request ID.",
          "resolutionChainId": "The resolution (L1) chain ID."
        }
      },
      "setFinalityPeriod(uint256,uint256)": {
        "notice": "Set the finality period for the given target chain. .. note:: This function can only be called by the contract owner.",
        "params": {
          "finalityPeriod": "Finality period in seconds.",
          "targetChainId": "The target chain ID."
        }
      },
      "tokens(address)": {
        "notice": "Maps ERC20 token address to tokens"
      },
      "totalFee(address,uint256)": {
        "notice": "Compute the total fee that needs to be paid for a given transfer amount. The total fee is the sum of the liquidity provider fee and the protocol fee."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "notice": "Unpauses the contract. Once the contract is unpaused, it can be used normally. .. note:: This function can only be called when the contract is paused. .. note:: This function can only be called by the contract owner."
      },
      "withdraw(address,uint96)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. This function is called on behalf of a participant. Only a participant may receive the funds if he is the winner of the challenge or the claim is valid. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID.",
          "participant": "The participant."
        },
        "returns": {
          "_0": "The claim stakes receiver."
        }
      },
      "withdraw(uint96)": {
        "notice": "Withdraw the deposit that the request submitter left with the contract, as well as the staked native tokens associated with the claim. In case the caller of this function is a challenger that won the game, they will only get their staked native tokens plus the reward in the form of full (sole challenger) or partial (multiple challengers) amount of native tokens staked by the dishonest claimer.",
        "params": {
          "claimId": "The claim ID."
        },
        "returns": {
          "_0": "The claim stakes receiver."
        }
      },
      "withdrawExpiredRequest(bytes32)": {
        "notice": "Withdraw funds deposited with an expired request. No claims must be active for the request.",
        "params": {
          "requestId": "ID of the expired request."
        }
      },
      "withdrawProtocolFees(address,address)": {
        "notice": "Withdraw protocol fees collected by the contract. Protocol fees are paid in token transferred. .. note:: This function can only be called by the contract owner.",
        "params": {
          "recipient": "The address the fees should be sent to.",
          "tokenAddress": "The address of the token contract."
        }
      }
    },
    "notice": "The request manager. This contract is responsible for keeping track of transfer requests, implementing the rules of the challenge game and holding deposited tokens until they are withdrawn. The information passed by L1 resolution will be stored with the respective requests. It is the only contract that agents need to interact with on the source chain. .. note::   The functions resolveRequest and invalidateFill can only be called by   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.",
    "version": 1
  },
  "offset": [
    1141,
    32185
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x246 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x747293FB GT PUSH2 0x139 JUMPI DUP1 PUSH4 0x9D866985 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD137920B GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD137920B EQ PUSH2 0x8BC JUMPI DUP1 PUSH4 0xDEE4DEA0 EQ PUSH2 0x8DC JUMPI DUP1 PUSH4 0xE4860339 EQ PUSH2 0x8FC JUMPI DUP1 PUSH4 0xEA628898 EQ PUSH2 0x996 JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x9B1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D866985 EQ PUSH2 0x719 JUMPI DUP1 PUSH4 0x9E375226 EQ PUSH2 0x834 JUMPI DUP1 PUSH4 0xADB610A3 EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0xB4D1D27A EQ PUSH2 0x889 JUMPI DUP1 PUSH4 0xCF7B287F EQ PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C8C3C9D GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8C8C3C9D EQ PUSH2 0x684 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0x909EF10C EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0x96171D05 EQ PUSH2 0x6E2 JUMPI DUP1 PUSH4 0x962DDF89 EQ PUSH2 0x6F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x747293FB EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0x79650559 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0x83D208C3 EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31E08F7A GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x5B3A6EF2 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x5B3A6EF2 EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x7203AE3B EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0x743C151A EQ PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31E08F7A EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x3993B6ED EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x3B046F09 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0x599B08A2 EQ PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2C9AF6B7 GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x2C9AF6B7 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x2F4212B8 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x2F92F009 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x30A08CBC EQ PUSH2 0x39F JUMPI DUP1 PUSH4 0x30B72906 EQ PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FC4C37 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xE19A1C6 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xE3A918C EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x1489F8D2 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x2FE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x323D JUMP JUMPDEST PUSH2 0xA05 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0x288 CALLDATASIZE PUSH1 0x4 PUSH2 0x3269 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x328B JUMP JUMPDEST PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x708 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x32EA JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0x3269 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x119E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x419 CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x439 CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x1244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B6 PUSH2 0x459 CALLDATASIZE PUSH1 0x4 PUSH2 0x337B JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD SWAP3 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP6 DUP7 SWAP1 DIV DUP2 AND SWAP7 SWAP3 DUP6 AND SWAP6 SWAP1 SWAP5 DIV SWAP1 SWAP4 AND SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP7 DUP8 AND SWAP1 DUP10 ADD MSTORE SWAP6 SWAP1 SWAP4 AND PUSH1 0x60 DUP8 ADD MSTORE SWAP3 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x129D JUMP JUMPDEST PUSH2 0x52F PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x3396 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x33C9 JUMP JUMPDEST PUSH2 0x167F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x2CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x5AF CALLDATASIZE PUSH1 0x4 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x52F PUSH2 0x5C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3269 JUMP JUMPDEST PUSH2 0x185A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x5E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x602 CALLDATASIZE PUSH1 0x4 PUSH2 0x328B JUMP JUMPDEST PUSH2 0x1908 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x1B20 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x3444 JUMP JUMPDEST PUSH2 0x1B30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH2 0x6DD CALLDATASIZE PUSH1 0x4 PUSH2 0x32C0 JUMP JUMPDEST PUSH2 0x1EB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH3 0x2A300 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x714 CALLDATASIZE PUSH1 0x4 PUSH2 0x348B JUMP JUMPDEST PUSH2 0x1F14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BE PUSH2 0x734 CALLDATASIZE PUSH1 0x4 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP6 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP7 SWAP4 DUP6 AND SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH5 0x100000000 DUP5 DIV DUP2 AND SWAP6 PUSH1 0x1 PUSH1 0x80 SHL DUP6 DIV DUP3 AND SWAP6 PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP6 DIV SWAP1 SWAP4 AND SWAP4 SWAP1 DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 DUP12 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP13 DUP14 AND DUP2 MSTORE SWAP11 DUP13 AND PUSH1 0x20 DUP13 ADD MSTORE DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH4 0xFFFFFFFF SWAP5 DUP6 AND PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP4 DUP5 AND PUSH1 0xA0 DUP10 ADD MSTORE SWAP2 DUP4 AND PUSH1 0xC0 DUP9 ADD MSTORE SWAP1 SWAP3 AND PUSH1 0xE0 DUP7 ADD MSTORE AND PUSH2 0x100 DUP5 ADD MSTORE SWAP1 SWAP3 AND PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x160 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x84F CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x52F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x897 CALLDATASIZE PUSH1 0x4 PUSH2 0x337B JUMP JUMPDEST PUSH2 0x208B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x8B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x34E9 JUMP JUMPDEST PUSH2 0x259C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x8D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3269 JUMP JUMPDEST PUSH2 0x2645 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0x8F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x337B JUMP JUMPDEST PUSH2 0x26FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x95E PUSH2 0x917 CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND SWAP2 PUSH4 0xFFFFFFFF PUSH1 0x1 PUSH1 0x60 SHL DUP3 DIV DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH4 0xFFFFFFFF SWAP4 DUP5 AND SWAP1 DUP7 ADD MSTORE SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0xA00 CALLDATASIZE PUSH1 0x4 PUSH2 0x3349 JUMP JUMPDEST PUSH2 0x2748 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0xA5C JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3513 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB22 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x358A JUMP JUMPDEST PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045 SWAP1 PUSH2 0xC46 SWAP1 DUP9 SWAP1 DUP9 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0xC72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x35AC JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP4 DUP4 PUSH2 0x119E JUMP JUMPDEST PUSH2 0xCF3 DUP5 DUP5 PUSH2 0x1EB5 JUMP JUMPDEST PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x35EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD0E PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x708 DUP3 LT ISZERO PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F2073686F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH3 0x2A300 DUP3 GT ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742065786365656473207472616E73666572206C696D6974000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE84 DUP8 DUP6 PUSH2 0x1EB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE92 DUP9 DUP7 PUSH2 0x119E JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xE9F DUP4 DUP8 PUSH2 0x35EF JUMP JUMPDEST PUSH2 0xEA9 SWAP2 SWAP1 PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x3607 JUMP JUMPDEST LT ISZERO PUSH2 0xF5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xF7D SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH2 0x100 MUL PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CHAINID PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP15 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP14 DUP2 SHL DUP3 AND DUP2 DUP6 ADD MSTORE DUP13 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT PUSH1 0xA0 DUP6 SWAP1 SHL AND PUSH1 0xA8 DUP4 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB PUSH1 0x94 ADD DUP2 MSTORE PUSH1 0xB4 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND OR SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP14 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP10 SWAP1 SSTORE SWAP1 SWAP2 POP PUSH2 0x105E DUP8 TIMESTAMP PUSH2 0x35EF JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x4 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x869AB8728BDAE6AAE9B6D728DA37437CCF3DDFD7A141903F22CB8324739683DE DUP15 DUP15 DUP15 DUP15 DUP15 DUP11 DUP16 TIMESTAMP PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP5 DUP7 AND DUP8 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP1 SWAP3 AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 LOG3 PUSH2 0x118F CALLER ADDRESS DUP7 PUSH2 0x1173 DUP10 DUP14 PUSH2 0x35EF JUMP JUMPDEST PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP3 SWAP2 SWAP1 PUSH2 0x2804 JUMP JUMPDEST POP SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH3 0xF4240 SWAP1 PUSH2 0x11D6 SWAP1 PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP5 PUSH2 0x364B JUMP JUMPDEST PUSH2 0xCFD SWAP2 SWAP1 PUSH2 0x366A JUMP JUMPDEST PUSH2 0x11E8 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x124C PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SWAP1 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198 SWAP2 ADD PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x12A5 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x28C9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x35AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP1 PUSH1 0xFF AND PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x1381 SWAP1 PUSH32 0x0 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x35EF JUMP JUMPDEST TIMESTAMP LT PUSH2 0x13D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526571756573742063616E6E6F7420626520636C61696D656420616E796D6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND CALLVALUE EQ PUSH2 0x149F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDD185AD948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST DUP5 PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x46696C6C4964206D757374206E6F742062652030783 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1509 SWAP2 SWAP1 PUSH2 0x368C JUMP JUMPDEST DUP3 SLOAD PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH2 0x100 SWAP4 DUP5 EXP SWAP1 DUP2 MUL SWAP3 MUL NOT AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 POP PUSH2 0x1541 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP2 DIV AND PUSH1 0x1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND MUL OR SWAP1 SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1594 PUSH32 0x0 TIMESTAMP PUSH2 0x35EF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP9 DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP10 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH1 0x1 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP DUP9 PUSH32 0xF0289B2C09D4E59035C29451CFBB75C07A50FDCC68DB2ECCEF5A84DB99285E44 DUP5 DUP13 CALLVALUE PUSH1 0x0 DUP1 DUP9 DUP16 PUSH1 0x40 MLOAD PUSH2 0x1669 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CHAINID DUP3 SUB PUSH2 0x16CD JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x16C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3513 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1705 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x845C5443 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x845C5443 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1751 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x358A JUMP JUMPDEST PUSH2 0x1791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP5 ADD DUP11 SWAP1 SSTORE DUP10 DUP6 MSTORE PUSH1 0x7 DUP5 ADD DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 MLOAD DUP11 DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 PUSH32 0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1838 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x12AD PUSH1 0x0 PUSH2 0x291B JUMP JUMPDEST PUSH2 0x184A PUSH2 0x286F JUMP JUMPDEST PUSH2 0x1855 DUP4 DUP4 DUP4 PUSH2 0x296B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x35AC JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x18DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x18E8 CALLER DUP7 DUP7 PUSH2 0x12AF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18F9 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x1905 CHAINID DUP3 PUSH1 0x0 PUSH2 0x296B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x193E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x35AC JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO PUSH2 0x19A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH4 0xFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x19FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657175657374206E6F74206578706972656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND ISZERO PUSH2 0x1A56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x41637469766520636C61696D732072756E6E696E67 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH2 0x1B1A SWAP4 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV DUP2 AND SWAP3 PUSH2 0x1AFF SWAP3 PUSH5 0x100000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0x35EF JUMP JUMPDEST PUSH2 0x1B09 SWAP2 SWAP1 PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 SWAP1 PUSH2 0x2A7D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1B28 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x12AD PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP7 AND DUP2 EQ DUP1 PUSH2 0x1BCD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x1C29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420616E20616374697665207061727469636970616E7420696E20746869 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7320636C61696D PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 PUSH2 0x1C45 DUP11 DUP11 PUSH2 0x2AEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO PUSH2 0x1C9C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0x1CED JUMPI PUSH1 0x1 DUP5 PUSH1 0x4 ADD PUSH1 0x1C DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x1CCE SWAP2 SWAP1 PUSH2 0x3722 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1CF7 DUP3 DUP3 PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x4 DUP9 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x1 DUP10 ADD SLOAD SWAP2 SWAP3 POP PUSH2 0x1D2C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP3 SWAP1 SWAP2 DIV AND PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP2 GT ISZERO PUSH2 0x1D84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP14 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP8 SWAP2 PUSH32 0xC9E74E0700D0C6488AF9C81D70FDD4158AEA77687137FF85499509C41A10612B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x1E96 JUMPI POP DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0x1EA5 JUMPI PUSH2 0x1EA5 DUP6 DUP13 PUSH2 0x2E4D JUMP JUMPDEST POP SWAP2 SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x1F0C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND SWAP1 PUSH3 0xF4240 SWAP1 PUSH2 0x1EFD SWAP1 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP8 PUSH2 0x364B JUMP JUMPDEST PUSH2 0x1F07 SWAP2 SWAP1 PUSH2 0x366A JUMP JUMPDEST PUSH2 0x2F7C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F1C PUSH2 0x286F JUMP JUMPDEST PUSH3 0xF423F DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1F75 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2050504D206F66203939393939392065786365656465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH3 0xF423F DUP2 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1FCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D756D2050504D206F66203939393939392065786365656465640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP10 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND DUP2 OR PUSH1 0x1 PUSH1 0x60 SHL PUSH4 0xFFFFFFFF DUP11 DUP2 AND SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 OR PUSH4 0xFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP3 DUP11 AND SWAP3 DUP4 MUL OR SWAP1 SWAP4 SSTORE DUP6 MLOAD SWAP7 DUP8 MSTORE SWAP4 DUP7 ADD DUP11 SWAP1 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP4 ADD MSTORE SWAP1 PUSH32 0xB226EDFFD2920F3FE08961DC98B19D4815BBE75AF416F5E82CA7BF7BE50350C4 SWAP1 PUSH1 0xA0 ADD PUSH2 0xC46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x5 DUP3 ADD SLOAD TIMESTAMP DUP2 GT PUSH2 0x212C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x10DB185A5B48195E1C1A5C9959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x219C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C7265616479207265736F6C7665640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 DUP8 ADD SLOAD DUP5 MSTORE PUSH1 0x7 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2208 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH32 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 DUP4 SWAP1 DIV DUP2 AND SWAP3 SWAP1 SWAP2 DIV AND DUP1 DUP3 GT ISZERO PUSH2 0x2362 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH1 0x0 SUB PUSH2 0x229C JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x2 ADD SLOAD DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2299 SWAP1 DUP6 PUSH2 0x35EF JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0x22F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x22FE DUP2 DUP4 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x2309 SWAP1 PUSH1 0x1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND CALLVALUE LT ISZERO PUSH2 0x235D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x243C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x23B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH32 0x0 PUSH2 0x23DE DUP4 DUP4 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x23E8 SWAP2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND CALLVALUE LT ISZERO PUSH2 0x243C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER SUB PUSH2 0x247F JUMPI PUSH2 0x2456 CALLVALUE DUP4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND MUL OR SWAP1 SSTORE SWAP2 POP PUSH2 0x2514 JUMP JUMPDEST PUSH1 0x3 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP9 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x24BF SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND PUSH2 0x3620 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP2 PUSH2 0x24EF SWAP2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP5 AND MUL OR SWAP1 SSTORE SWAP1 POP JUMPDEST DUP5 PUSH2 0x251F DUP6 TIMESTAMP PUSH2 0x35EF JUMP JUMPDEST GT ISZERO PUSH2 0x2539 JUMPI PUSH2 0x252F DUP5 TIMESTAMP PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x5 DUP9 ADD DUP2 SWAP1 SSTORE SWAP5 POP JUMPDEST PUSH1 0x3 DUP8 ADD SLOAD PUSH1 0x6 DUP9 ADD SLOAD PUSH1 0x40 MLOAD DUP9 SWAP3 PUSH32 0xF0289B2C09D4E59035C29451CFBB75C07A50FDCC68DB2ECCEF5A84DB99285E44 SWAP3 PUSH2 0x2589 SWAP3 DUP15 SWAP3 DUP10 SWAP3 DUP10 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP10 SWAP2 DUP15 SWAP2 PUSH2 0x36AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x25A4 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP1 PUSH2 0x2614 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x50726F746F636F6C20666565206973207A65726F PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP1 SWAP2 SSTORE DUP4 SWAP1 PUSH2 0x1B1A SWAP1 DUP5 DUP5 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x264D PUSH2 0x286F JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x26AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696E616C69747920706572696F64206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x7468616E203 PUSH1 0xD4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD DUP5 DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x273E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x36F7 JUMP JUMPDEST PUSH2 0xCFD CALLER DUP5 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x2750 PUSH2 0x286F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x1905 DUP2 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1B1A SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x2F92 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x28D1 PUSH2 0x3064 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x29CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x65203 PUSH1 0xEC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2A41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 PUSH2 0x1B1A SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x31D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x1855 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0x2838 JUMP JUMPDEST PUSH2 0x2AB5 PUSH2 0x27BE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x28FE CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x5 SWAP3 DUP4 SWAP1 MSTORE SWAP1 DUP4 KECCAK256 SWAP2 DUP3 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD SWAP5 SWAP6 DUP7 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 DUP2 AND SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP2 SWAP1 DIV DUP4 AND SWAP3 SWAP2 DIV AND PUSH2 0x2B50 DUP2 DUP4 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP7 PUSH1 0x4 ADD SLOAD LT PUSH2 0x2BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20616C72656164792077697468647261776E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2BFA JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x2BF3 JUMPI POP DUP9 PUSH1 0x6 ADD SLOAD DUP2 EQ JUMPDEST SWAP3 POP PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C1C JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x2CF2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND ISZERO PUSH2 0x2C86 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x2BF3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP2 ADD SLOAD SWAP1 DUP11 ADD SLOAD EQ SWAP3 POP PUSH2 0x2CF2 JUMP JUMPDEST DUP9 PUSH1 0x5 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x2CDA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT SWAP3 POP JUMPDEST PUSH1 0x0 DUP1 DUP5 ISZERO PUSH2 0x2D0E JUMPI POP DUP7 PUSH2 0x2D07 DUP7 DUP9 PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP7 AND ISZERO PUSH2 0x2DBB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD DUP16 SWAP2 PUSH2 0x2D50 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP1 PUSH2 0x3767 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT PUSH2 0x2DB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6177 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x2DCC JUMP JUMPDEST POP POP PUSH1 0x0 SLOAD DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x3 DUP12 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND SUB PUSH2 0x2E30 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND GT ISZERO PUSH2 0x2E19 JUMPI PUSH2 0x2E08 DUP7 DUP9 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x2E12 SWAP1 DUP4 PUSH2 0x3620 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E30 JUMP JUMPDEST PUSH2 0x2E23 DUP8 DUP8 PUSH2 0x3747 JUMP JUMPDEST PUSH2 0x2E2D SWAP1 DUP4 PUSH2 0x3747 JUMP JUMPDEST SWAP2 POP JUMPDEST SWAP12 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP3 PUSH32 0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP6 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x1 DUP1 DUP8 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP4 AND SWAP3 SWAP1 SWAP2 PUSH1 0x14 SWAP2 PUSH2 0x2F1E SWAP2 DUP6 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND PUSH2 0x3620 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x100 SWAP3 SWAP1 SWAP3 EXP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 DUP2 MUL NOT SWAP1 SWAP4 AND SWAP2 DUP4 AND MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH2 0x2F75 SWAP3 DUP6 SWAP3 PUSH2 0x1B09 SWAP3 PUSH5 0x100000000 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 PUSH2 0x35EF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0x2F8B JUMPI DUP2 PUSH2 0xCFD JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FE7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30AD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1855 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x3005 SWAP2 SWAP1 PUSH2 0x358A JUMP JUMPDEST PUSH2 0x1855 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1F0C DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x30D4 SWAP2 SWAP1 PUSH2 0x37C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3111 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3116 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3127 DUP8 DUP4 DUP4 DUP8 PUSH2 0x3132 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x31A1 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x319A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x319A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA4E JUMP JUMPDEST POP DUP2 PUSH2 0x1F0C JUMP JUMPDEST PUSH2 0x1F0C DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x31B6 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP2 SWAP1 PUSH2 0x37DE JUMP JUMPDEST DUP3 PUSH1 0x2 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3218 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3218 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x31E3 JUMP JUMPDEST POP PUSH2 0x3224 SWAP3 SWAP2 POP PUSH2 0x3228 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3224 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3229 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x327C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x329D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32DC DUP4 PUSH2 0x32A4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0x3313 PUSH1 0x20 DUP9 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP5 POP PUSH2 0x3321 PUSH1 0x40 DUP9 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x332F PUSH1 0x60 DUP9 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x335B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFD DUP3 PUSH2 0x32A4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x32BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x338D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFD DUP3 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x33AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x33B4 DUP5 PUSH2 0x32A4 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x33DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x33FD PUSH1 0x60 DUP7 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x341D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x342D PUSH1 0x20 DUP6 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x343B PUSH1 0x40 DUP6 ADD PUSH2 0x32A4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3460 DUP4 PUSH2 0x32A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x346E PUSH1 0x20 DUP5 ADD PUSH2 0x3364 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x32BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x34A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34AC DUP7 PUSH2 0x32A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x34C1 PUSH1 0x40 DUP8 ADD PUSH2 0x3364 JUMP JUMPDEST SWAP3 POP PUSH2 0x34CF PUSH1 0x60 DUP8 ADD PUSH2 0x3477 JUMP JUMPDEST SWAP2 POP PUSH2 0x34DD PUSH1 0x80 DUP8 ADD PUSH2 0x3477 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x34FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3505 DUP4 PUSH2 0x32A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x346E PUSH1 0x20 DUP5 ADD PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x359C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x1C995C5D595CDD1259081B9BDD081D985B1A59 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3602 JUMPI PUSH2 0x3602 PUSH2 0x35D9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3642 PUSH2 0x35D9 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3665 JUMPI PUSH2 0x3665 PUSH2 0x35D9 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3687 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x3642 JUMPI PUSH2 0x3642 PUSH2 0x35D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP5 DUP8 AND PUSH1 0x40 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 SWAP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x373F JUMPI PUSH2 0x373F PUSH2 0x35D9 JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0x373F JUMPI PUSH2 0x373F PUSH2 0x35D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x378D JUMPI PUSH2 0x378D PUSH2 0x35D9 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x37B1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3799 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B1A JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x37D4 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3796 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x37FD DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 PUSH5 0x71DCAF5E58 DUP8 0xC6 BLOCKHASH BASEFEE REVERT CALLER CALLDATASIZE 0xD7 0x4F SWAP15 DUP6 0xB8 0xA7 MOD PUSH25 0x84527687C09915FB92C464736F6C634300080D003300000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "LT",
      "path": "10"
    },
    "9": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x246"
    },
    "12": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "13": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "SHR",
      "path": "10"
    },
    "19": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "20": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x747293FB"
    },
    "25": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x139"
    },
    "29": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "30": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "31": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9D866985"
    },
    "36": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "37": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB6"
    },
    "40": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "41": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "42": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD137920B"
    },
    "47": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "48": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "52": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "53": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD137920B"
    },
    "58": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "59": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8BC"
    },
    "62": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "63": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "64": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDEE4DEA0"
    },
    "69": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "70": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DC"
    },
    "73": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "74": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "75": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE4860339"
    },
    "80": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "81": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8FC"
    },
    "84": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "85": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "86": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEA628898"
    },
    "91": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "92": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x996"
    },
    "95": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "96": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "97": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xEB321173"
    },
    "102": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "103": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9B1"
    },
    "106": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "107": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "108": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "113": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9E5"
    },
    "117": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "118": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "122": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "123": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "124": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9D866985"
    },
    "129": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "130": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x719"
    },
    "133": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "134": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "135": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9E375226"
    },
    "140": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "141": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x834"
    },
    "144": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "145": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "146": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xADB610A3"
    },
    "151": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x864"
    },
    "155": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "156": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "157": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xB4D1D27A"
    },
    "162": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x889"
    },
    "166": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "167": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "168": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xCF7B287F"
    },
    "173": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x89C"
    },
    "177": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "178": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "180": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "182": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "183": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "184": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8C8C3C9D"
    },
    "189": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "190": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFD"
    },
    "193": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "194": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "195": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8C8C3C9D"
    },
    "200": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "201": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x684"
    },
    "204": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "205": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "206": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "211": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "212": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6A4"
    },
    "215": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "216": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "217": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x909EF10C"
    },
    "222": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "223": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6C2"
    },
    "226": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "227": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "228": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x96171D05"
    },
    "233": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6E2"
    },
    "237": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "238": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "239": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x962DDF89"
    },
    "244": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6F9"
    },
    "248": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "249": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "251": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "252": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "253": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "254": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "255": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x747293FB"
    },
    "260": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "261": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C7"
    },
    "264": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "265": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "266": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x79650559"
    },
    "271": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "272": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5E7"
    },
    "275": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "276": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "277": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7DC2CD98"
    },
    "282": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "283": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x607"
    },
    "286": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "287": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "288": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x83D208C3"
    },
    "293": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "294": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x63B"
    },
    "297": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "298": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "299": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8456CB59"
    },
    "304": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "305": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x66F"
    },
    "308": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "309": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "311": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "312": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "313": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "314": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "315": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x31E08F7A"
    },
    "320": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "321": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C7"
    },
    "324": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "325": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "326": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B3A6EF2"
    },
    "331": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "332": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18B"
    },
    "335": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "336": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "337": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B3A6EF2"
    },
    "342": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "343": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x547"
    },
    "346": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "347": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "348": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5C975ABB"
    },
    "353": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "354": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x567"
    },
    "357": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "358": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "359": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "364": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "365": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x57F"
    },
    "368": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "369": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "370": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7203AE3B"
    },
    "375": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "376": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x594"
    },
    "379": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "380": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "381": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x743C151A"
    },
    "386": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "387": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5B4"
    },
    "390": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "391": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "393": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "394": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "395": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "396": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "397": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x31E08F7A"
    },
    "402": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "403": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3FE"
    },
    "406": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "407": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "408": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3993B6ED"
    },
    "413": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "414": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x41E"
    },
    "417": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "418": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "419": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3B046F09"
    },
    "424": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "425": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x43E"
    },
    "428": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "429": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "430": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3F4BA83A"
    },
    "435": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "436": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x507"
    },
    "439": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "440": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "441": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x599B08A2"
    },
    "446": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "447": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51C"
    },
    "450": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "451": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "453": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "454": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "455": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "456": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "457": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2C9AF6B7"
    },
    "462": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "GT",
      "path": "10"
    },
    "463": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20E"
    },
    "466": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "467": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "468": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2C9AF6B7"
    },
    "473": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "474": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x332"
    },
    "477": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "478": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "479": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2F4212B8"
    },
    "484": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "485": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x352"
    },
    "488": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "489": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "490": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2F92F009"
    },
    "495": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "496": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x372"
    },
    "499": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "500": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "501": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x30A08CBC"
    },
    "506": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "507": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39F"
    },
    "510": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "511": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "512": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x30B72906"
    },
    "517": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "518": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3DE"
    },
    "521": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "522": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "524": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "525": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "526": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "527": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "528": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3FC4C37"
    },
    "533": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "534": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24B"
    },
    "537": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "538": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "539": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE19A1C6"
    },
    "544": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "545": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26D"
    },
    "548": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "549": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "550": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE3A918C"
    },
    "555": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "556": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AA"
    },
    "559": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "560": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "561": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1489F8D2"
    },
    "566": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "567": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DA"
    },
    "570": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "571": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "572": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1D18ADC5"
    },
    "577": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "EQ",
      "path": "10"
    },
    "578": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FE"
    },
    "581": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "582": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "583": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "585": {
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "DUP1",
      "path": "10"
    },
    "586": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1141,
        32185
      ],
      "op": "REVERT",
      "path": "10"
    },
    "587": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "588": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "589": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "DUP1",
      "path": "10"
    },
    "590": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "591": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x257"
    },
    "594": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "595": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "597": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "DUP1",
      "path": "10"
    },
    "598": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "REVERT",
      "path": "10"
    },
    "599": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "604": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "607": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "608": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "610": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x323D"
    },
    "613": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMP",
      "path": "10"
    },
    "614": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "615": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA05"
    },
    "618": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMP",
      "path": "10"
    },
    "619": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "620": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "STOP",
      "path": "10"
    },
    "621": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "622": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "623": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "11"
    },
    "624": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "625": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x279"
    },
    "628": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "629": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "631": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "11"
    },
    "632": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "11"
    },
    "633": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "634": {
      "op": "POP"
    },
    "635": {
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28D"
    },
    "638": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x288"
    },
    "641": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "642": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "644": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3269"
    },
    "647": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "11"
    },
    "648": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "649": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC56"
    },
    "652": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "11"
    },
    "653": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "654": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "656": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "663": {
      "op": "SHL"
    },
    "664": {
      "op": "SUB"
    },
    "665": {
      "op": "SWAP1"
    },
    "666": {
      "op": "SWAP2"
    },
    "667": {
      "op": "AND"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "MSTORE"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "674": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "676": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "677": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "11"
    },
    "678": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "679": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SUB",
      "path": "11"
    },
    "680": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "681": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "RETURN",
      "path": "11"
    },
    "682": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "683": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "684": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "685": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "686": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B6"
    },
    "689": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "690": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "692": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "693": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "REVERT",
      "path": "10"
    },
    "694": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CA"
    },
    "699": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C5"
    },
    "702": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "703": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "705": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x328B"
    },
    "708": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMP",
      "path": "10"
    },
    "709": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "710": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC84"
    },
    "713": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMP",
      "path": "10"
    },
    "714": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "715": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "717": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "718": {
      "op": "SWAP1"
    },
    "719": {
      "op": "ISZERO"
    },
    "720": {
      "op": "ISZERO"
    },
    "721": {
      "op": "DUP2"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "729": {
      "op": "JUMP"
    },
    "730": {
      "offset": [
        6042,
        6098
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "731": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "732": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "DUP1",
      "path": "10"
    },
    "733": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "734": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E6"
    },
    "737": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "738": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "740": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "DUP1",
      "path": "10"
    },
    "741": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "REVERT",
      "path": "10"
    },
    "742": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "743": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "POP",
      "path": "10"
    },
    "744": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "747": {
      "offset": [
        6088,
        6098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x708"
    },
    "750": {
      "offset": [
        6042,
        6098
      ],
      "op": "DUP2",
      "path": "10"
    },
    "751": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "JUMP",
      "path": "10"
    },
    "752": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "753": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "755": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        6042,
        6098
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "756": {
      "op": "SWAP1"
    },
    "757": {
      "op": "DUP2"
    },
    "758": {
      "op": "MSTORE"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "761": {
      "op": "ADD"
    },
    "762": {
      "offset": [
        6042,
        6098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "765": {
      "op": "JUMP"
    },
    "766": {
      "offset": [
        5936,
        5985
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "767": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "768": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "DUP1",
      "path": "10"
    },
    "769": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "770": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x30A"
    },
    "773": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "774": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "776": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "DUP1",
      "path": "10"
    },
    "777": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "REVERT",
      "path": "10"
    },
    "778": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "779": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "POP",
      "path": "10"
    },
    "780": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "783": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "816": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "DUP2",
      "path": "10"
    },
    "817": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        5936,
        5985
      ],
      "op": "JUMP",
      "path": "10"
    },
    "818": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "819": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "820": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "DUP1",
      "path": "10"
    },
    "821": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "822": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33E"
    },
    "825": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "826": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "828": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "DUP1",
      "path": "10"
    },
    "829": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "REVERT",
      "path": "10"
    },
    "830": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "835": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34D"
    },
    "838": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "839": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "841": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32C0"
    },
    "844": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMP",
      "path": "10"
    },
    "845": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "846": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCDD"
    },
    "849": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMP",
      "path": "10"
    },
    "850": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "851": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "852": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "853": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "854": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35E"
    },
    "857": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "858": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "860": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "861": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "REVERT",
      "path": "10"
    },
    "862": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "867": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36D"
    },
    "870": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "871": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "873": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32EA"
    },
    "876": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "877": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "878": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD04"
    },
    "881": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "882": {
      "offset": [
        6707,
        6757
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "883": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "884": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "885": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "886": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x37E"
    },
    "889": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "890": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "892": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "DUP1",
      "path": "10"
    },
    "893": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "REVERT",
      "path": "10"
    },
    "894": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "895": {
      "op": "POP"
    },
    "896": {
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "899": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38D"
    },
    "902": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "903": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "905": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x328B"
    },
    "908": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        6707,
        6757
      ],
      "op": "JUMP",
      "path": "10"
    },
    "909": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "910": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "912": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "914": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "915": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "917": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "918": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "919": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "920": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "922": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "923": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "924": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "925": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "926": {
      "fn": "RequestManager.createRequest",
      "offset": [
        6707,
        6757
      ],
      "op": "JUMP",
      "path": "10"
    },
    "927": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "928": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "929": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "DUP1",
      "path": "10"
    },
    "930": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "931": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AB"
    },
    "934": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "935": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "937": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "DUP1",
      "path": "10"
    },
    "938": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "REVERT",
      "path": "10"
    },
    "939": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "940": {
      "op": "POP"
    },
    "941": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CA"
    },
    "944": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3BA"
    },
    "947": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "948": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "950": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3269"
    },
    "953": {
      "fn": "RequestManager.isInvalidFill",
      "jump": "i",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMP",
      "path": "10"
    },
    "954": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "955": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29586,
        29590
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "957": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 0
    },
    "958": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "DUP3",
      "path": "10"
    },
    "959": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "960": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29621
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "962": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "964": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "965": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "DUP2",
      "path": "10"
    },
    "966": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "967": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "969": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "DUP1",
      "path": "10"
    },
    "970": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "DUP5",
      "path": "10"
    },
    "971": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29632
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "972": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "973": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "DUP5",
      "path": "10"
    },
    "974": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "975": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29647
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "977": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29647
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "978": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29647
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "979": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29647
      ],
      "op": "ADD",
      "path": "10"
    },
    "980": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "981": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "982": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "983": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "984": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "985": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "987": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "AND",
      "path": "10"
    },
    "988": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29613,
        29655
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "989": {
      "fn": "RequestManager.isInvalidFill",
      "offset": [
        29483,
        29662
      ],
      "op": "JUMP",
      "path": "10"
    },
    "990": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "991": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "992": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "DUP1",
      "path": "10"
    },
    "993": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "994": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3EA"
    },
    "997": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "998": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1000": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1001": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1002": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "1007": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F9"
    },
    "1010": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1011": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1013": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32C0"
    },
    "1016": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1017": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1018": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x119E"
    },
    "1021": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1022": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1023": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1024": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1025": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1026": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x40A"
    },
    "1029": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1030": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1032": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1033": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1034": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1035": {
      "op": "POP"
    },
    "1036": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26B"
    },
    "1039": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x419"
    },
    "1042": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1043": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1045": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3349"
    },
    "1048": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1049": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1050": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x11E0"
    },
    "1053": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "i",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1054": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1055": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "1056": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1057": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "1058": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x42A"
    },
    "1061": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "1062": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "1064": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "DUP1",
      "path": "9"
    },
    "1065": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "REVERT",
      "path": "9"
    },
    "1066": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1067": {
      "op": "POP"
    },
    "1068": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x26B"
    },
    "1071": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x439"
    },
    "1074": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "1075": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "1077": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3349"
    },
    "1080": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1081": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "1082": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1244"
    },
    "1085": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMP",
      "path": "9"
    },
    "1086": {
      "offset": [
        6886,
        6924
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1087": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1088": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1089": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1090": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x44A"
    },
    "1093": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1094": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1096": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1097": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1098": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4B6"
    },
    "1103": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x459"
    },
    "1106": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1107": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1109": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337B"
    },
    "1112": {
      "fn": "LpWhitelist.removeAllowedLp",
      "jump": "i",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1113": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1114": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1116": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1118": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1119": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1120": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1121": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1123": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1124": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1125": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1126": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1128": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1129": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1130": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1131": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1132": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1133": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1135": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1136": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ADD",
      "path": "10"
    },
    "1137": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1138": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1140": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1141": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ADD",
      "path": "10"
    },
    "1142": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1143": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1145": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1146": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ADD",
      "path": "10"
    },
    "1147": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1148": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1150": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1151": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ADD",
      "path": "10"
    },
    "1152": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1153": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1154": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1155": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1156": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "ADD",
      "path": "10"
    },
    "1157": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1158": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1159": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "op": "SUB"
    },
    "1168": {
      "offset": [
        6886,
        6924
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1169": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1170": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "AND",
      "path": "10"
    },
    "1171": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "SUB"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1186": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP7",
      "path": "10"
    },
    "1187": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1188": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DIV",
      "path": "10"
    },
    "1189": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1190": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "AND",
      "path": "10"
    },
    "1191": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1192": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1193": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1194": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "AND",
      "path": "10"
    },
    "1195": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1196": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1197": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1198": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DIV",
      "path": "10"
    },
    "1199": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1200": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1201": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "AND",
      "path": "10"
    },
    "1202": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1203": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1204": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP9",
      "path": "10"
    },
    "1205": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1206": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1207": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1209": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1210": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        6886,
        6924
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1211": {
      "op": "SWAP9"
    },
    "1212": {
      "op": "DUP10"
    },
    "1213": {
      "op": "MSTORE"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "op": "SWAP8"
    },
    "1223": {
      "op": "DUP9"
    },
    "1224": {
      "op": "AND"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1227": {
      "op": "DUP11"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "op": "MSTORE"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "SWAP7"
    },
    "1239": {
      "op": "DUP8"
    },
    "1240": {
      "op": "AND"
    },
    "1241": {
      "op": "SWAP1"
    },
    "1242": {
      "op": "DUP10"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "MSTORE"
    },
    "1245": {
      "op": "SWAP6"
    },
    "1246": {
      "op": "SWAP1"
    },
    "1247": {
      "op": "SWAP4"
    },
    "1248": {
      "op": "AND"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1251": {
      "op": "DUP8"
    },
    "1252": {
      "op": "ADD"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "SWAP3"
    },
    "1255": {
      "op": "AND"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1258": {
      "op": "DUP6"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1263": {
      "op": "DUP5"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "SWAP2"
    },
    "1266": {
      "op": "SWAP1"
    },
    "1267": {
      "op": "SWAP2"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1271": {
      "op": "DUP4"
    },
    "1272": {
      "op": "ADD"
    },
    "1273": {
      "op": "MSTORE"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1276": {
      "op": "DUP3"
    },
    "1277": {
      "op": "ADD"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "offset": [
        6886,
        6924
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "1286": {
      "op": "JUMP"
    },
    "1287": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1288": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1289": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1290": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1291": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x513"
    },
    "1294": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1295": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1297": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1298": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1299": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1300": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "POP",
      "path": "10"
    },
    "1301": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "1304": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x129D"
    },
    "1307": {
      "fn": "RequestManager.unpause",
      "jump": "i",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1308": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1309": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52F"
    },
    "1312": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52A"
    },
    "1315": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1316": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1318": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3396"
    },
    "1321": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1322": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1323": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12AF"
    },
    "1326": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1327": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1328": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1330": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "op": "SWAP1"
    },
    "1340": {
      "op": "SWAP2"
    },
    "1341": {
      "op": "AND"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1346": {
      "op": "ADD"
    },
    "1347": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "1350": {
      "op": "JUMP"
    },
    "1351": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1352": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1353": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1354": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1355": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x553"
    },
    "1358": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1359": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1361": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1362": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1363": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1364": {
      "op": "POP"
    },
    "1365": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "1368": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x562"
    },
    "1371": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1372": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1374": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33C9"
    },
    "1377": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1378": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1379": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x167F"
    },
    "1382": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1383": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1384": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1385": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1386": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1387": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x573"
    },
    "1390": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1391": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1393": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1394": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1395": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1396": {
      "op": "POP"
    },
    "1397": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x3"
    },
    "1399": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1400": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1402": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "1403": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CA"
    },
    "1406": {
      "fn": "Pausable.paused",
      "offset": [
        1615,
        1699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1407": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58B"
    },
    "1414": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1417": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1418": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1419": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "1421": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "1424": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1830"
    },
    "1427": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1428": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1429": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1430": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1431": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1432": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A0"
    },
    "1435": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1436": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1438": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1439": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1440": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26B"
    },
    "1445": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AF"
    },
    "1448": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1449": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1451": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3408"
    },
    "1454": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1455": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1456": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1842"
    },
    "1459": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1460": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1461": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52F"
    },
    "1464": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5C2"
    },
    "1467": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1468": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1470": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3269"
    },
    "1473": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1474": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1475": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x185A"
    },
    "1478": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1479": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1480": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1481": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1482": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1483": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5D3"
    },
    "1486": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1487": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1489": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1490": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1491": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1492": {
      "op": "POP"
    },
    "1493": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26B"
    },
    "1496": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E2"
    },
    "1499": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "1500": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1502": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3349"
    },
    "1505": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1506": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1507": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18F1"
    },
    "1510": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1511": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1512": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1513": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1514": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1515": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F3"
    },
    "1518": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1519": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1521": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1522": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1523": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1524": {
      "op": "POP"
    },
    "1525": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "1528": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x602"
    },
    "1531": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1532": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1534": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x328B"
    },
    "1537": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1538": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1539": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1908"
    },
    "1542": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1543": {
      "offset": [
        5290,
        5326
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1544": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1545": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1546": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1547": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x613"
    },
    "1550": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1551": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1553": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1554": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1555": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1556": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "POP",
      "path": "10"
    },
    "1557": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "1560": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "1593": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1594": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5290,
        5326
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1595": {
      "offset": [
        5188,
        5234
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1596": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1597": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1598": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1599": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x647"
    },
    "1602": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1603": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1605": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1606": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1607": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1608": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "POP",
      "path": "10"
    },
    "1609": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "1612": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "1645": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1646": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        5188,
        5234
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1647": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1648": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1649": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1650": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1651": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x67B"
    },
    "1654": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1655": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1657": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1658": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1659": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1660": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "POP",
      "path": "10"
    },
    "1661": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "1664": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B20"
    },
    "1667": {
      "fn": "RequestManager.pause",
      "jump": "i",
      "offset": [
        31786,
        31847
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1668": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1669": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1670": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1671": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1672": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x690"
    },
    "1675": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1676": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1678": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1679": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1680": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D"
    },
    "1685": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x69F"
    },
    "1688": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1689": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1691": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3444"
    },
    "1694": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1695": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1696": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B30"
    },
    "1699": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1700": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1701": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1702": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1703": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1704": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1708": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1710": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1711": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1712": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1716": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "1726": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "1729": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1730": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1731": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1732": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1733": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1734": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6CE"
    },
    "1737": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1738": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1740": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1741": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1742": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1743": {
      "op": "POP"
    },
    "1744": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "1747": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6DD"
    },
    "1750": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1751": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1753": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32C0"
    },
    "1756": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1757": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1758": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EB5"
    },
    "1761": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1762": {
      "offset": [
        6155,
        6209
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1763": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1764": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1765": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1766": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6EE"
    },
    "1769": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1770": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1772": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1773": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1774": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1775": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "POP",
      "path": "10"
    },
    "1776": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F0"
    },
    "1779": {
      "offset": [
        6201,
        6209
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2A300"
    },
    "1783": {
      "offset": [
        6155,
        6209
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1784": {
      "fn": "RequestManager.lpFee",
      "offset": [
        6155,
        6209
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1785": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1786": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1787": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1788": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1789": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x705"
    },
    "1792": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1793": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1795": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1796": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1797": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1798": {
      "op": "POP"
    },
    "1799": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "1802": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x714"
    },
    "1805": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1806": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1808": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x348B"
    },
    "1811": {
      "fn": "RequestManager.updateToken",
      "jump": "i",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1812": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1813": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F14"
    },
    "1816": {
      "fn": "RequestManager.updateToken",
      "jump": "i",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1817": {
      "offset": [
        6802,
        6845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1818": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1819": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1820": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1821": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x725"
    },
    "1824": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1825": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1827": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1828": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1829": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7BE"
    },
    "1834": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x734"
    },
    "1837": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1838": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1840": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x328B"
    },
    "1843": {
      "fn": "RequestManager.updateToken",
      "jump": "i",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1844": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1845": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "1847": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1849": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1850": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1851": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1852": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1854": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1855": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1856": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1857": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1859": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1860": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1861": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1862": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1863": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1864": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1866": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1867": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1868": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1869": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1871": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1872": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1873": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1874": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "1876": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1877": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1878": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1879": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1881": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1882": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1883": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1884": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1885": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1886": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1887": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1888": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "1890": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1891": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1892": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "ADD",
      "path": "10"
    },
    "1893": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1903": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1904": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1905": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "1906": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1907": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1908": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1909": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1910": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1911": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1912": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1913": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1914": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "1919": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1920": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1921": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1922": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1929": {
      "op": "SHL"
    },
    "1930": {
      "op": "SUB"
    },
    "1931": {
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0x100000000"
    },
    "1937": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1938": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DIV",
      "path": "10"
    },
    "1939": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1940": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1941": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1946": {
      "op": "SHL"
    },
    "1947": {
      "offset": [
        6802,
        6845
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1948": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DIV",
      "path": "10"
    },
    "1949": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1950": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1951": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1958": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "1959": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DIV",
      "path": "10"
    },
    "1960": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1961": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1962": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1963": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "1964": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1965": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1966": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1967": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1972": {
      "op": "SHL"
    },
    "1973": {
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1974": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1975": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DIV",
      "path": "10"
    },
    "1976": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1977": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1978": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "AND",
      "path": "10"
    },
    "1979": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1980": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP12",
      "path": "10"
    },
    "1981": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1982": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1983": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1985": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1986": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6802,
        6845
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1993": {
      "op": "SHL"
    },
    "1994": {
      "op": "SUB"
    },
    "1995": {
      "op": "SWAP13"
    },
    "1996": {
      "op": "DUP14"
    },
    "1997": {
      "op": "AND"
    },
    "1998": {
      "op": "DUP2"
    },
    "1999": {
      "op": "MSTORE"
    },
    "2000": {
      "op": "SWAP11"
    },
    "2001": {
      "op": "DUP13"
    },
    "2002": {
      "op": "AND"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2005": {
      "op": "DUP13"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "DUP11"
    },
    "2009": {
      "op": "ADD"
    },
    "2010": {
      "op": "SWAP9"
    },
    "2011": {
      "op": "SWAP1"
    },
    "2012": {
      "op": "SWAP9"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2016": {
      "op": "DUP10"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "op": "SWAP7"
    },
    "2019": {
      "op": "SWAP1"
    },
    "2020": {
      "op": "SWAP7"
    },
    "2021": {
      "op": "MSTORE"
    },
    "2022": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2027": {
      "op": "SWAP5"
    },
    "2028": {
      "op": "DUP6"
    },
    "2029": {
      "op": "AND"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2032": {
      "op": "DUP10"
    },
    "2033": {
      "op": "ADD"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "op": "SWAP4"
    },
    "2044": {
      "op": "DUP5"
    },
    "2045": {
      "op": "AND"
    },
    "2046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2048": {
      "op": "DUP10"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "MSTORE"
    },
    "2051": {
      "op": "SWAP2"
    },
    "2052": {
      "op": "DUP4"
    },
    "2053": {
      "op": "AND"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2056": {
      "op": "DUP9"
    },
    "2057": {
      "op": "ADD"
    },
    "2058": {
      "op": "MSTORE"
    },
    "2059": {
      "op": "SWAP1"
    },
    "2060": {
      "op": "SWAP3"
    },
    "2061": {
      "op": "AND"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2064": {
      "op": "DUP7"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "MSTORE"
    },
    "2067": {
      "op": "AND"
    },
    "2068": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "2071": {
      "op": "DUP5"
    },
    "2072": {
      "op": "ADD"
    },
    "2073": {
      "op": "MSTORE"
    },
    "2074": {
      "op": "SWAP1"
    },
    "2075": {
      "op": "SWAP3"
    },
    "2076": {
      "op": "AND"
    },
    "2077": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "2086": {
      "op": "DUP2"
    },
    "2087": {
      "op": "ADD"
    },
    "2088": {
      "op": "SWAP2"
    },
    "2089": {
      "op": "SWAP1"
    },
    "2090": {
      "op": "SWAP2"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "op": "PUSH2",
      "value": "0x160"
    },
    "2095": {
      "op": "ADD"
    },
    "2096": {
      "offset": [
        6802,
        6845
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "2099": {
      "op": "JUMP"
    },
    "2100": {
      "offset": [
        829,
        871
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2101": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "CALLVALUE",
      "path": "9"
    },
    "2102": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2103": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "2104": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x840"
    },
    "2107": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "2108": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2110": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "DUP1",
      "path": "9"
    },
    "2111": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "REVERT",
      "path": "9"
    },
    "2112": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2113": {
      "op": "POP"
    },
    "2114": {
      "offset": [
        829,
        871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x2CA"
    },
    "2117": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x84F"
    },
    "2120": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "CALLDATASIZE",
      "path": "9"
    },
    "2121": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "2123": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x3349"
    },
    "2126": {
      "fn": "RequestManager.updateToken",
      "jump": "i",
      "offset": [
        829,
        871
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2127": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "2128": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "2130": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "2132": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2133": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "2135": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2136": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2137": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "2138": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "2140": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2141": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "2142": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "2143": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "2145": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "AND",
      "path": "9"
    },
    "2146": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "DUP2",
      "path": "9"
    },
    "2147": {
      "fn": "RequestManager.updateToken",
      "offset": [
        829,
        871
      ],
      "op": "JUMP",
      "path": "9"
    },
    "2148": {
      "offset": [
        6575,
        6601
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2149": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2150": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2151": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2152": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x870"
    },
    "2155": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2156": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2158": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2159": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2160": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "offset": [
        6575,
        6601
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "2164": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2165": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52F"
    },
    "2168": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2169": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "2172": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2173": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "DIV",
      "path": "10"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2180": {
      "op": "SHL"
    },
    "2181": {
      "op": "SUB"
    },
    "2182": {
      "offset": [
        6575,
        6601
      ],
      "op": "AND",
      "path": "10"
    },
    "2183": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2184": {
      "fn": "RequestManager.updateToken",
      "offset": [
        6575,
        6601
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2185": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2186": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "2189": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x897"
    },
    "2192": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2193": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2195": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337B"
    },
    "2198": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2199": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2200": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x208B"
    },
    "2203": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2204": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2205": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2206": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2207": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2208": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8A8"
    },
    "2211": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2212": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2214": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2215": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2216": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2217": {
      "op": "POP"
    },
    "2218": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "2221": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8B7"
    },
    "2224": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2225": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2227": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34E9"
    },
    "2230": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2231": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2232": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x259C"
    },
    "2235": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2236": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2237": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2238": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2239": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2240": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C8"
    },
    "2243": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2244": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2246": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2247": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2248": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2249": {
      "op": "POP"
    },
    "2250": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26B"
    },
    "2253": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D7"
    },
    "2256": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2257": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2259": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3269"
    },
    "2262": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2263": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2264": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2645"
    },
    "2267": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "i",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2268": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2269": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2270": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2271": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2272": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8E8"
    },
    "2275": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2276": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2278": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2279": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2280": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2281": {
      "op": "POP"
    },
    "2282": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28D"
    },
    "2285": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8F7"
    },
    "2288": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2289": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2291": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x337B"
    },
    "2294": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2295": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2296": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26FB"
    },
    "2299": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2300": {
      "offset": [
        6974,
        7013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2301": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2302": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2303": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2304": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x908"
    },
    "2307": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2310": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2311": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2312": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x95E"
    },
    "2317": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x917"
    },
    "2320": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2323": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3349"
    },
    "2326": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2327": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2328": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2330": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2332": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2333": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2335": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2336": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2337": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2338": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2340": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2341": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2342": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2343": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2344": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2346": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2348": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "ADD",
      "path": "10"
    },
    "2349": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "SUB"
    },
    "2358": {
      "offset": [
        6974,
        7013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2360": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "AND",
      "path": "10"
    },
    "2361": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2362": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "offset": [
        6974,
        7013
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2373": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DIV",
      "path": "10"
    },
    "2374": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2375": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "AND",
      "path": "10"
    },
    "2376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "offset": [
        6974,
        7013
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DIV",
      "path": "10"
    },
    "2384": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2385": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2386": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "AND",
      "path": "10"
    },
    "2387": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2392": {
      "op": "SHL"
    },
    "2393": {
      "offset": [
        6974,
        7013
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2394": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DIV",
      "path": "10"
    },
    "2395": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "AND",
      "path": "10"
    },
    "2396": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2397": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2398": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2399": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2401": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2402": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6974,
        7013
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2403": {
      "op": "SWAP6"
    },
    "2404": {
      "op": "DUP7"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2412": {
      "op": "SHL"
    },
    "2413": {
      "op": "SUB"
    },
    "2414": {
      "op": "SWAP5"
    },
    "2415": {
      "op": "DUP6"
    },
    "2416": {
      "op": "AND"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2419": {
      "op": "DUP8"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "op": "MSTORE"
    },
    "2422": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "2427": {
      "op": "SWAP4"
    },
    "2428": {
      "op": "DUP5"
    },
    "2429": {
      "op": "AND"
    },
    "2430": {
      "op": "SWAP1"
    },
    "2431": {
      "op": "DUP7"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "op": "MSTORE"
    },
    "2434": {
      "op": "SWAP2"
    },
    "2435": {
      "op": "AND"
    },
    "2436": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2438": {
      "op": "DUP5"
    },
    "2439": {
      "op": "ADD"
    },
    "2440": {
      "op": "MSTORE"
    },
    "2441": {
      "op": "AND"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2444": {
      "op": "DUP3"
    },
    "2445": {
      "op": "ADD"
    },
    "2446": {
      "op": "MSTORE"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2449": {
      "op": "ADD"
    },
    "2450": {
      "offset": [
        6974,
        7013
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A1"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "offset": [
        6314,
        6382
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2455": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2456": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2457": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2458": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9A2"
    },
    "2461": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2462": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2464": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2465": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2466": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2467": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "POP",
      "path": "10"
    },
    "2468": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52F"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2477": {
      "op": "SHL"
    },
    "2478": {
      "op": "SUB"
    },
    "2479": {
      "offset": [
        6314,
        6382
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2480": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6314,
        6382
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2481": {
      "offset": [
        5028,
        5062
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2482": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "2483": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2484": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2485": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9BD"
    },
    "2488": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2489": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2491": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2492": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2493": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2494": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "POP",
      "path": "10"
    },
    "2495": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x52F"
    },
    "2498": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "2531": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2532": {
      "fn": "RequestManager.withdraw",
      "offset": [
        5028,
        5062
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "2540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "op": "POP"
    },
    "2547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "2550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA00"
    },
    "2553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2554": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3349"
    },
    "2559": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2748"
    },
    "2564": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2565": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2566": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2568": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2569": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2570": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2571": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2573": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2575": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2576": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2578": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2579": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2580": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2581": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2582": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2589": {
      "op": "SHL"
    },
    "2590": {
      "op": "SUB"
    },
    "2591": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "11"
    },
    "2592": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "11"
    },
    "2593": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2594": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "11"
    },
    "2595": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA5C"
    },
    "2598": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2599": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2609": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "11"
    },
    "2610": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "11"
    },
    "2611": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA57"
    },
    "2614": {
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2615": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2617": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2624": {
      "op": "SHL"
    },
    "2625": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2626": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2627": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2629": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "11"
    },
    "2630": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "2633": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2634": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3513"
    },
    "2637": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2638": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2639": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2641": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2642": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2643": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2644": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SUB",
      "path": "11"
    },
    "2645": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2646": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "2647": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2648": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB22"
    },
    "2651": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2652": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2653": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2655": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2656": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2657": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2658": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2660": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2662": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2663": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2665": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2666": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2667": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2669": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "11"
    },
    "2670": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2677": {
      "op": "SHL"
    },
    "2678": {
      "op": "SUB"
    },
    "2679": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "11"
    },
    "2680": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2681": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA94"
    },
    "2684": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2685": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2687": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2694": {
      "op": "SHL"
    },
    "2695": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2696": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2697": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2699": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "11"
    },
    "2700": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "2703": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2704": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3548"
    },
    "2707": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2708": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2709": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2711": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2712": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2721": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2728": {
      "op": "SHL"
    },
    "2729": {
      "op": "SUB"
    },
    "2730": {
      "op": "DUP4"
    },
    "2731": {
      "op": "DUP2"
    },
    "2732": {
      "op": "AND"
    },
    "2733": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2735": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2736": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "2737": {
      "op": "MSTORE"
    },
    "2738": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2741": {
      "op": "DUP4"
    },
    "2742": {
      "op": "ADD"
    },
    "2743": {
      "op": "MSTORE"
    },
    "2744": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2745": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "11"
    },
    "2746": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2747": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x845C5443"
    },
    "2752": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2755": {
      "op": "ADD"
    },
    "2756": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2758": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2760": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2761": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2762": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2763": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "11"
    },
    "2764": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2765": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2766": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "11"
    },
    "2767": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "2768": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2769": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2770": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2771": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAE0"
    },
    "2774": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2775": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2776": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2778": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2779": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2780": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2781": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2783": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2784": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2785": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "2786": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "2787": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "2788": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "2789": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2791": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2792": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2793": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2795": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "11"
    },
    "2796": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2798": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2799": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "2800": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "11"
    },
    "2801": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2802": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "2803": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2804": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2806": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2807": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "2808": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2809": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "2810": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2811": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB04"
    },
    "2814": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2815": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2816": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x358A"
    },
    "2819": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2820": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2821": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB20"
    },
    "2824": {
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2825": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2827": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2834": {
      "op": "SHL"
    },
    "2835": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2836": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2837": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2839": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "11"
    },
    "2840": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "2843": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2844": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3513"
    },
    "2847": {
      "fn": "RequestManager.invalidateFill",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2848": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2849": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "11"
    },
    "2850": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2851": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31013,
        31036
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2853": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2854": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2855": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2856": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31047
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "2858": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2860": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2861": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2862": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2863": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2865": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2866": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2867": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31039,
        31058
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2868": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 3
    },
    "2869": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2870": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "ADD",
      "path": "10"
    },
    "2871": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2876": {
      "op": "SHL"
    },
    "2877": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2878": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "DIV",
      "path": "10"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2885": {
      "op": "SHL"
    },
    "2886": {
      "op": "SUB"
    },
    "2887": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31103
      ],
      "op": "AND",
      "path": "10"
    },
    "2888": {
      "branch": 147,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31089,
        31117
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2889": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB94"
    },
    "2892": {
      "branch": 147,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2893": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2895": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2902": {
      "op": "SHL"
    },
    "2903": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2904": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2907": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2909": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2910": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "ADD",
      "path": "10"
    },
    "2911": {
      "op": "DUP2"
    },
    "2912": {
      "op": "SWAP1"
    },
    "2913": {
      "op": "MSTORE"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2916": {
      "op": "DUP3"
    },
    "2917": {
      "op": "ADD"
    },
    "2918": {
      "op": "MSTORE"
    },
    "2919": {
      "op": "PUSH32",
      "value": "0x43616E6E6F7420696E76616C6964617465207265736F6C7665642066696C6C73"
    },
    "2952": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2954": {
      "op": "DUP3"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "op": "MSTORE"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "2963": {
      "op": "JUMP"
    },
    "2964": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31068,
        31175
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2965": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 4,
      "value": "0x0"
    },
    "2967": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2968": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2969": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2970": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31228
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "2972": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31228
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2973": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31228
      ],
      "op": "ADD",
      "path": "10"
    },
    "2974": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2976": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2977": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2979": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2980": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "2981": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2982": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "2984": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31236
      ],
      "op": "AND",
      "path": "10"
    },
    "2985": {
      "branch": 148,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31206,
        31245
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2986": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBF0"
    },
    "2989": {
      "branch": 148,
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2990": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2992": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2999": {
      "op": "SHL"
    },
    "3000": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3001": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3004": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3006": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3007": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "ADD",
      "path": "10"
    },
    "3008": {
      "op": "MSTORE"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "ADD"
    },
    "3015": {
      "op": "MSTORE"
    },
    "3016": {
      "op": "PUSH24",
      "value": "0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3046": {
      "op": "DUP3"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "MSTORE"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3051": {
      "op": "ADD"
    },
    "3052": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3055": {
      "op": "JUMP"
    },
    "3056": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31185,
        31295
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3057": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 5,
      "value": "0x0"
    },
    "3059": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3060": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3061": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3062": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31328
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3064": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31328
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3065": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31328
      ],
      "op": "ADD",
      "path": "10"
    },
    "3066": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3068": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3069": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3071": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3072": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3073": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3074": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31336
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3075": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3076": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3079": {
      "op": "NOT"
    },
    "3080": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "AND",
      "path": "10"
    },
    "3081": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31339,
        31343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3083": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "OR",
      "path": "10"
    },
    "3084": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3085": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31306,
        31343
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "3086": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "MLOAD",
      "path": "10",
      "statement": 6
    },
    "3087": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5571B83C623961FB42D39CE6D6D2092153ACE66C008E2DC2472EC6D2E8FAD045"
    },
    "3120": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3121": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC46"
    },
    "3124": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3125": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31383,
        31392
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3126": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31383,
        31392
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3127": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31329,
        31335
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3128": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31329,
        31335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3129": {
      "op": "SWAP2"
    },
    "3130": {
      "op": "DUP3"
    },
    "3131": {
      "op": "MSTORE"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3134": {
      "op": "DUP3"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "op": "MSTORE"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3139": {
      "op": "ADD"
    },
    "3140": {
      "op": "SWAP1"
    },
    "3141": {
      "op": "JUMP"
    },
    "3142": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3143": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3145": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3146": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3147": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3148": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "SUB",
      "path": "10"
    },
    "3149": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3150": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31359,
        31401
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3151": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        31003,
        31408
      ],
      "op": "POP",
      "path": "10"
    },
    "3152": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "11"
    },
    "3153": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "POP",
      "path": "10"
    },
    "3154": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "POP",
      "path": "10"
    },
    "3155": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "POP",
      "path": "10"
    },
    "3156": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        30848,
        31408
      ],
      "op": "POP",
      "path": "10"
    },
    "3157": {
      "fn": "RequestManager.invalidateFill",
      "jump": "o",
      "offset": [
        30848,
        31408
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3158": {
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3159": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3161": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3163": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3164": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3165": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3167": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3168": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3170": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3172": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3173": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3174": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3176": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3177": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "LT",
      "path": "11"
    },
    "3178": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC72"
    },
    "3181": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3182": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3184": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3185": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3186": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3187": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "ADD",
      "path": "11"
    },
    "3188": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "offset": [
        576,
        621
      ],
      "op": "AND",
      "path": "11"
    },
    "3198": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3199": {
      "op": "POP"
    },
    "3200": {
      "offset": [
        576,
        621
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3201": {
      "fn": "RequestManager.invalidateFill",
      "offset": [
        576,
        621
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3202": {
      "op": "POP"
    },
    "3203": {
      "jump": "o",
      "offset": [
        576,
        621
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3204": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3205": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26769,
        26773
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3207": {
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3208": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3209": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3210": {
      "offset": [
        8175,
        8183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3212": {
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3214": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3215": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3217": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3218": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8175,
        8194
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3219": {
      "offset": [
        8175,
        8201
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3220": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26741,
        26750
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3221": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26741,
        26750
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3228": {
      "op": "SHL"
    },
    "3229": {
      "op": "SUB"
    },
    "3230": {
      "offset": [
        8175,
        8201
      ],
      "op": "AND",
      "path": "10"
    },
    "3231": {
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCBA"
    },
    "3234": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3235": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3237": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3238": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3244": {
      "op": "SHL"
    },
    "3245": {
      "offset": [
        8154,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3246": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3247": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3249": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "ADD",
      "path": "10"
    },
    "3250": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3253": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3254": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35AC"
    },
    "3257": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "i",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3258": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 7,
      "value": "0x0"
    },
    "3263": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3264": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3265": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3266": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26804
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "3268": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3270": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3271": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3272": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3273": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3275": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3276": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3277": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26815
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3278": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26831
      ],
      "op": "ADD",
      "path": "10"
    },
    "3279": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26831
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3286": {
      "op": "SHL"
    },
    "3287": {
      "op": "SUB"
    },
    "3288": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26831
      ],
      "op": "AND",
      "path": "10"
    },
    "3289": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26836
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3290": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26836
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3291": {
      "fn": "RequestManager.isWithdrawn",
      "offset": [
        26796,
        26836
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3292": {
      "fn": "RequestManager.isWithdrawn",
      "jump": "o",
      "offset": [
        26650,
        26843
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3293": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3294": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7926,
        7933
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3296": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7986,
        8019
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 8,
      "value": "0xCE9"
    },
    "3299": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7998,
        8010
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3300": {
      "fn": "RequestManager.totalFee",
      "offset": [
        8012,
        8018
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3301": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7986,
        7997
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x119E"
    },
    "3304": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7986,
        8019
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3305": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7986,
        8019
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3306": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        7983
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCF3"
    },
    "3309": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7962,
        7974
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3310": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7976,
        7982
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3311": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        7961
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EB5"
    },
    "3314": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7956,
        7983
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3315": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        7983
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3316": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        8019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCFD"
    },
    "3319": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        8019
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3320": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        8019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3321": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        8019
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "3324": {
      "fn": "RequestManager.totalFee",
      "jump": "i",
      "offset": [
        7956,
        8019
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3325": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7956,
        8019
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3326": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7949,
        8019
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "3327": {
      "fn": "RequestManager.totalFee",
      "offset": [
        7825,
        8026
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "fn": "RequestManager.totalFee",
      "jump": "o",
      "offset": [
        7825,
        8026
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3332": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3333": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10231,
        10238
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3335": {
      "offset": [
        1239,
        1258
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD0E"
    },
    "3338": {
      "offset": [
        1239,
        1256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27BE"
    },
    "3341": {
      "jump": "i",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3342": {
      "fn": "RequestManager.createRequest",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3343": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x0"
    },
    "3345": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3346": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3347": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3348": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10286
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3350": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3352": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3353": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3355": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3356": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3357": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10301
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3358": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10306
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3359": {
      "branch": 149,
      "fn": "RequestManager.createRequest",
      "offset": [
        10271,
        10306
      ],
      "op": "SUB",
      "path": "10"
    },
    "3360": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD6B"
    },
    "3363": {
      "branch": 149,
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3364": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3366": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3367": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3375": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3378": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3380": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3381": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "ADD",
      "path": "10"
    },
    "3382": {
      "op": "MSTORE"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3385": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3387": {
      "op": "DUP3"
    },
    "3388": {
      "op": "ADD"
    },
    "3389": {
      "op": "MSTORE"
    },
    "3390": {
      "op": "PUSH32",
      "value": "0x54617267657420726F6C6C7570206E6F7420737570706F727465640000000000"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3425": {
      "op": "DUP3"
    },
    "3426": {
      "op": "ADD"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3430": {
      "op": "ADD"
    },
    "3431": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3434": {
      "op": "JUMP"
    },
    "3435": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10250,
        10359
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3436": {
      "offset": [
        6088,
        6098
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x708"
    },
    "3439": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10390,
        10404
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 10
    },
    "3440": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10390,
        10427
      ],
      "op": "LT",
      "path": "10"
    },
    "3441": {
      "branch": 150,
      "fn": "RequestManager.createRequest",
      "offset": [
        10390,
        10427
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3442": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xDBD"
    },
    "3445": {
      "branch": 150,
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3446": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3448": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3457": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3460": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3462": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3463": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "ADD",
      "path": "10"
    },
    "3464": {
      "op": "MSTORE"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3467": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3469": {
      "op": "DUP3"
    },
    "3470": {
      "op": "ADD"
    },
    "3471": {
      "op": "MSTORE"
    },
    "3472": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F2073686F727400000000000000"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3507": {
      "op": "DUP3"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "op": "MSTORE"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3516": {
      "op": "JUMP"
    },
    "3517": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10369,
        10478
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3518": {
      "offset": [
        6201,
        6209
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x2A300"
    },
    "3522": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10509,
        10523
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 11
    },
    "3523": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10509,
        10546
      ],
      "op": "GT",
      "path": "10"
    },
    "3524": {
      "branch": 151,
      "fn": "RequestManager.createRequest",
      "offset": [
        10509,
        10546
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3525": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE10"
    },
    "3528": {
      "branch": 151,
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3529": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3531": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3532": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3538": {
      "op": "SHL"
    },
    "3539": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3540": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3543": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3545": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3546": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "ADD",
      "path": "10"
    },
    "3547": {
      "op": "MSTORE"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3552": {
      "op": "DUP3"
    },
    "3553": {
      "op": "ADD"
    },
    "3554": {
      "op": "MSTORE"
    },
    "3555": {
      "op": "PUSH32",
      "value": "0x56616C696469747920706572696F6420746F6F206C6F6E670000000000000000"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3590": {
      "op": "DUP3"
    },
    "3591": {
      "op": "ADD"
    },
    "3592": {
      "op": "MSTORE"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3595": {
      "op": "ADD"
    },
    "3596": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3599": {
      "op": "JUMP"
    },
    "3600": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10488,
        10596
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3607": {
      "op": "SHL"
    },
    "3608": {
      "op": "SUB"
    },
    "3609": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 12
    },
    "3610": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "AND",
      "path": "10"
    },
    "3611": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3613": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3614": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3615": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3616": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10643
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "3618": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3620": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3621": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3623": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3624": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10663
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "3625": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10637,
        10677
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3626": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10627,
        10677
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3627": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10627,
        10677
      ],
      "op": "GT",
      "path": "10"
    },
    "3628": {
      "branch": 152,
      "fn": "RequestManager.createRequest",
      "offset": [
        10627,
        10677
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3629": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE78"
    },
    "3632": {
      "branch": 152,
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3633": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3635": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3636": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3642": {
      "op": "SHL"
    },
    "3643": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3644": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3647": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3649": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3650": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "ADD",
      "path": "10"
    },
    "3651": {
      "op": "MSTORE"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3656": {
      "op": "DUP3"
    },
    "3657": {
      "op": "ADD"
    },
    "3658": {
      "op": "MSTORE"
    },
    "3659": {
      "op": "PUSH32",
      "value": "0x416D6F756E742065786365656473207472616E73666572206C696D6974000000"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3694": {
      "op": "DUP3"
    },
    "3695": {
      "op": "ADD"
    },
    "3696": {
      "op": "MSTORE"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3699": {
      "op": "ADD"
    },
    "3700": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3703": {
      "op": "JUMP"
    },
    "3704": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10606,
        10732
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3705": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10743,
        10767
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3707": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10770,
        10803
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE84"
    },
    "3710": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10776,
        10794
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3711": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10796,
        10802
      ],
      "op": "DUP6",
      "path": "10"
    },
    "3712": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10770,
        10775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EB5"
    },
    "3715": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10770,
        10803
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3716": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10770,
        10803
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3717": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10743,
        10803
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3718": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10743,
        10803
      ],
      "op": "POP",
      "path": "10"
    },
    "3719": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10813,
        10843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3721": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10846,
        10919
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE92"
    },
    "3724": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10871,
        10889
      ],
      "op": "DUP9",
      "path": "10"
    },
    "3725": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10903,
        10909
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3726": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10846,
        10857
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x119E"
    },
    "3729": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10846,
        10919
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3730": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10846,
        10919
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3731": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10813,
        10919
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10813,
        10919
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3734": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11059
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 13,
      "value": "0xE9F"
    },
    "3737": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11043,
        11059
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3738": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11040
      ],
      "op": "DUP8",
      "path": "10"
    },
    "3739": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11059
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "3742": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11034,
        11059
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3743": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11059
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3744": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11084
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEA9"
    },
    "3747": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11084
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3748": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11084
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3749": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11084
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "3752": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11034,
        11084
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3753": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11034,
        11084
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3754": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3756": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3757": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3764": {
      "op": "SHL"
    },
    "3765": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3766": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3767": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10988,
        10998
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3768": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3770": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3771": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ADD",
      "path": "10"
    },
    "3772": {
      "op": "MSTORE"
    },
    "3773": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11008,
        11012
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3776": {
      "op": "DUP3"
    },
    "3777": {
      "op": "ADD"
    },
    "3778": {
      "op": "MSTORE"
    },
    "3779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3785": {
      "op": "SHL"
    },
    "3786": {
      "op": "SUB"
    },
    "3787": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10987
      ],
      "op": "DUP11",
      "path": "10"
    },
    "3788": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10987
      ],
      "op": "AND",
      "path": "10"
    },
    "3789": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10987
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3790": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10987
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "3795": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        10987
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3798": {
      "op": "ADD"
    },
    "3799": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "3801": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3803": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3804": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3805": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3806": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "SUB",
      "path": "10"
    },
    "3807": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3808": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP7",
      "path": "10"
    },
    "3809": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "GAS",
      "path": "10"
    },
    "3810": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "STATICCALL",
      "path": "10"
    },
    "3811": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3812": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3813": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3814": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xEF3"
    },
    "3817": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3818": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3819": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3821": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3822": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "3823": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3824": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3826": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3827": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3828": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "POP",
      "path": "10"
    },
    "3829": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "POP",
      "path": "10"
    },
    "3830": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "POP",
      "path": "10"
    },
    "3831": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "POP",
      "path": "10"
    },
    "3832": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3834": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3835": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "3836": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3838": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "NOT",
      "path": "10"
    },
    "3839": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "3841": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3842": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ADD",
      "path": "10"
    },
    "3843": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "AND",
      "path": "10"
    },
    "3844": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3845": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ADD",
      "path": "10"
    },
    "3846": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3847": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3849": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3850": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "POP",
      "path": "10"
    },
    "3851": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3852": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "ADD",
      "path": "10"
    },
    "3853": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3854": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF17"
    },
    "3857": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3858": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3859": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3607"
    },
    "3862": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        10951,
        11014
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3863": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11014
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3864": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11084
      ],
      "op": "LT",
      "path": "10"
    },
    "3865": {
      "branch": 153,
      "fn": "RequestManager.createRequest",
      "offset": [
        10951,
        11084
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3866": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF5E"
    },
    "3869": {
      "branch": 153,
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3870": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3872": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3879": {
      "op": "SHL"
    },
    "3880": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3881": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "3882": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3884": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "3886": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3887": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "ADD",
      "path": "10"
    },
    "3888": {
      "op": "MSTORE"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3893": {
      "op": "DUP3"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "op": "MSTORE"
    },
    "3896": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3924": {
      "op": "DUP3"
    },
    "3925": {
      "op": "ADD"
    },
    "3926": {
      "op": "MSTORE"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3929": {
      "op": "ADD"
    },
    "3930": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "3933": {
      "op": "JUMP"
    },
    "3934": {
      "fn": "RequestManager.createRequest",
      "offset": [
        10930,
        11132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3935": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "3937": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3938": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11143,
        11155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3940": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11143,
        11155
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3941": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF7D"
    },
    "3944": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11174
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3945": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3948": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3949": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "DIV",
      "path": "10"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3956": {
      "op": "SHL"
    },
    "3957": {
      "op": "SUB"
    },
    "3958": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "AND",
      "path": "10"
    },
    "3959": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11170
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "3961": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "3964": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11158,
        11174
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3965": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11158,
        11174
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3966": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11196
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 14,
      "value": "0x3"
    },
    "3968": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3969": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3976": {
      "op": "SHL"
    },
    "3977": {
      "op": "SUB"
    },
    "3978": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3979": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "AND",
      "path": "10"
    },
    "3980": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "3983": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "MUL",
      "path": "10"
    },
    "3984": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00"
    },
    "3998": {
      "op": "NOT"
    },
    "3999": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4000": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4001": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "AND",
      "path": "10"
    },
    "4002": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "OR",
      "path": "10"
    },
    "4003": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4004": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4005": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 15,
      "value": "0x40"
    },
    "4007": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4008": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4009": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11276,
        11289
      ],
      "op": "CHAINID",
      "path": "10"
    },
    "4010": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "4012": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4013": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4014": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "ADD",
      "path": "8"
    },
    "4015": {
      "op": "SWAP2"
    },
    "4016": {
      "op": "SWAP1"
    },
    "4017": {
      "op": "SWAP2"
    },
    "4018": {
      "op": "MSTORE"
    },
    "4019": {
      "op": "DUP2"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "DUP15"
    },
    "4023": {
      "op": "SWAP1"
    },
    "4024": {
      "op": "MSTORE"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "op": "SUB"
    },
    "4033": {
      "op": "NOT"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4036": {
      "op": "DUP14"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "SHL"
    },
    "4039": {
      "op": "DUP3"
    },
    "4040": {
      "op": "AND"
    },
    "4041": {
      "op": "DUP2"
    },
    "4042": {
      "op": "DUP6"
    },
    "4043": {
      "op": "ADD"
    },
    "4044": {
      "op": "MSTORE"
    },
    "4045": {
      "op": "DUP13"
    },
    "4046": {
      "op": "SWAP1"
    },
    "4047": {
      "op": "SHL"
    },
    "4048": {
      "op": "AND"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "4051": {
      "op": "DUP4"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "ADD"
    },
    "4058": {
      "op": "DUP11"
    },
    "4059": {
      "op": "SWAP1"
    },
    "4060": {
      "op": "MSTORE"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4067": {
      "op": "SHL"
    },
    "4068": {
      "op": "SUB"
    },
    "4069": {
      "op": "NOT"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4072": {
      "op": "DUP6"
    },
    "4073": {
      "op": "SWAP1"
    },
    "4074": {
      "op": "SHL"
    },
    "4075": {
      "op": "AND"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4078": {
      "op": "DUP4"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP3",
      "path": "8"
    },
    "4082": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4083": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4084": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP4",
      "path": "8"
    },
    "4085": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SUB",
      "path": "8"
    },
    "4086": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x94"
    },
    "4088": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "ADD",
      "path": "8"
    },
    "4089": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "DUP2",
      "path": "8"
    },
    "4090": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0xB4"
    },
    "4093": {
      "op": "SWAP1"
    },
    "4094": {
      "op": "SWAP3"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4097": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "4098": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        386,
        628
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "4099": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "DUP1",
      "path": "8"
    },
    "4100": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "4101": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "4102": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "ADD",
      "path": "8"
    },
    "4103": {
      "fn": "BeamerUtils.createRequestId",
      "offset": [
        359,
        642
      ],
      "op": "KECCAK256",
      "path": "8"
    },
    "4104": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4105": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11184,
        11204
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4106": {
      "op": "POP"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4109": {
      "op": "SWAP1"
    },
    "4110": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11435,
        11461
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4112": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4113": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4114": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4115": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11472
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "4117": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4119": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4120": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4122": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4123": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4124": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 16
    },
    "4125": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4126": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11513,
        11523
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "SUB"
    },
    "4135": {
      "op": "NOT"
    },
    "4136": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4137": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4138": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "AND",
      "path": "10"
    },
    "4139": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "OR",
      "path": "10"
    },
    "4140": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4141": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11493,
        11523
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11562
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 17
    },
    "4145": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11562
      ],
      "op": "ADD",
      "path": "10"
    },
    "4146": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4147": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4148": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4149": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4150": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "AND",
      "path": "10"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4157": {
      "op": "SHL"
    },
    "4158": {
      "op": "SUB"
    },
    "4159": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4160": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "AND",
      "path": "10"
    },
    "4161": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "OR",
      "path": "10"
    },
    "4162": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4163": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11533,
        11583
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4164": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11617
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 18,
      "value": "0x2"
    },
    "4166": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11617
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4167": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11617
      ],
      "op": "ADD",
      "path": "10"
    },
    "4168": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11633
      ],
      "op": "DUP14",
      "path": "10"
    },
    "4169": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4170": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11593,
        11633
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4171": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11660
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 19,
      "value": "0x3"
    },
    "4173": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11660
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4174": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11660
      ],
      "op": "ADD",
      "path": "10"
    },
    "4175": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11669
      ],
      "op": "DUP10",
      "path": "10"
    },
    "4176": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11669
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4177": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11643,
        11669
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4178": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4179": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11464,
        11483
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4180": {
      "op": "POP"
    },
    "4181": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11710,
        11742
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 20,
      "value": "0x105E"
    },
    "4184": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11728,
        11742
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4185": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11710,
        11725
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4186": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11710,
        11742
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "4189": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        11710,
        11742
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4190": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11710,
        11742
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4191": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11689
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4192": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11700
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4194": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11700
      ],
      "op": "ADD",
      "path": "10"
    },
    "4195": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11700
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4197": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "4200": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "EXP",
      "path": "10"
    },
    "4201": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4202": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4203": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4204": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4209": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "MUL",
      "path": "10"
    },
    "4210": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "NOT",
      "path": "10"
    },
    "4211": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "AND",
      "path": "10"
    },
    "4212": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4213": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4214": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4219": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "AND",
      "path": "10"
    },
    "4220": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "MUL",
      "path": "10"
    },
    "4221": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "OR",
      "path": "10"
    },
    "4222": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4223": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4224": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11679,
        11743
      ],
      "op": "POP",
      "path": "10"
    },
    "4225": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11779,
        11795
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 21
    },
    "4226": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11763
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4227": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4229": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11769
      ],
      "op": "ADD",
      "path": "10"
    },
    "4230": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11769
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4232": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "4235": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "EXP",
      "path": "10"
    },
    "4236": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4237": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4238": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4245": {
      "op": "SHL"
    },
    "4246": {
      "op": "SUB"
    },
    "4247": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "MUL",
      "path": "10"
    },
    "4248": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "NOT",
      "path": "10"
    },
    "4249": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "AND",
      "path": "10"
    },
    "4250": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4251": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4258": {
      "op": "SHL"
    },
    "4259": {
      "op": "SUB"
    },
    "4260": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "AND",
      "path": "10"
    },
    "4261": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "MUL",
      "path": "10"
    },
    "4262": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "OR",
      "path": "10"
    },
    "4263": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4264": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4265": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11753,
        11796
      ],
      "op": "POP",
      "path": "10"
    },
    "4266": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11838,
        11860
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 22
    },
    "4267": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11816
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4268": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11828
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4270": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11828
      ],
      "op": "ADD",
      "path": "10"
    },
    "4271": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11828
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x10"
    },
    "4273": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "4276": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "EXP",
      "path": "10"
    },
    "4277": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4278": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4279": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4286": {
      "op": "SHL"
    },
    "4287": {
      "op": "SUB"
    },
    "4288": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "MUL",
      "path": "10"
    },
    "4289": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "NOT",
      "path": "10"
    },
    "4290": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "AND",
      "path": "10"
    },
    "4291": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4292": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "op": "SUB"
    },
    "4301": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "AND",
      "path": "10"
    },
    "4302": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "MUL",
      "path": "10"
    },
    "4303": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "OR",
      "path": "10"
    },
    "4304": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4305": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "4306": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11806,
        11861
      ],
      "op": "POP",
      "path": "10"
    },
    "4307": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12019,
        12029
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 23
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4314": {
      "op": "SHL"
    },
    "4315": {
      "op": "SUB"
    },
    "4316": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "AND",
      "path": "10"
    },
    "4317": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11905,
        11914
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4318": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x869AB8728BDAE6AAE9B6D728DA37437CCF3DDFD7A141903F22CB8324739683DE"
    },
    "4351": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11928,
        11941
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4352": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11955,
        11973
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4353": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11987,
        12005
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4354": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12043,
        12056
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4355": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12070,
        12076
      ],
      "op": "DUP15",
      "path": "10"
    },
    "4356": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12090,
        12095
      ],
      "op": "DUP11",
      "path": "10"
    },
    "4357": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12134,
        12148
      ],
      "op": "DUP16",
      "path": "10"
    },
    "4358": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12131
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4359": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1110"
    },
    "4362": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12148
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4363": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12148
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4364": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12148
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "4367": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12116,
        12148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4368": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12116,
        12148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4369": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4371": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4372": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4373": {
      "op": "SWAP8"
    },
    "4374": {
      "op": "DUP9"
    },
    "4375": {
      "op": "MSTORE"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4382": {
      "op": "SHL"
    },
    "4383": {
      "op": "SUB"
    },
    "4384": {
      "op": "SWAP7"
    },
    "4385": {
      "op": "DUP8"
    },
    "4386": {
      "op": "AND"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4389": {
      "op": "DUP10"
    },
    "4390": {
      "op": "ADD"
    },
    "4391": {
      "op": "MSTORE"
    },
    "4392": {
      "op": "SWAP5"
    },
    "4393": {
      "op": "DUP7"
    },
    "4394": {
      "op": "AND"
    },
    "4395": {
      "op": "DUP8"
    },
    "4396": {
      "op": "DUP7"
    },
    "4397": {
      "op": "ADD"
    },
    "4398": {
      "op": "MSTORE"
    },
    "4399": {
      "op": "SWAP3"
    },
    "4400": {
      "op": "SWAP1"
    },
    "4401": {
      "op": "SWAP5"
    },
    "4402": {
      "op": "AND"
    },
    "4403": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4405": {
      "op": "DUP7"
    },
    "4406": {
      "op": "ADD"
    },
    "4407": {
      "op": "MSTORE"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4410": {
      "op": "DUP6"
    },
    "4411": {
      "op": "ADD"
    },
    "4412": {
      "op": "MSTORE"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4419": {
      "op": "SHL"
    },
    "4420": {
      "op": "SUB"
    },
    "4421": {
      "op": "SWAP1"
    },
    "4422": {
      "op": "SWAP3"
    },
    "4423": {
      "op": "AND"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4426": {
      "op": "DUP5"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "op": "MSTORE"
    },
    "4429": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "op": "SWAP2"
    },
    "4436": {
      "op": "AND"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4439": {
      "op": "DUP4"
    },
    "4440": {
      "op": "ADD"
    },
    "4441": {
      "op": "MSTORE"
    },
    "4442": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4443": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4444": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4445": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4446": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "SUB",
      "path": "10"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4449": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "ADD",
      "path": "10"
    },
    "4450": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4451": {
      "fn": "RequestManager.createRequest",
      "offset": [
        11877,
        12159
      ],
      "op": "LOG3",
      "path": "10"
    },
    "4452": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12338
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 24,
      "value": "0x118F"
    },
    "4455": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12227,
        12237
      ],
      "op": "CALLER",
      "path": "10"
    },
    "4456": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12259,
        12263
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "4457": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12306,
        12328
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4458": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1173"
    },
    "4461": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12287,
        12303
      ],
      "op": "DUP10",
      "path": "10"
    },
    "4462": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12284
      ],
      "op": "DUP14",
      "path": "10"
    },
    "4463": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12303
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "4466": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12278,
        12303
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4467": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4468": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12328
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x117D"
    },
    "4471": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12328
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4472": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12328
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4473": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12328
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "4476": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12278,
        12328
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4477": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12278,
        12328
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4484": {
      "op": "SHL"
    },
    "4485": {
      "op": "SUB"
    },
    "4486": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12213
      ],
      "op": "DUP16",
      "path": "10"
    },
    "4487": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12213
      ],
      "op": "AND",
      "path": "10"
    },
    "4488": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12213
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4489": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12338
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4490": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12338
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4491": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12213
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2804"
    },
    "4494": {
      "fn": "RequestManager.createRequest",
      "jump": "i",
      "offset": [
        12170,
        12338
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4495": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12170,
        12338
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4496": {
      "op": "POP"
    },
    "4497": {
      "fn": "RequestManager.createRequest",
      "offset": [
        12356,
        12365
      ],
      "op": "SWAP11",
      "path": "10",
      "statement": 25
    },
    "4498": {
      "fn": "RequestManager.createRequest",
      "offset": [
        9980,
        12372
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "op": "POP"
    },
    "4507": {
      "op": "POP"
    },
    "4508": {
      "op": "POP"
    },
    "4509": {
      "fn": "RequestManager.createRequest",
      "jump": "o",
      "offset": [
        9980,
        12372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4510": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7454,
        7653
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "op": "SUB"
    },
    "4519": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 26
    },
    "4520": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "AND",
      "path": "10"
    },
    "4521": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7558,
        7565
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4523": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4524": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4525": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4526": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7604
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "4528": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4530": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4531": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4533": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4534": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7618
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4535": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4537": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "ADD",
      "path": "10"
    },
    "4538": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4539": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7637,
        7646
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "4543": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7637,
        7646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4544": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7589,
        7633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11D6"
    },
    "4547": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7589,
        7633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4552": {
      "op": "SHL"
    },
    "4553": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4554": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "DIV",
      "path": "10"
    },
    "4555": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4560": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7598,
        7633
      ],
      "op": "AND",
      "path": "10"
    },
    "4561": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7589,
        7595
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4562": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7589,
        7633
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x364B"
    },
    "4565": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7589,
        7633
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4566": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7589,
        7633
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4567": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7588,
        7646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCFD"
    },
    "4570": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7588,
        7646
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4571": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7588,
        7646
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4572": {
      "fn": "RequestManager.protocolFee",
      "offset": [
        7588,
        7646
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x366A"
    },
    "4575": {
      "fn": "RequestManager.protocolFee",
      "jump": "i",
      "offset": [
        7588,
        7646
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4576": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4577": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11E8"
    },
    "4580": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "4583": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4584": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4589": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4591": {
      "op": "SHL"
    },
    "4592": {
      "op": "SUB"
    },
    "4593": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 27
    },
    "4594": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "AND",
      "path": "9"
    },
    "4595": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4597": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4598": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4599": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4600": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1372,
        1376
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4602": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4604": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4605": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4606": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4607": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4609": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4610": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4611": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4612": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1369
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4613": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4614": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4617": {
      "op": "NOT"
    },
    "4618": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "AND",
      "path": "9"
    },
    "4619": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4620": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4621": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "OR",
      "path": "9"
    },
    "4622": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4623": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4624": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1352,
        1376
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4625": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 28
    },
    "4626": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4627": {
      "op": "SWAP2"
    },
    "4628": {
      "op": "DUP3"
    },
    "4629": {
      "op": "MSTORE"
    },
    "4630": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x371FC559C30F70424413FED6BF7E57DC939651331ABAD5C970A8EA0921C80B2E"
    },
    "4663": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4664": {
      "op": "ADD"
    },
    "4665": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4666": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4668": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4669": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4670": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4671": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "SUB",
      "path": "9"
    },
    "4672": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4673": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1392,
        1406
      ],
      "op": "LOG1",
      "path": "9"
    },
    "4674": {
      "fn": "LpWhitelist.addAllowedLp",
      "offset": [
        1288,
        1413
      ],
      "op": "POP",
      "path": "9"
    },
    "4675": {
      "fn": "LpWhitelist.addAllowedLp",
      "jump": "o",
      "offset": [
        1288,
        1413
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4676": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1635,
        1765
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4677": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124C"
    },
    "4680": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "4683": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4684": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4691": {
      "op": "SHL"
    },
    "4692": {
      "op": "SUB"
    },
    "4693": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 29
    },
    "4694": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "AND",
      "path": "9"
    },
    "4695": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4697": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4698": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4699": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4700": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1719
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4702": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4704": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4705": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4706": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4707": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4709": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4710": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4711": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4712": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1709,
        1726
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4713": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1702,
        1726
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4714": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1702,
        1726
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4717": {
      "op": "NOT"
    },
    "4718": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1702,
        1726
      ],
      "op": "AND",
      "path": "9"
    },
    "4719": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1702,
        1726
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4720": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1702,
        1726
      ],
      "op": "SSTORE",
      "path": "9"
    },
    "4721": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1742,
        1758
      ],
      "op": "SWAP1",
      "path": "9",
      "statement": 30
    },
    "4722": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1742,
        1758
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4723": {
      "op": "SWAP2"
    },
    "4724": {
      "op": "DUP3"
    },
    "4725": {
      "op": "MSTORE"
    },
    "4726": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1742,
        1758
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x4E774C97F73F4BEA034579E4224498D7D9B3A4109EAA70ED3D85C97A5855F198"
    },
    "4759": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1742,
        1758
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "fn": "LpWhitelist.removeAllowedLp",
      "offset": [
        1742,
        1758
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1239"
    },
    "4764": {
      "op": "JUMP"
    },
    "4765": {
      "fn": "RequestManager.unpause",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4766": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A5"
    },
    "4769": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "4772": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4773": {
      "fn": "RequestManager.unpause",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4774": {
      "fn": "RequestManager.unpause",
      "offset": [
        32166,
        32176
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 31,
      "value": "0x12AD"
    },
    "4777": {
      "fn": "RequestManager.unpause",
      "offset": [
        32166,
        32174
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28C9"
    },
    "4780": {
      "fn": "RequestManager.unpause",
      "jump": "i",
      "offset": [
        32166,
        32176
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4781": {
      "fn": "RequestManager.unpause",
      "offset": [
        32166,
        32176
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4782": {
      "fn": "RequestManager.unpause",
      "jump": "o",
      "offset": [
        32118,
        32183
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4783": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4784": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14532,
        14538
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4786": {
      "offset": [
        8175,
        8194
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4787": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4788": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4789": {
      "offset": [
        8175,
        8183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "4791": {
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4793": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4794": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4796": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4797": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4798": {
      "offset": [
        8175,
        8201
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4799": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14475,
        14484
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4800": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14475,
        14484
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4807": {
      "op": "SHL"
    },
    "4808": {
      "op": "SUB"
    },
    "4809": {
      "offset": [
        8175,
        8201
      ],
      "op": "AND",
      "path": "10"
    },
    "4810": {
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12E5"
    },
    "4813": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4814": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4816": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4823": {
      "op": "SHL"
    },
    "4824": {
      "offset": [
        8154,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4825": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4826": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4828": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "ADD",
      "path": "10"
    },
    "4829": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "4832": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4833": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35AC"
    },
    "4836": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4837": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4844": {
      "op": "SHL"
    },
    "4845": {
      "op": "SUB"
    },
    "4846": {
      "offset": [
        1011,
        1037
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4847": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "AND",
      "path": "9"
    },
    "4848": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4850": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4851": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4852": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4853": {
      "offset": [
        1011,
        1021
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "4855": {
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4857": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4858": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4860": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4861": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "4862": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "4863": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14506,
        14513
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4864": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14506,
        14513
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4865": {
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "4867": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "AND",
      "path": "9"
    },
    "4868": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x133D"
    },
    "4871": {
      "offset": [
        1003,
        1053
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4872": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4874": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4875": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4881": {
      "op": "SHL"
    },
    "4882": {
      "offset": [
        1003,
        1053
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4883": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4886": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "4888": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4889": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "ADD",
      "path": "9"
    },
    "4890": {
      "op": "MSTORE"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4895": {
      "op": "DUP3"
    },
    "4896": {
      "op": "ADD"
    },
    "4897": {
      "op": "MSTORE"
    },
    "4898": {
      "op": "PUSH11",
      "value": "0x139BDD08185B1B1BDDD959"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "4912": {
      "op": "SHL"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4915": {
      "op": "DUP3"
    },
    "4916": {
      "op": "ADD"
    },
    "4917": {
      "op": "MSTORE"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA4E"
    },
    "4924": {
      "op": "JUMP"
    },
    "4925": {
      "offset": [
        1003,
        1053
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4926": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14554,
        14577
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4928": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4929": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4930": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4931": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14588
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "4933": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4935": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4936": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4938": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4939": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14580,
        14599
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "4940": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 32,
      "value": "0x4"
    },
    "4942": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4943": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "ADD",
      "path": "10"
    },
    "4944": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4945": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14691
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1381"
    },
    "4948": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4949": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14670,
        14691
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "4982": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14670,
        14691
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4983": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "4988": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14667
      ],
      "op": "AND",
      "path": "10"
    },
    "4989": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14691
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "4992": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14649,
        14691
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4993": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14649,
        14691
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4994": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14631,
        14646
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4995": {
      "branch": 154,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14631,
        14691
      ],
      "op": "LT",
      "path": "10"
    },
    "4996": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13D9"
    },
    "4999": {
      "branch": 154,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5000": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5002": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5009": {
      "op": "SHL"
    },
    "5010": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5011": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5014": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5016": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5017": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "ADD",
      "path": "10"
    },
    "5018": {
      "op": "MSTORE"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5023": {
      "op": "DUP3"
    },
    "5024": {
      "op": "ADD"
    },
    "5025": {
      "op": "MSTORE"
    },
    "5026": {
      "op": "PUSH32",
      "value": "0x526571756573742063616E6E6F7420626520636C61696D656420616E796D6F72"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5061": {
      "op": "DUP3"
    },
    "5062": {
      "op": "ADD"
    },
    "5063": {
      "op": "MSTORE"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0x65"
    },
    "5066": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5068": {
      "op": "SHL"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5071": {
      "op": "DUP3"
    },
    "5072": {
      "op": "ADD"
    },
    "5073": {
      "op": "MSTORE"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5076": {
      "op": "ADD"
    },
    "5077": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "5080": {
      "op": "JUMP"
    },
    "5081": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14610,
        14750
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5082": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14791
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0x5"
    },
    "5084": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14791
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5085": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14791
      ],
      "op": "ADD",
      "path": "10"
    },
    "5086": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14791
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14791
      ],
      "op": "AND",
      "path": "10"
    },
    "5096": {
      "branch": 155,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14768,
        14796
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5097": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1430"
    },
    "5100": {
      "branch": 155,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5101": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5103": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5110": {
      "op": "SHL"
    },
    "5111": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5112": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5115": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5117": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5118": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "ADD",
      "path": "10"
    },
    "5119": {
      "op": "MSTORE"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "5122": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5124": {
      "op": "DUP3"
    },
    "5125": {
      "op": "ADD"
    },
    "5126": {
      "op": "MSTORE"
    },
    "5127": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "5153": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "5155": {
      "op": "SHL"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5158": {
      "op": "DUP3"
    },
    "5159": {
      "op": "ADD"
    },
    "5160": {
      "op": "MSTORE"
    },
    "5161": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "5167": {
      "op": "JUMP"
    },
    "5168": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14760,
        14826
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5169": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14857,
        14867
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 34,
      "value": "0x0"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5208": {
      "op": "SHL"
    },
    "5209": {
      "op": "SUB"
    },
    "5210": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14844,
        14867
      ],
      "op": "AND",
      "path": "10"
    },
    "5211": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14844,
        14853
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "5212": {
      "branch": 156,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14844,
        14867
      ],
      "op": "EQ",
      "path": "10"
    },
    "5213": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x149F"
    },
    "5216": {
      "branch": 156,
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5217": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5219": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5220": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5226": {
      "op": "SHL"
    },
    "5227": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5228": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5231": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5233": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5234": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "ADD",
      "path": "10"
    },
    "5235": {
      "op": "MSTORE"
    },
    "5236": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "5238": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5240": {
      "op": "DUP3"
    },
    "5241": {
      "op": "ADD"
    },
    "5242": {
      "op": "MSTORE"
    },
    "5243": {
      "op": "PUSH20",
      "value": "0x125B9D985B1A59081CDD185AD948185B5BDD5B9D"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "5266": {
      "op": "SHL"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5269": {
      "op": "DUP3"
    },
    "5270": {
      "op": "ADD"
    },
    "5271": {
      "op": "MSTORE"
    },
    "5272": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5274": {
      "op": "ADD"
    },
    "5275": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "5278": {
      "op": "JUMP"
    },
    "5279": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14836,
        14892
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5280": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14910,
        14916
      ],
      "op": "DUP5",
      "path": "10",
      "statement": 35
    },
    "5281": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14E5"
    },
    "5284": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5285": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5287": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5296": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5299": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5301": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5302": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "ADD",
      "path": "10"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5308": {
      "op": "DUP3"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH22",
      "value": "0x46696C6C4964206D757374206E6F742062652030783"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "5336": {
      "op": "SHL"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5339": {
      "op": "DUP3"
    },
    "5340": {
      "op": "ADD"
    },
    "5341": {
      "op": "MSTORE"
    },
    "5342": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5344": {
      "op": "ADD"
    },
    "5345": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "5348": {
      "op": "JUMP"
    },
    "5349": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14902,
        14957
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5350": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14992,
        14993
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 36,
      "value": "0x1"
    },
    "5352": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14975
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5353": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5355": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14988
      ],
      "op": "ADD",
      "path": "10"
    },
    "5356": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14988
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1C"
    },
    "5358": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5359": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5360": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5361": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5362": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5363": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5364": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5367": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "EXP",
      "path": "10"
    },
    "5368": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5369": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DIV",
      "path": "10"
    },
    "5370": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "5375": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "AND",
      "path": "10"
    },
    "5376": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1509"
    },
    "5379": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5380": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5381": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x368C"
    },
    "5384": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        14968,
        14993
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5385": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5386": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5387": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5388": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "5393": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5394": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5395": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "AND",
      "path": "10"
    },
    "5396": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5399": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5400": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5401": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "EXP",
      "path": "10"
    },
    "5402": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5403": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5404": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "MUL",
      "path": "10"
    },
    "5405": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5406": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "MUL",
      "path": "10"
    },
    "5407": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "NOT",
      "path": "10"
    },
    "5408": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "AND",
      "path": "10"
    },
    "5409": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "OR",
      "path": "10"
    },
    "5410": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5411": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5412": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14968,
        14993
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5413": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15031
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "5415": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15031
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5418": {
      "op": "SWAP3"
    },
    "5419": {
      "op": "POP"
    },
    "5420": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1541"
    },
    "5423": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15035
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5430": {
      "op": "SHL"
    },
    "5431": {
      "op": "SUB"
    },
    "5432": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15031
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5433": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15031
      ],
      "op": "DIV",
      "path": "10"
    },
    "5434": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15031
      ],
      "op": "AND",
      "path": "10"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5437": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15035
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "5440": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        15019,
        15035
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5441": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15019,
        15035
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5442": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15057
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 37,
      "value": "0x3"
    },
    "5444": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5445": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5446": {
      "op": "PUSH13",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF00"
    },
    "5460": {
      "op": "NOT"
    },
    "5461": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "AND",
      "path": "10"
    },
    "5462": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5471": {
      "op": "SHL"
    },
    "5472": {
      "op": "SUB"
    },
    "5473": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5474": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "AND",
      "path": "10"
    },
    "5475": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "MUL",
      "path": "10"
    },
    "5476": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "OR",
      "path": "10"
    },
    "5477": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5478": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5479": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15045,
        15065
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5480": {
      "op": "POP"
    },
    "5481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5483": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15097,
        15126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1594"
    },
    "5486": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15115,
        15126
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "5519": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15097,
        15112
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "5520": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15097,
        15126
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "5523": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        15097,
        15126
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5524": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15097,
        15126
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5525": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15075,
        15126
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5526": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15075,
        15126
      ],
      "op": "POP",
      "path": "10"
    },
    "5527": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15137,
        15156
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5529": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15165
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5531": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5533": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15166,
        15171
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5538": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5540": {
      "op": "SHL"
    },
    "5541": {
      "op": "SUB"
    },
    "5542": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "AND",
      "path": "10"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5549": {
      "op": "SHL"
    },
    "5550": {
      "op": "SUB"
    },
    "5551": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "AND",
      "path": "10"
    },
    "5552": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5553": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5554": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5556": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "ADD",
      "path": "10"
    },
    "5557": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5558": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5559": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5560": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5562": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "ADD",
      "path": "10"
    },
    "5563": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5565": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15159,
        15172
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "5566": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15137,
        15172
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5567": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15137,
        15172
      ],
      "op": "POP",
      "path": "10"
    },
    "5568": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15200,
        15209
      ],
      "op": "DUP9",
      "path": "10",
      "statement": 38
    },
    "5569": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15187
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5570": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15197
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5572": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15197
      ],
      "op": "ADD",
      "path": "10"
    },
    "5573": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15209
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5574": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15209
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5575": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15209
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5576": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15182,
        15209
      ],
      "op": "POP",
      "path": "10"
    },
    "5577": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15235,
        15242
      ],
      "op": "DUP10",
      "path": "10",
      "statement": 39
    },
    "5578": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15224
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5579": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5581": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15232
      ],
      "op": "ADD",
      "path": "10"
    },
    "5582": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5584": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5587": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "EXP",
      "path": "10"
    },
    "5588": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5589": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5590": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5597": {
      "op": "SHL"
    },
    "5598": {
      "op": "SUB"
    },
    "5599": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "MUL",
      "path": "10"
    },
    "5600": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "NOT",
      "path": "10"
    },
    "5601": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "AND",
      "path": "10"
    },
    "5602": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5603": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5610": {
      "op": "SHL"
    },
    "5611": {
      "op": "SUB"
    },
    "5612": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "AND",
      "path": "10"
    },
    "5613": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "MUL",
      "path": "10"
    },
    "5614": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "OR",
      "path": "10"
    },
    "5615": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5616": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5617": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15219,
        15242
      ],
      "op": "POP",
      "path": "10"
    },
    "5618": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15280,
        15289
      ],
      "op": "CALLVALUE",
      "path": "10",
      "statement": 40
    },
    "5619": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15257
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5620": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "5622": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15270
      ],
      "op": "ADD",
      "path": "10"
    },
    "5623": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15270
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x14"
    },
    "5625": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "5628": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "EXP",
      "path": "10"
    },
    "5629": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5630": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5631": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5638": {
      "op": "SHL"
    },
    "5639": {
      "op": "SUB"
    },
    "5640": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "MUL",
      "path": "10"
    },
    "5641": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "NOT",
      "path": "10"
    },
    "5642": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "AND",
      "path": "10"
    },
    "5643": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5644": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5651": {
      "op": "SHL"
    },
    "5652": {
      "op": "SUB"
    },
    "5653": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "AND",
      "path": "10"
    },
    "5654": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "MUL",
      "path": "10"
    },
    "5655": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "OR",
      "path": "10"
    },
    "5656": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5657": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5658": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15252,
        15290
      ],
      "op": "POP",
      "path": "10"
    },
    "5659": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15320,
        15331
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 41
    },
    "5660": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15305
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5661": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15317
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "5663": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15317
      ],
      "op": "ADD",
      "path": "10"
    },
    "5664": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15331
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5665": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15331
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5666": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15331
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5667": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15300,
        15331
      ],
      "op": "POP",
      "path": "10"
    },
    "5668": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15356,
        15362
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 42
    },
    "5669": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15346
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5670": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15353
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "5672": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15353
      ],
      "op": "ADD",
      "path": "10"
    },
    "5673": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5674": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5675": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15362
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5676": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15341,
        15362
      ],
      "op": "POP",
      "path": "10"
    },
    "5677": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15401,
        15410
      ],
      "op": "DUP9",
      "path": "10",
      "statement": 43
    },
    "5678": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF0289B2C09D4E59035C29451CFBB75C07A50FDCC68DB2ECCEF5A84DB99285E44"
    },
    "5711": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15424,
        15429
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5712": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15443,
        15450
      ],
      "op": "DUP13",
      "path": "10"
    },
    "5713": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15471,
        15480
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "5714": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15503,
        15504
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5716": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15519,
        15520
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5717": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15534,
        15545
      ],
      "op": "DUP9",
      "path": "10"
    },
    "5718": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15559,
        15565
      ],
      "op": "DUP16",
      "path": "10"
    },
    "5719": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5721": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5722": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1669"
    },
    "5725": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "5726": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "5727": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "5728": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5729": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5730": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5731": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5732": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5733": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36AB"
    },
    "5736": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        15378,
        15575
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5737": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5738": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5740": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5741": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5742": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5743": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SUB",
      "path": "10"
    },
    "5744": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5745": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15378,
        15575
      ],
      "op": "LOG2",
      "path": "10"
    },
    "5746": {
      "op": "POP"
    },
    "5747": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15593,
        15598
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 44
    },
    "5748": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        15593,
        15598
      ],
      "op": "SWAP9",
      "path": "10"
    },
    "5749": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        14317,
        15605
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "5750": {
      "op": "POP"
    },
    "5751": {
      "op": "POP"
    },
    "5752": {
      "op": "POP"
    },
    "5753": {
      "op": "POP"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "op": "POP"
    },
    "5756": {
      "op": "POP"
    },
    "5757": {
      "op": "POP"
    },
    "5758": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        14317,
        15605
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5759": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5760": {
      "offset": [
        2072,
        2086
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5762": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5763": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5764": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5765": {
      "offset": [
        2089,
        2096
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5767": {
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5769": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5770": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5772": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5773": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5774": {
      "offset": [
        2089,
        2114
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5775": {
      "offset": [
        2089,
        2111
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5776": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2089,
        2111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5783": {
      "op": "SHL"
    },
    "5784": {
      "op": "SUB"
    },
    "5785": {
      "offset": [
        2089,
        2114
      ],
      "op": "AND",
      "path": "11"
    },
    "5786": {
      "offset": [
        2146,
        2159
      ],
      "op": "CHAINID",
      "path": "11"
    },
    "5787": {
      "offset": [
        2129,
        2159
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5788": {
      "branch": 200,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2129,
        2159
      ],
      "op": "SUB",
      "path": "11"
    },
    "5789": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16CD"
    },
    "5792": {
      "branch": 200,
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5793": {
      "offset": [
        2183,
        2193
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5800": {
      "op": "SHL"
    },
    "5801": {
      "op": "SUB"
    },
    "5802": {
      "offset": [
        2183,
        2203
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5803": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "AND",
      "path": "11"
    },
    "5804": {
      "branch": 201,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2183,
        2203
      ],
      "op": "EQ",
      "path": "11"
    },
    "5805": {
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16C8"
    },
    "5808": {
      "branch": 201,
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5809": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5811": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5818": {
      "op": "SHL"
    },
    "5819": {
      "offset": [
        2175,
        2240
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5820": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5821": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5823": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "ADD",
      "path": "11"
    },
    "5824": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "5827": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5828": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3513"
    },
    "5831": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5832": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2175,
        2240
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5833": {
      "offset": [
        2125,
        2615
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1793"
    },
    "5836": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5837": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5838": {
      "offset": [
        2271,
        2288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5840": {
      "offset": [
        2291,
        2313
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5841": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5842": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5843": {
      "offset": [
        2291,
        2298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5845": {
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5847": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5848": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5850": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5851": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2313
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5852": {
      "offset": [
        2314,
        2315
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "5854": {
      "offset": [
        2291,
        2316
      ],
      "op": "ADD",
      "path": "11"
    },
    "5855": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5862": {
      "op": "SHL"
    },
    "5863": {
      "op": "SUB"
    },
    "5864": {
      "offset": [
        2291,
        2316
      ],
      "op": "AND",
      "path": "11"
    },
    "5865": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2291,
        2316
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5866": {
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1705"
    },
    "5869": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5870": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5872": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5873": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5877": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5879": {
      "op": "SHL"
    },
    "5880": {
      "offset": [
        2330,
        2446
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5881": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5882": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5884": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "ADD",
      "path": "11"
    },
    "5885": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "5888": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5889": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3548"
    },
    "5892": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5893": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2330,
        2446
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5894": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5896": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5897": {
      "op": "PUSH4",
      "value": "0x845C5443"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5904": {
      "op": "SHL"
    },
    "5905": {
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5906": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5911": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5913": {
      "op": "SHL"
    },
    "5914": {
      "op": "SUB"
    },
    "5915": {
      "op": "DUP4"
    },
    "5916": {
      "op": "DUP2"
    },
    "5917": {
      "op": "AND"
    },
    "5918": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5920": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5921": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "5922": {
      "op": "MSTORE"
    },
    "5923": {
      "offset": [
        2527,
        2537
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5926": {
      "op": "DUP4"
    },
    "5927": {
      "op": "ADD"
    },
    "5928": {
      "op": "MSTORE"
    },
    "5929": {
      "offset": [
        2485,
        2518
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5930": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "AND",
      "path": "11"
    },
    "5931": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5932": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x845C5443"
    },
    "5937": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2518
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5940": {
      "op": "ADD"
    },
    "5941": {
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5943": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5945": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5946": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5947": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5948": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SUB",
      "path": "11"
    },
    "5949": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5950": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5951": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "GAS",
      "path": "11"
    },
    "5952": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "5953": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5954": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5955": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5956": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1751"
    },
    "5959": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5960": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5961": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5963": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5964": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "5965": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5966": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5968": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "REVERT",
      "path": "11"
    },
    "5969": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5970": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "5971": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "5972": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "5973": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "5974": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5976": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5977": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "5978": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5980": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "NOT",
      "path": "11"
    },
    "5981": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "5983": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5984": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "5985": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "AND",
      "path": "11"
    },
    "5986": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP3",
      "path": "11"
    },
    "5987": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "5988": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5989": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5991": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5992": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "POP",
      "path": "11"
    },
    "5993": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5994": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "ADD",
      "path": "11"
    },
    "5995": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5996": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1775"
    },
    "5999": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6000": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6001": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x358A"
    },
    "6004": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6005": {
      "branch": 202,
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2485,
        2538
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6006": {
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1791"
    },
    "6009": {
      "branch": 202,
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6010": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6012": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6013": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6017": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6019": {
      "op": "SHL"
    },
    "6020": {
      "offset": [
        2460,
        2604
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6021": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6022": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6024": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "ADD",
      "path": "11"
    },
    "6025": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "6028": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6029": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3513"
    },
    "6032": {
      "fn": "RequestManager.resolveRequest",
      "jump": "i",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6033": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        2460,
        2604
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6034": {
      "offset": [
        2257,
        2615
      ],
      "op": "POP",
      "path": "11"
    },
    "6035": {
      "offset": [
        2125,
        2615
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6036": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30267,
        30290
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6038": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6039": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6040": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6041": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30301
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6043": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6045": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6046": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6047": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6048": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6050": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6051": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6052": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6053": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30336
      ],
      "op": "SWAP3",
      "path": "10",
      "statement": 45
    },
    "6054": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30336
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6055": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30336
      ],
      "op": "ADD",
      "path": "10"
    },
    "6056": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6057": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6064": {
      "op": "SHL"
    },
    "6065": {
      "op": "SUB"
    },
    "6066": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "AND",
      "path": "10"
    },
    "6067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6071": {
      "op": "SHL"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6076": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6078": {
      "op": "SHL"
    },
    "6079": {
      "op": "SUB"
    },
    "6080": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "DUP11",
      "path": "10"
    },
    "6081": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "AND",
      "path": "10"
    },
    "6082": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6083": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6084": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "MUL",
      "path": "10"
    },
    "6085": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6086": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6087": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6088": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "OR",
      "path": "10"
    },
    "6089": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6090": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6091": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30322,
        30345
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6092": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30369
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 46,
      "value": "0x6"
    },
    "6094": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30369
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6095": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30369
      ],
      "op": "ADD",
      "path": "10"
    },
    "6096": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30378
      ],
      "op": "DUP11",
      "path": "10"
    },
    "6097": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30378
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6098": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30355,
        30378
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6099": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "DUP10",
      "path": "10",
      "statement": 47
    },
    "6100": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "DUP6",
      "path": "10"
    },
    "6101": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6102": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "6104": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30411
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6105": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30411
      ],
      "op": "ADD",
      "path": "10"
    },
    "6106": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6107": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6108": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6109": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6110": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6111": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30419
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6112": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30427
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6113": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30427
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6116": {
      "op": "NOT"
    },
    "6117": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30427
      ],
      "op": "AND",
      "path": "10"
    },
    "6118": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30427
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6119": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30389,
        30427
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6120": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 48
    },
    "6121": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6122": {
      "op": "DUP11"
    },
    "6123": {
      "op": "DUP2"
    },
    "6124": {
      "op": "MSTORE"
    },
    "6125": {
      "op": "SWAP2"
    },
    "6126": {
      "op": "DUP3"
    },
    "6127": {
      "op": "ADD"
    },
    "6128": {
      "op": "SWAP4"
    },
    "6129": {
      "op": "SWAP1"
    },
    "6130": {
      "op": "SWAP4"
    },
    "6131": {
      "op": "MSTORE"
    },
    "6132": {
      "op": "SWAP2"
    },
    "6133": {
      "op": "DUP3"
    },
    "6134": {
      "op": "ADD"
    },
    "6135": {
      "op": "DUP8"
    },
    "6136": {
      "op": "SWAP1"
    },
    "6137": {
      "op": "MSTORE"
    },
    "6138": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30293,
        30312
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6139": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xB32D3C8B5539B0CC3050D5B75E9DAD8ECA8744A0892259BDA27FDB51B9956736"
    },
    "6172": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6173": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6175": {
      "op": "ADD"
    },
    "6176": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6178": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6179": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6180": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6181": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "SUB",
      "path": "10"
    },
    "6182": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6183": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30443,
        30485
      ],
      "op": "LOG1",
      "path": "10"
    },
    "6184": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30257,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6185": {
      "offset": [
        2062,
        2632
      ],
      "op": "POP",
      "path": "11"
    },
    "6186": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6187": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6188": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6189": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6190": {
      "fn": "RequestManager.resolveRequest",
      "offset": [
        30078,
        30492
      ],
      "op": "POP",
      "path": "10"
    },
    "6191": {
      "fn": "RequestManager.resolveRequest",
      "jump": "o",
      "offset": [
        30078,
        30492
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6192": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6193": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1838"
    },
    "6196": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "6199": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6200": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6201": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 49,
      "value": "0x12AD"
    },
    "6204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6206": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291B"
    },
    "6209": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6210": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6211": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184A"
    },
    "6214": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "6217": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6218": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6219": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 50,
      "value": "0x1855"
    },
    "6222": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1578,
        1591
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6223": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1593,
        1599
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6224": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1601,
        1610
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6225": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1577
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x296B"
    },
    "6228": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6229": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1567,
        1611
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6230": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "11"
    },
    "6231": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "11"
    },
    "6232": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1431,
        1618
      ],
      "op": "POP",
      "path": "11"
    },
    "6233": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1431,
        1618
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6234": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6235": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13811,
        13817
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6237": {
      "offset": [
        8175,
        8194
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6238": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6239": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6240": {
      "offset": [
        8175,
        8183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6242": {
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6244": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6245": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6247": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6248": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6249": {
      "offset": [
        8175,
        8201
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6250": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13751,
        13760
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6251": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13751,
        13760
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6258": {
      "op": "SHL"
    },
    "6259": {
      "op": "SUB"
    },
    "6260": {
      "offset": [
        8175,
        8201
      ],
      "op": "AND",
      "path": "10"
    },
    "6261": {
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1890"
    },
    "6264": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6265": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6267": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6268": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6274": {
      "op": "SHL"
    },
    "6275": {
      "offset": [
        8154,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6276": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6277": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6279": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "ADD",
      "path": "10"
    },
    "6280": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "6283": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6284": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35AC"
    },
    "6287": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6288": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6289": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13782,
        13792
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6290": {
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "6292": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6293": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6294": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6295": {
      "offset": [
        1011,
        1021
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "6297": {
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "6299": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6300": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6302": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "6303": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "KECCAK256",
      "path": "9"
    },
    "6304": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "SLOAD",
      "path": "9"
    },
    "6305": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0xFF"
    },
    "6307": {
      "branch": 195,
      "fn": "RequestManager.claimRequest",
      "offset": [
        1011,
        1037
      ],
      "op": "AND",
      "path": "9"
    },
    "6308": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18DD"
    },
    "6311": {
      "branch": 195,
      "offset": [
        1003,
        1053
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "6312": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "6314": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "6315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6321": {
      "op": "SHL"
    },
    "6322": {
      "offset": [
        1003,
        1053
      ],
      "op": "DUP2",
      "path": "9"
    },
    "6323": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "6328": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "DUP3",
      "path": "9"
    },
    "6329": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1003,
        1053
      ],
      "op": "ADD",
      "path": "9"
    },
    "6330": {
      "op": "MSTORE"
    },
    "6331": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6335": {
      "op": "DUP3"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "op": "PUSH11",
      "value": "0x139BDD08185B1B1BDDD959"
    },
    "6350": {
      "op": "PUSH1",
      "value": "0xAA"
    },
    "6352": {
      "op": "SHL"
    },
    "6353": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6355": {
      "op": "DUP3"
    },
    "6356": {
      "op": "ADD"
    },
    "6357": {
      "op": "MSTORE"
    },
    "6358": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6360": {
      "op": "ADD"
    },
    "6361": {
      "offset": [
        1003,
        1053
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xA4E"
    },
    "6364": {
      "op": "JUMP"
    },
    "6365": {
      "offset": [
        1003,
        1053
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "6366": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13840,
        13883
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 51,
      "value": "0x18E8"
    },
    "6369": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13853,
        13863
      ],
      "op": "CALLER",
      "path": "10"
    },
    "6370": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13865,
        13874
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6371": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13876,
        13882
      ],
      "op": "DUP7",
      "path": "10"
    },
    "6372": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13840,
        13852
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12AF"
    },
    "6375": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        13840,
        13883
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6376": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13840,
        13883
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6377": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13833,
        13883
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "6378": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        13638,
        13890
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "6379": {
      "op": "POP"
    },
    "6380": {
      "op": "POP"
    },
    "6381": {
      "op": "POP"
    },
    "6382": {
      "op": "POP"
    },
    "6383": {
      "op": "POP"
    },
    "6384": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        13638,
        13890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6385": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6386": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F9"
    },
    "6389": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "6392": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6393": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6394": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 52,
      "value": "0x1905"
    },
    "6397": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1196,
        1209
      ],
      "op": "CHAINID",
      "path": "11"
    },
    "6398": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1211,
        1217
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6399": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1227,
        1228
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6401": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1195
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x296B"
    },
    "6404": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "i",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6405": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1185,
        1230
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6406": {
      "fn": "RestrictedCalls.addCaller",
      "offset": [
        1121,
        1237
      ],
      "op": "POP",
      "path": "11"
    },
    "6407": {
      "fn": "RestrictedCalls.addCaller",
      "jump": "o",
      "offset": [
        1121,
        1237
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6408": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6409": {
      "offset": [
        8213,
        8214
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6411": {
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6412": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6413": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6414": {
      "offset": [
        8175,
        8183
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6416": {
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6418": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6419": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6421": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6422": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8175,
        8194
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6423": {
      "offset": [
        8175,
        8201
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6424": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12645,
        12654
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6425": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12645,
        12654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6432": {
      "op": "SHL"
    },
    "6433": {
      "op": "SUB"
    },
    "6434": {
      "offset": [
        8175,
        8201
      ],
      "op": "AND",
      "path": "10"
    },
    "6435": {
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x193E"
    },
    "6438": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6439": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6441": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6448": {
      "op": "SHL"
    },
    "6449": {
      "offset": [
        8154,
        8260
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6450": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6451": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6453": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "ADD",
      "path": "10"
    },
    "6454": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "6457": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6458": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35AC"
    },
    "6461": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6462": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        8154,
        8260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6463": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12670,
        12693
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6465": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6466": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6467": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6468": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12704
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "6470": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6472": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6473": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6474": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6475": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6477": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6478": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6479": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12696,
        12715
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6480": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12757
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 53
    },
    "6481": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6482": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12757
      ],
      "op": "ADD",
      "path": "10"
    },
    "6483": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12757
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6490": {
      "op": "SHL"
    },
    "6491": {
      "op": "SUB"
    },
    "6492": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12757
      ],
      "op": "AND",
      "path": "10"
    },
    "6493": {
      "branch": 157,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12734,
        12762
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6494": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19A5"
    },
    "6497": {
      "branch": 157,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6498": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6500": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6507": {
      "op": "SHL"
    },
    "6508": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6509": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6512": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6514": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6515": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "ADD",
      "path": "10"
    },
    "6516": {
      "op": "MSTORE"
    },
    "6517": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6521": {
      "op": "DUP3"
    },
    "6522": {
      "op": "ADD"
    },
    "6523": {
      "op": "MSTORE"
    },
    "6524": {
      "op": "PUSH25",
      "value": "0x2232B837B9B4BA1030B63932B0B23C903BB4BA34323930BBB7"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6552": {
      "op": "SHL"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6555": {
      "op": "DUP3"
    },
    "6556": {
      "op": "ADD"
    },
    "6557": {
      "op": "MSTORE"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6560": {
      "op": "ADD"
    },
    "6561": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "6564": {
      "op": "JUMP"
    },
    "6565": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12726,
        12792
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6566": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 54,
      "value": "0x4"
    },
    "6568": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6569": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "ADD",
      "path": "10"
    },
    "6570": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6571": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "6576": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12842,
        12860
      ],
      "op": "AND",
      "path": "10"
    },
    "6577": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12823,
        12838
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "6578": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12823,
        12860
      ],
      "op": "LT",
      "path": "10"
    },
    "6579": {
      "branch": 158,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12823,
        12860
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6580": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x19FF"
    },
    "6583": {
      "branch": 158,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6584": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6586": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6593": {
      "op": "SHL"
    },
    "6594": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6595": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6598": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6600": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6601": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "ADD",
      "path": "10"
    },
    "6602": {
      "op": "MSTORE"
    },
    "6603": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6607": {
      "op": "DUP3"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "MSTORE"
    },
    "6610": {
      "op": "PUSH32",
      "value": "0x52657175657374206E6F74206578706972656420796574000000000000000000"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6645": {
      "op": "DUP3"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6650": {
      "op": "ADD"
    },
    "6651": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "6654": {
      "op": "JUMP"
    },
    "6655": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12802,
        12909
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6656": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 55,
      "value": "0x4"
    },
    "6658": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6659": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "ADD",
      "path": "10"
    },
    "6660": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6663": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6665": {
      "op": "SHL"
    },
    "6666": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6667": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "DIV",
      "path": "10"
    },
    "6668": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "6673": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12947
      ],
      "op": "AND",
      "path": "10"
    },
    "6674": {
      "branch": 159,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12927,
        12952
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "6675": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A56"
    },
    "6678": {
      "branch": 159,
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "6679": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6681": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6682": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6688": {
      "op": "SHL"
    },
    "6689": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6690": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6693": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6695": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6696": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "ADD",
      "path": "10"
    },
    "6697": {
      "op": "MSTORE"
    },
    "6698": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "6700": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6702": {
      "op": "DUP3"
    },
    "6703": {
      "op": "ADD"
    },
    "6704": {
      "op": "MSTORE"
    },
    "6705": {
      "op": "PUSH21",
      "value": "0x41637469766520636C61696D732072756E6E696E67"
    },
    "6727": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "6729": {
      "op": "SHL"
    },
    "6730": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6732": {
      "op": "DUP3"
    },
    "6733": {
      "op": "ADD"
    },
    "6734": {
      "op": "MSTORE"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6737": {
      "op": "ADD"
    },
    "6738": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "6741": {
      "op": "JUMP"
    },
    "6742": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12919,
        12978
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6743": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13012
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 56,
      "value": "0x5"
    },
    "6745": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13012
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6746": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13012
      ],
      "op": "ADD",
      "path": "10"
    },
    "6747": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6748": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6755": {
      "op": "SHL"
    },
    "6756": {
      "op": "SUB"
    },
    "6757": {
      "op": "NOT"
    },
    "6758": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "AND",
      "path": "10"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6763": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6765": {
      "op": "SHL"
    },
    "6766": {
      "op": "SUB"
    },
    "6767": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "OR",
      "path": "10"
    },
    "6768": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6769": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12989,
        13041
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "6770": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13085,
        13099
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 57
    },
    "6771": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13085,
        13099
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6772": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6774": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6775": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6776": {
      "op": "DUP6"
    },
    "6777": {
      "op": "DUP2"
    },
    "6778": {
      "op": "MSTORE"
    },
    "6779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6785": {
      "op": "SHL"
    },
    "6786": {
      "op": "SUB"
    },
    "6787": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13085,
        13099
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6788": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13085,
        13099
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6789": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13085,
        13099
      ],
      "op": "AND",
      "path": "10"
    },
    "6790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6792": {
      "op": "DUP4"
    },
    "6793": {
      "op": "ADD"
    },
    "6794": {
      "op": "MSTORE"
    },
    "6795": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "6828": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6829": {
      "op": "ADD"
    },
    "6830": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6832": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "6833": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "DUP1",
      "path": "10"
    },
    "6834": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6835": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "SUB",
      "path": "10"
    },
    "6836": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6837": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13057,
        13100
      ],
      "op": "LOG1",
      "path": "10"
    },
    "6838": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6840": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6841": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "ADD",
      "path": "10"
    },
    "6842": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6843": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13202,
        13216
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 58
    },
    "6844": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13202,
        13216
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6845": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "6847": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "DUP4",
      "path": "10"
    },
    "6848": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "ADD",
      "path": "10"
    },
    "6849": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6850": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13244
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "6852": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13244
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6853": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13244
      ],
      "op": "ADD",
      "path": "10"
    },
    "6854": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13244
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6861": {
      "op": "SHL"
    },
    "6862": {
      "op": "SUB"
    },
    "6863": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6864": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6865": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "AND",
      "path": "10"
    },
    "6866": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13133,
        13159
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6867": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13292
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B1A"
    },
    "6870": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13292
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "6871": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13202,
        13216
      ],
      "op": "AND",
      "path": "10"
    },
    "6872": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13202,
        13216
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6879": {
      "op": "SHL"
    },
    "6880": {
      "op": "SUB"
    },
    "6881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6883": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6885": {
      "op": "SHL"
    },
    "6886": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6887": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "DIV",
      "path": "10"
    },
    "6888": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6889": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "AND",
      "path": "10"
    },
    "6890": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13263,
        13282
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6891": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AFF"
    },
    "6894": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13260
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "6895": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0x100000000"
    },
    "6901": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6902": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "DIV",
      "path": "10"
    },
    "6903": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6904": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6905": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "AND",
      "path": "10"
    },
    "6906": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13247,
        13260
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6907": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13260
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "6910": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        13230,
        13260
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6911": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13260
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6912": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B09"
    },
    "6915": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13282
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6916": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13282
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6917": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13282
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "6920": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        13230,
        13282
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6921": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13230,
        13282
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6928": {
      "op": "SHL"
    },
    "6929": {
      "op": "SUB"
    },
    "6930": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13188
      ],
      "op": "DUP5",
      "path": "10"
    },
    "6931": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13188
      ],
      "op": "AND",
      "path": "10"
    },
    "6932": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13188
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "6933": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13292
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6934": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13188
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A7D"
    },
    "6937": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "i",
      "offset": [
        13170,
        13292
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6938": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        13170,
        13292
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6939": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12660,
        13299
      ],
      "op": "POP",
      "path": "10"
    },
    "6940": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12660,
        13299
      ],
      "op": "POP",
      "path": "10"
    },
    "6941": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "POP",
      "path": "10"
    },
    "6942": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "offset": [
        12554,
        13299
      ],
      "op": "POP",
      "path": "10"
    },
    "6943": {
      "fn": "RequestManager.withdrawExpiredRequest",
      "jump": "o",
      "offset": [
        12554,
        13299
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6944": {
      "fn": "RequestManager.pause",
      "offset": [
        31786,
        31847
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6945": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B28"
    },
    "6948": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "6951": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6952": {
      "fn": "RequestManager.pause",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6953": {
      "fn": "RequestManager.pause",
      "offset": [
        31832,
        31840
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 59,
      "value": "0x12AD"
    },
    "6956": {
      "fn": "RequestManager.pause",
      "offset": [
        31832,
        31838
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AAD"
    },
    "6959": {
      "fn": "RequestManager.pause",
      "jump": "i",
      "offset": [
        31832,
        31840
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6960": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6965": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6967": {
      "op": "SHL"
    },
    "6968": {
      "op": "SUB"
    },
    "6969": {
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6970": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "AND",
      "path": "10"
    },
    "6971": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20723,
        20730
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "6973": {
      "offset": [
        8389,
        8404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6974": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6975": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6976": {
      "offset": [
        8389,
        8395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "6978": {
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "6980": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "6981": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "6983": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "6984": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "6985": {
      "offset": [
        8389,
        8412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "6987": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8412
      ],
      "op": "ADD",
      "path": "10"
    },
    "6988": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8412
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "6989": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20697,
        20704
      ],
      "op": "DUP3",
      "path": "10"
    },
    "6990": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20697,
        20704
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "6991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6997": {
      "op": "SHL"
    },
    "6998": {
      "op": "SUB"
    },
    "6999": {
      "offset": [
        8389,
        8412
      ],
      "op": "AND",
      "path": "10"
    },
    "7000": {
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B73"
    },
    "7003": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7004": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7006": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7013": {
      "op": "SHL"
    },
    "7014": {
      "offset": [
        8381,
        8448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7015": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7016": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7018": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "ADD",
      "path": "10"
    },
    "7019": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "7022": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7023": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36F7"
    },
    "7026": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7027": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7034": {
      "op": "SHL"
    },
    "7035": {
      "op": "SUB"
    },
    "7036": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7037": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "AND",
      "path": "10"
    },
    "7038": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20746,
        20765
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7040": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7041": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7042": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7043": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20774
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "7045": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7047": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7048": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7050": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7051": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20768,
        20783
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7052": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7054": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7055": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "ADD",
      "path": "10"
    },
    "7056": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7063": {
      "op": "SHL"
    },
    "7064": {
      "op": "SUB"
    },
    "7065": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7066": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7067": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "AND",
      "path": "10"
    },
    "7068": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20811,
        20824
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7069": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20877
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 60
    },
    "7070": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20877
      ],
      "op": "AND",
      "path": "10"
    },
    "7071": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20877
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7072": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20877
      ],
      "op": "EQ",
      "path": "10"
    },
    "7073": {
      "branch": 160,
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20877
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7074": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20921
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1BCD"
    },
    "7077": {
      "branch": 160,
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20921
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7085": {
      "op": "SHL"
    },
    "7086": {
      "op": "SUB"
    },
    "7087": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7088": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "AND",
      "path": "10"
    },
    "7089": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20920,
        20921
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7091": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7092": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7093": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7094": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20904
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7096": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20904
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7097": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20904
      ],
      "op": "ADD",
      "path": "10"
    },
    "7098": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7100": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7101": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7103": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7104": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7105": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7112": {
      "op": "SHL"
    },
    "7113": {
      "op": "SUB"
    },
    "7114": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20917
      ],
      "op": "AND",
      "path": "10"
    },
    "7115": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20921
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7116": {
      "branch": 161,
      "fn": "RequestManager.withdraw",
      "offset": [
        20881,
        20921
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7117": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20855,
        20921
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7118": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C29"
    },
    "7121": {
      "branch": 161,
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7122": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7124": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7131": {
      "op": "SHL"
    },
    "7132": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7133": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7136": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7138": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7139": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "ADD",
      "path": "10"
    },
    "7140": {
      "op": "MSTORE"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7145": {
      "op": "DUP3"
    },
    "7146": {
      "op": "ADD"
    },
    "7147": {
      "op": "MSTORE"
    },
    "7148": {
      "op": "PUSH32",
      "value": "0x4E6F7420616E20616374697665207061727469636970616E7420696E20746869"
    },
    "7181": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7183": {
      "op": "DUP3"
    },
    "7184": {
      "op": "ADD"
    },
    "7185": {
      "op": "MSTORE"
    },
    "7186": {
      "op": "PUSH7",
      "value": "0x7320636C61696D"
    },
    "7194": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "7196": {
      "op": "SHL"
    },
    "7197": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7199": {
      "op": "DUP3"
    },
    "7200": {
      "op": "ADD"
    },
    "7201": {
      "op": "MSTORE"
    },
    "7202": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7204": {
      "op": "ADD"
    },
    "7205": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "7208": {
      "op": "JUMP"
    },
    "7209": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20834,
        20986
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7210": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21016,
        21031
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7211": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21016,
        21031
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7212": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20996,
        21013
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7214": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7215": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7216": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7217": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21075
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7219": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7221": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7222": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7224": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7225": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7226": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21067,
        21086
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7227": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20996,
        21013
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7228": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21147,
        21215
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C45"
    },
    "7231": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21173,
        21184
      ],
      "op": "DUP11",
      "path": "10"
    },
    "7232": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21198,
        21205
      ],
      "op": "DUP11",
      "path": "10"
    },
    "7233": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21147,
        21159
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2AEA"
    },
    "7236": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        21147,
        21215
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7237": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21147,
        21215
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7244": {
      "op": "SHL"
    },
    "7245": {
      "op": "SUB"
    },
    "7246": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7247": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "AND",
      "path": "10"
    },
    "7248": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21272,
        21273
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7250": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7251": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7252": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7253": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21253
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7255": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21253
      ],
      "op": "DUP10",
      "path": "10"
    },
    "7256": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21253
      ],
      "op": "ADD",
      "path": "10"
    },
    "7257": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7259": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7260": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7262": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7263": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7264": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7265": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21097,
        21215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7266": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21097,
        21215
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7267": {
      "op": "POP"
    },
    "7268": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21097,
        21215
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7269": {
      "op": "POP"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7276": {
      "op": "SHL"
    },
    "7277": {
      "op": "SUB"
    },
    "7278": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21269
      ],
      "op": "AND",
      "path": "10"
    },
    "7279": {
      "branch": 162,
      "fn": "RequestManager.withdraw",
      "offset": [
        21230,
        21273
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7280": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21226,
        21380
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C9C"
    },
    "7283": {
      "branch": 162,
      "fn": "RequestManager.withdraw",
      "offset": [
        21226,
        21380
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7290": {
      "op": "SHL"
    },
    "7291": {
      "op": "SUB"
    },
    "7292": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 61
    },
    "7293": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "AND",
      "path": "10"
    },
    "7294": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21368,
        21369
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7296": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7297": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7298": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7299": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21349
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "7301": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21349
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7302": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21349
      ],
      "op": "ADD",
      "path": "10"
    },
    "7303": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7305": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7306": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7308": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7309": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21365
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7310": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21369
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7311": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7318": {
      "op": "SHL"
    },
    "7319": {
      "op": "SUB"
    },
    "7320": {
      "op": "NOT"
    },
    "7321": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21369
      ],
      "op": "AND",
      "path": "10"
    },
    "7322": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21369
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7323": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21326,
        21369
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7324": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21226,
        21380
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7325": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21416,
        21437
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7327": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21416,
        21437
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7328": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21416,
        21437
      ],
      "op": "ADD",
      "path": "10"
    },
    "7329": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21416,
        21437
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7330": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21390,
        21413
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7332": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21523,
        21543
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7333": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21523,
        21543
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7334": {
      "branch": 163,
      "fn": "RequestManager.withdraw",
      "offset": [
        21523,
        21543
      ],
      "op": "SUB",
      "path": "10"
    },
    "7335": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21519,
        21595
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CED"
    },
    "7338": {
      "branch": 163,
      "fn": "RequestManager.withdraw",
      "offset": [
        21519,
        21595
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7339": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21583,
        21584
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 62,
      "value": "0x1"
    },
    "7341": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21566
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7342": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7344": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21579
      ],
      "op": "ADD",
      "path": "10"
    },
    "7345": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21579
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1C"
    },
    "7347": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7348": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7349": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7350": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7351": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7352": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7353": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "7356": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "EXP",
      "path": "10"
    },
    "7357": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7358": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DIV",
      "path": "10"
    },
    "7359": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "7364": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "AND",
      "path": "10"
    },
    "7365": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1CCE"
    },
    "7368": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7369": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7370": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3722"
    },
    "7373": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        21559,
        21584
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7374": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7375": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7376": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "POP",
      "path": "10"
    },
    "7377": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "7380": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "EXP",
      "path": "10"
    },
    "7381": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7382": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7383": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7384": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "7389": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "MUL",
      "path": "10"
    },
    "7390": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "NOT",
      "path": "10"
    },
    "7391": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "AND",
      "path": "10"
    },
    "7392": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7393": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7394": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "7399": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "AND",
      "path": "10"
    },
    "7400": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "MUL",
      "path": "10"
    },
    "7401": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "OR",
      "path": "10"
    },
    "7402": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7403": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7404": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21559,
        21584
      ],
      "op": "POP",
      "path": "10"
    },
    "7405": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21519,
        21595
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7406": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 63,
      "value": "0x1CF7"
    },
    "7409": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21623,
        21636
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7410": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7411": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "7414": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        21604,
        21636
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7415": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7416": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21667
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 64,
      "value": "0x4"
    },
    "7418": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21667
      ],
      "op": "DUP9",
      "path": "10"
    },
    "7419": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21667
      ],
      "op": "ADD",
      "path": "10"
    },
    "7420": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21685
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7421": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21685
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7422": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21646,
        21685
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7423": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 65,
      "value": "0x3"
    },
    "7425": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "DUP9",
      "path": "10"
    },
    "7426": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "ADD",
      "path": "10"
    },
    "7427": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7428": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7430": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "DUP10",
      "path": "10"
    },
    "7431": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "ADD",
      "path": "10"
    },
    "7432": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7433": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7434": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21604,
        21636
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7435": {
      "op": "POP"
    },
    "7436": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D2C"
    },
    "7439": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21783
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7446": {
      "op": "SHL"
    },
    "7447": {
      "op": "SUB"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7452": {
      "op": "SHL"
    },
    "7453": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7454": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7455": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7456": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "DIV",
      "path": "10"
    },
    "7457": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7458": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "AND",
      "path": "10"
    },
    "7459": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21757,
        21783
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7460": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7461": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7462": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "DIV",
      "path": "10"
    },
    "7463": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21754
      ],
      "op": "AND",
      "path": "10"
    },
    "7464": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21783
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "7467": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        21736,
        21783
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7468": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21736,
        21783
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7475": {
      "op": "SHL"
    },
    "7476": {
      "op": "SUB"
    },
    "7477": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21717,
        21783
      ],
      "op": "AND",
      "path": "10"
    },
    "7478": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21717,
        21732
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7479": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21717,
        21783
      ],
      "op": "GT",
      "path": "10"
    },
    "7480": {
      "branch": 164,
      "fn": "RequestManager.withdraw",
      "offset": [
        21717,
        21783
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7481": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1D84"
    },
    "7484": {
      "branch": 164,
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7485": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7487": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7488": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7494": {
      "op": "SHL"
    },
    "7495": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7496": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7499": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7501": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7502": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "ADD",
      "path": "10"
    },
    "7503": {
      "op": "MSTORE"
    },
    "7504": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7508": {
      "op": "DUP3"
    },
    "7509": {
      "op": "ADD"
    },
    "7510": {
      "op": "MSTORE"
    },
    "7511": {
      "op": "PUSH32",
      "value": "0x416D6F756E7420746F20776974686472617720746F6F206C6172676500000000"
    },
    "7544": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7546": {
      "op": "DUP3"
    },
    "7547": {
      "op": "ADD"
    },
    "7548": {
      "op": "MSTORE"
    },
    "7549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7551": {
      "op": "ADD"
    },
    "7552": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "7555": {
      "op": "JUMP"
    },
    "7556": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21696,
        21837
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7557": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21849,
        21858
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7559": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21878
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7566": {
      "op": "SHL"
    },
    "7567": {
      "op": "SUB"
    },
    "7568": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21883
      ],
      "op": "AND",
      "path": "10"
    },
    "7569": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21891,
        21904
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7570": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7572": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7573": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7575": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7577": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7578": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7579": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP4",
      "path": "10"
    },
    "7580": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "SUB",
      "path": "10"
    },
    "7581": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7582": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7583": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7584": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "GAS",
      "path": "10"
    },
    "7585": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "CALL",
      "path": "10"
    },
    "7586": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "7587": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7588": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7589": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7590": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7591": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7592": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7594": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7595": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "EQ",
      "path": "10"
    },
    "7596": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DD1"
    },
    "7599": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7600": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7602": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7603": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7604": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7605": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "7607": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "NOT",
      "path": "10"
    },
    "7608": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "7610": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7611": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "ADD",
      "path": "10"
    },
    "7612": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "AND",
      "path": "10"
    },
    "7613": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7614": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "ADD",
      "path": "10"
    },
    "7615": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7617": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7618": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7619": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7620": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7621": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "7622": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7624": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7626": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7627": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "ADD",
      "path": "10"
    },
    "7628": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "7629": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DD6"
    },
    "7632": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7633": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7634": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "7636": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7637": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7638": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7639": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21864,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7640": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21848,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7641": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21848,
        21909
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7642": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21848,
        21909
      ],
      "op": "POP",
      "path": "10"
    },
    "7643": {
      "branch": 165,
      "fn": "RequestManager.withdraw",
      "offset": [
        21927,
        21931
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 66
    },
    "7644": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E1E"
    },
    "7647": {
      "branch": 165,
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7648": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7650": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7657": {
      "op": "SHL"
    },
    "7658": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7659": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7662": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7664": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7665": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "ADD",
      "path": "10"
    },
    "7666": {
      "op": "MSTORE"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7671": {
      "op": "DUP3"
    },
    "7672": {
      "op": "ADD"
    },
    "7673": {
      "op": "MSTORE"
    },
    "7674": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "7695": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7697": {
      "op": "SHL"
    },
    "7698": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7700": {
      "op": "DUP3"
    },
    "7701": {
      "op": "ADD"
    },
    "7702": {
      "op": "MSTORE"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7705": {
      "op": "ADD"
    },
    "7706": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "7709": {
      "op": "JUMP"
    },
    "7710": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21919,
        21956
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7711": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 67,
      "value": "0x40"
    },
    "7713": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7714": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "op": "SUB"
    },
    "7723": {
      "op": "DUP14"
    },
    "7724": {
      "op": "AND"
    },
    "7725": {
      "op": "DUP2"
    },
    "7726": {
      "op": "MSTORE"
    },
    "7727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7733": {
      "op": "SHL"
    },
    "7734": {
      "op": "SUB"
    },
    "7735": {
      "op": "DUP7"
    },
    "7736": {
      "op": "AND"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7739": {
      "op": "DUP3"
    },
    "7740": {
      "op": "ADD"
    },
    "7741": {
      "op": "MSTORE"
    },
    "7742": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22001,
        22010
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7743": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22001,
        22010
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7744": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xC9E74E0700D0C6488AF9C81D70FDD4158AEA77687137FF85499509C41A10612B"
    },
    "7777": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7778": {
      "op": "ADD"
    },
    "7779": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7781": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7782": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7783": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7784": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "SUB",
      "path": "10"
    },
    "7785": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7786": {
      "fn": "RequestManager.withdraw",
      "offset": [
        21972,
        22027
      ],
      "op": "LOG2",
      "path": "10"
    },
    "7787": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22065
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "7789": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22065
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7790": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22065
      ],
      "op": "ADD",
      "path": "10"
    },
    "7791": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22065
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7796": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7798": {
      "op": "SHL"
    },
    "7799": {
      "op": "SUB"
    },
    "7800": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22065
      ],
      "op": "AND",
      "path": "10"
    },
    "7801": {
      "branch": 166,
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22070
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7802": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7803": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7804": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E96"
    },
    "7807": {
      "branch": 166,
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7808": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "POP",
      "path": "10"
    },
    "7809": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22092,
        22099
      ],
      "op": "DUP7",
      "path": "10"
    },
    "7810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7816": {
      "op": "SHL"
    },
    "7817": {
      "op": "SUB"
    },
    "7818": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22074,
        22099
      ],
      "op": "AND",
      "path": "10"
    },
    "7819": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22074,
        22088
      ],
      "op": "DUP5",
      "path": "10"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7826": {
      "op": "SHL"
    },
    "7827": {
      "op": "SUB"
    },
    "7828": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22074,
        22099
      ],
      "op": "AND",
      "path": "10"
    },
    "7829": {
      "branch": 167,
      "fn": "RequestManager.withdraw",
      "offset": [
        22074,
        22099
      ],
      "op": "EQ",
      "path": "10"
    },
    "7830": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22042,
        22099
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7831": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22038,
        22159
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7832": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22038,
        22159
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EA5"
    },
    "7835": {
      "branch": 167,
      "fn": "RequestManager.withdraw",
      "offset": [
        22038,
        22159
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7836": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22115,
        22148
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 68,
      "value": "0x1EA5"
    },
    "7839": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22131,
        22138
      ],
      "op": "DUP6",
      "path": "10"
    },
    "7840": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22140,
        22147
      ],
      "op": "DUP13",
      "path": "10"
    },
    "7841": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22115,
        22130
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E4D"
    },
    "7844": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        22115,
        22148
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7845": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22115,
        22148
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7846": {
      "op": "POP"
    },
    "7847": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22176,
        22190
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 69
    },
    "7848": {
      "fn": "RequestManager.withdraw",
      "offset": [
        22176,
        22190
      ],
      "op": "SWAP11",
      "path": "10"
    },
    "7849": {
      "fn": "RequestManager.withdraw",
      "offset": [
        20606,
        22197
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "7850": {
      "op": "POP"
    },
    "7851": {
      "op": "POP"
    },
    "7852": {
      "op": "POP"
    },
    "7853": {
      "op": "POP"
    },
    "7854": {
      "op": "POP"
    },
    "7855": {
      "op": "POP"
    },
    "7856": {
      "op": "POP"
    },
    "7857": {
      "op": "POP"
    },
    "7858": {
      "op": "POP"
    },
    "7859": {
      "op": "POP"
    },
    "7860": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        20606,
        22197
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7861": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7868": {
      "op": "SHL"
    },
    "7869": {
      "op": "SUB"
    },
    "7870": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7871": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "AND",
      "path": "10"
    },
    "7872": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7212,
        7219
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "7874": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7875": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7876": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7877": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7263
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "7879": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "7881": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7882": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7884": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7885": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7257,
        7277
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "7886": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 70,
      "value": "0x1"
    },
    "7888": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7889": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "ADD",
      "path": "10"
    },
    "7890": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "7891": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7294,
        7357
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F0C"
    },
    "7894": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7294,
        7357
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7899": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7901": {
      "op": "SHL"
    },
    "7902": {
      "op": "SUB"
    },
    "7903": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7904": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "AND",
      "path": "10"
    },
    "7905": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7303,
        7317
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7906": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7347,
        7356
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0xF4240"
    },
    "7910": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7347,
        7356
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7911": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7320,
        7343
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1EFD"
    },
    "7914": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7320,
        7343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7917": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7919": {
      "op": "SHL"
    },
    "7920": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7329,
        7343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7921": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7329,
        7343
      ],
      "op": "DIV",
      "path": "10"
    },
    "7922": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7329,
        7343
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "7927": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7329,
        7343
      ],
      "op": "AND",
      "path": "10"
    },
    "7928": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7320,
        7326
      ],
      "op": "DUP8",
      "path": "10"
    },
    "7929": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7320,
        7343
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x364B"
    },
    "7932": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7320,
        7343
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7933": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7320,
        7343
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7934": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7319,
        7356
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F07"
    },
    "7937": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7319,
        7356
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "7938": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7319,
        7356
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "7939": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7319,
        7356
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x366A"
    },
    "7942": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7319,
        7356
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7943": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7319,
        7356
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7944": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7294,
        7302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F7C"
    },
    "7947": {
      "fn": "RequestManager.lpFee",
      "jump": "i",
      "offset": [
        7294,
        7357
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7948": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7294,
        7357
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7949": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7287,
        7357
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "7950": {
      "fn": "RequestManager.lpFee",
      "offset": [
        7114,
        7364
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "7951": {
      "op": "POP"
    },
    "7952": {
      "op": "POP"
    },
    "7953": {
      "op": "POP"
    },
    "7954": {
      "op": "POP"
    },
    "7955": {
      "fn": "RequestManager.lpFee",
      "jump": "o",
      "offset": [
        7114,
        7364
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7956": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27580,
        28303
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "7957": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F1C"
    },
    "7960": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "7963": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7964": {
      "fn": "RequestManager.updateToken",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7965": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27798,
        27805
      ],
      "op": "PUSH3",
      "path": "10",
      "statement": 71,
      "value": "0xF423F"
    },
    "7969": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27786,
        27794
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7970": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27786,
        27805
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "7975": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27786,
        27805
      ],
      "op": "AND",
      "path": "10"
    },
    "7976": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27786,
        27805
      ],
      "op": "GT",
      "path": "10"
    },
    "7977": {
      "branch": 168,
      "fn": "RequestManager.updateToken",
      "offset": [
        27786,
        27805
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "7978": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1F75"
    },
    "7981": {
      "branch": 168,
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "7982": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "7984": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "7985": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7991": {
      "op": "SHL"
    },
    "7992": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "DUP2",
      "path": "10"
    },
    "7993": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7996": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "7998": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "DUP3",
      "path": "10"
    },
    "7999": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "ADD",
      "path": "10"
    },
    "8000": {
      "op": "MSTORE"
    },
    "8001": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8003": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8005": {
      "op": "DUP3"
    },
    "8006": {
      "op": "ADD"
    },
    "8007": {
      "op": "MSTORE"
    },
    "8008": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D2050504D206F66203939393939392065786365656465640000"
    },
    "8041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8043": {
      "op": "DUP3"
    },
    "8044": {
      "op": "ADD"
    },
    "8045": {
      "op": "MSTORE"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8048": {
      "op": "ADD"
    },
    "8049": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8052": {
      "op": "JUMP"
    },
    "8053": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27778,
        27840
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8054": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27876,
        27883
      ],
      "op": "PUSH3",
      "path": "10",
      "statement": 72,
      "value": "0xF423F"
    },
    "8058": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27858,
        27872
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8059": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27858,
        27883
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "8064": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27858,
        27883
      ],
      "op": "AND",
      "path": "10"
    },
    "8065": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27858,
        27883
      ],
      "op": "GT",
      "path": "10"
    },
    "8066": {
      "branch": 169,
      "fn": "RequestManager.updateToken",
      "offset": [
        27858,
        27883
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8067": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FCE"
    },
    "8070": {
      "branch": 169,
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8071": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8073": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8080": {
      "op": "SHL"
    },
    "8081": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8082": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8085": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8087": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8088": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "ADD",
      "path": "10"
    },
    "8089": {
      "op": "MSTORE"
    },
    "8090": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8094": {
      "op": "DUP3"
    },
    "8095": {
      "op": "ADD"
    },
    "8096": {
      "op": "MSTORE"
    },
    "8097": {
      "op": "PUSH32",
      "value": "0x4D6178696D756D2050504D206F66203939393939392065786365656465640000"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8132": {
      "op": "DUP3"
    },
    "8133": {
      "op": "ADD"
    },
    "8134": {
      "op": "MSTORE"
    },
    "8135": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8137": {
      "op": "ADD"
    },
    "8138": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8141": {
      "op": "JUMP"
    },
    "8142": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27850,
        27918
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8149": {
      "op": "SHL"
    },
    "8150": {
      "op": "SUB"
    },
    "8151": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "DUP6",
      "path": "10"
    },
    "8152": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "AND",
      "path": "10"
    },
    "8153": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27929,
        27948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8155": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8156": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8157": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8158": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8160": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8162": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8163": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8164": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8165": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8167": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8168": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8169": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8170": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8171": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27981,
        28016
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 73
    },
    "8172": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27981,
        28016
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8173": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27981,
        28016
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8174": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28040
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 74,
      "value": "0x1"
    },
    "8176": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28040
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8177": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28040
      ],
      "op": "ADD",
      "path": "10"
    },
    "8178": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28051
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8179": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8184": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8186": {
      "op": "SHL"
    },
    "8187": {
      "op": "SUB"
    },
    "8188": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28051
      ],
      "op": "DUP10",
      "path": "10"
    },
    "8189": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28026,
        28051
      ],
      "op": "AND",
      "path": "10"
    },
    "8190": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "8207": {
      "op": "NOT"
    },
    "8208": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 75
    },
    "8209": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8210": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "AND",
      "path": "10"
    },
    "8211": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8212": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "OR",
      "path": "10"
    },
    "8213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8217": {
      "op": "SHL"
    },
    "8218": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFFFFFFFF"
    },
    "8223": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "DUP11",
      "path": "10"
    },
    "8224": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8225": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "AND",
      "path": "10"
    },
    "8226": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8227": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8228": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "MUL",
      "path": "10"
    },
    "8229": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8230": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8231": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8232": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28061,
        28086
      ],
      "op": "OR",
      "path": "10"
    },
    "8233": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8238": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8240": {
      "op": "SHL"
    },
    "8241": {
      "op": "NOT"
    },
    "8242": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "AND",
      "path": "10",
      "statement": 76
    },
    "8243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8245": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8247": {
      "op": "SHL"
    },
    "8248": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8249": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "DUP11",
      "path": "10"
    },
    "8250": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "AND",
      "path": "10"
    },
    "8251": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8252": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8253": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "MUL",
      "path": "10"
    },
    "8254": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "OR",
      "path": "10"
    },
    "8255": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8256": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "8257": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28096,
        28133
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "8258": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28149,
        28296
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 77
    },
    "8259": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28149,
        28296
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8260": {
      "op": "SWAP7"
    },
    "8261": {
      "op": "DUP8"
    },
    "8262": {
      "op": "MSTORE"
    },
    "8263": {
      "op": "SWAP4"
    },
    "8264": {
      "op": "DUP7"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "DUP11"
    },
    "8267": {
      "op": "SWAP1"
    },
    "8268": {
      "op": "MSTORE"
    },
    "8269": {
      "op": "SWAP4"
    },
    "8270": {
      "op": "DUP6"
    },
    "8271": {
      "op": "ADD"
    },
    "8272": {
      "op": "SWAP4"
    },
    "8273": {
      "op": "SWAP1"
    },
    "8274": {
      "op": "SWAP4"
    },
    "8275": {
      "op": "MSTORE"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8278": {
      "op": "DUP5"
    },
    "8279": {
      "op": "ADD"
    },
    "8280": {
      "op": "SWAP3"
    },
    "8281": {
      "op": "SWAP1"
    },
    "8282": {
      "op": "SWAP3"
    },
    "8283": {
      "op": "MSTORE"
    },
    "8284": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8286": {
      "op": "DUP4"
    },
    "8287": {
      "op": "ADD"
    },
    "8288": {
      "op": "MSTORE"
    },
    "8289": {
      "fn": "RequestManager.updateToken",
      "offset": [
        27951,
        27971
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8290": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28149,
        28296
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xB226EDFFD2920F3FE08961DC98B19D4815BBE75AF416F5E82CA7BF7BE50350C4"
    },
    "8323": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28149,
        28296
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8326": {
      "op": "ADD"
    },
    "8327": {
      "fn": "RequestManager.updateToken",
      "offset": [
        28149,
        28296
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC46"
    },
    "8330": {
      "op": "JUMP"
    },
    "8331": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8336": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8338": {
      "op": "SHL"
    },
    "8339": {
      "op": "SUB"
    },
    "8340": {
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8341": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "AND",
      "path": "10"
    },
    "8342": {
      "offset": [
        8424,
        8425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8344": {
      "offset": [
        8389,
        8404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8345": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8346": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8347": {
      "offset": [
        8389,
        8395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8349": {
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8351": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8352": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8354": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8355": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8404
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8356": {
      "offset": [
        8389,
        8412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8358": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8412
      ],
      "op": "ADD",
      "path": "10"
    },
    "8359": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8389,
        8412
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16897,
        16904
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8361": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16897,
        16904
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8368": {
      "op": "SHL"
    },
    "8369": {
      "op": "SUB"
    },
    "8370": {
      "offset": [
        8389,
        8412
      ],
      "op": "AND",
      "path": "10"
    },
    "8371": {
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20CE"
    },
    "8374": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8375": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8377": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8378": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8384": {
      "op": "SHL"
    },
    "8385": {
      "offset": [
        8381,
        8448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8386": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8387": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8389": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "ADD",
      "path": "10"
    },
    "8390": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8393": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8394": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36F7"
    },
    "8397": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8398": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8403": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8405": {
      "op": "SHL"
    },
    "8406": {
      "op": "SUB"
    },
    "8407": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8408": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "AND",
      "path": "10"
    },
    "8409": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16920,
        16939
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8411": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8412": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8413": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8414": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16948
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8416": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8418": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8419": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8421": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8422": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16942,
        16957
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8423": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16987,
        17002
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8424": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16987,
        17002
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8425": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17034,
        17051
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8427": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17034,
        17051
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8428": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17034,
        17051
      ],
      "op": "ADD",
      "path": "10"
    },
    "8429": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17034,
        17051
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8430": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17069,
        17084
      ],
      "op": "TIMESTAMP",
      "path": "10",
      "statement": 78
    },
    "8431": {
      "branch": 170,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17069,
        17098
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8432": {
      "op": "GT"
    },
    "8433": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x212C"
    },
    "8436": {
      "branch": 170,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8437": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8439": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8446": {
      "op": "SHL"
    },
    "8447": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8448": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8451": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8453": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8454": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "ADD",
      "path": "10"
    },
    "8455": {
      "op": "MSTORE"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8460": {
      "op": "DUP3"
    },
    "8461": {
      "op": "ADD"
    },
    "8462": {
      "op": "MSTORE"
    },
    "8463": {
      "op": "PUSH13",
      "value": "0x10DB185A5B48195E1C1A5C9959"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "8479": {
      "op": "SHL"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8482": {
      "op": "DUP3"
    },
    "8483": {
      "op": "ADD"
    },
    "8484": {
      "op": "MSTORE"
    },
    "8485": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8487": {
      "op": "ADD"
    },
    "8488": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8491": {
      "op": "JUMP"
    },
    "8492": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17061,
        17116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17185,
        17186
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 79,
      "value": "0x0"
    },
    "8495": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8496": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8497": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8498": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17155
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8500": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8502": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8503": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8504": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8505": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8507": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8508": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8509": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17166
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8510": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17173
      ],
      "op": "ADD",
      "path": "10"
    },
    "8511": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17173
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8516": {
      "op": "SHL"
    },
    "8517": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17173
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8518": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17173
      ],
      "op": "DIV",
      "path": "10"
    },
    "8519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "op": "SUB"
    },
    "8527": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17173
      ],
      "op": "AND",
      "path": "10"
    },
    "8528": {
      "branch": 171,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17147,
        17187
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8529": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x219C"
    },
    "8532": {
      "branch": 171,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8533": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8542": {
      "op": "SHL"
    },
    "8543": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8544": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8547": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8549": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8550": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "ADD",
      "path": "10"
    },
    "8551": {
      "op": "MSTORE"
    },
    "8552": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8556": {
      "op": "DUP3"
    },
    "8557": {
      "op": "ADD"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH32",
      "value": "0x5265717565737420616C7265616479207265736F6C7665640000000000000000"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8594": {
      "op": "DUP3"
    },
    "8595": {
      "op": "ADD"
    },
    "8596": {
      "op": "MSTORE"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8599": {
      "op": "ADD"
    },
    "8600": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8603": {
      "op": "JUMP"
    },
    "8604": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17126,
        17237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8605": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 80,
      "value": "0x0"
    },
    "8607": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8608": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8609": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8610": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17277
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8612": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8614": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8615": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8616": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8617": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8619": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8620": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8621": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17288
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8622": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17304,
        17316
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "8624": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17304,
        17316
      ],
      "op": "DUP8",
      "path": "10"
    },
    "8625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17304,
        17316
      ],
      "op": "ADD",
      "path": "10"
    },
    "8626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17304,
        17316
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8627": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8628": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8629": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17303
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "8631": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17303
      ],
      "op": "ADD",
      "path": "10"
    },
    "8632": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8633": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8634": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8635": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8636": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8637": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8638": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "8640": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17269,
        17317
      ],
      "op": "AND",
      "path": "10"
    },
    "8641": {
      "branch": 172,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17268,
        17317
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8642": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2208"
    },
    "8645": {
      "branch": 172,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8646": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8648": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8655": {
      "op": "SHL"
    },
    "8656": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8657": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8660": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8662": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8663": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "ADD",
      "path": "10"
    },
    "8664": {
      "op": "MSTORE"
    },
    "8665": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "8667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8669": {
      "op": "DUP3"
    },
    "8670": {
      "op": "ADD"
    },
    "8671": {
      "op": "MSTORE"
    },
    "8672": {
      "op": "PUSH24",
      "value": "0x119A5B1B08185B1C9958591E481A5B9D985B1A59185D1959"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "8699": {
      "op": "SHL"
    },
    "8700": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8702": {
      "op": "DUP3"
    },
    "8703": {
      "op": "ADD"
    },
    "8704": {
      "op": "MSTORE"
    },
    "8705": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8707": {
      "op": "ADD"
    },
    "8708": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8711": {
      "op": "JUMP"
    },
    "8712": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17247,
        17367
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8713": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8715": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8716": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "ADD",
      "path": "10"
    },
    "8717": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8718": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "8720": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "DUP5",
      "path": "10"
    },
    "8721": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "ADD",
      "path": "10"
    },
    "8722": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8723": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17404,
        17428
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x0"
    },
    "8756": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17404,
        17428
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8763": {
      "op": "SHL"
    },
    "8764": {
      "op": "SUB"
    },
    "8765": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8766": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "AND",
      "path": "10"
    },
    "8767": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17456,
        17469
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8774": {
      "op": "SHL"
    },
    "8775": {
      "op": "SUB"
    },
    "8776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8780": {
      "op": "SHL"
    },
    "8781": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8782": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8783": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8784": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "DIV",
      "path": "10"
    },
    "8785": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8786": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "AND",
      "path": "10"
    },
    "8787": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17501,
        17519
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "8788": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8789": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8790": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "DIV",
      "path": "10"
    },
    "8791": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17559,
        17585
      ],
      "op": "AND",
      "path": "10"
    },
    "8792": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17600,
        17635
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8793": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17600,
        17635
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8794": {
      "branch": 173,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17600,
        17635
      ],
      "op": "GT",
      "path": "10"
    },
    "8795": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8796": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2362"
    },
    "8799": {
      "branch": 173,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8800": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17655,
        17675
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8807": {
      "op": "SHL"
    },
    "8808": {
      "op": "SUB"
    },
    "8809": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17655,
        17680
      ],
      "op": "AND",
      "path": "10"
    },
    "8810": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17679,
        17680
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "8812": {
      "branch": 174,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17655,
        17680
      ],
      "op": "SUB",
      "path": "10"
    },
    "8813": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17651,
        17822
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x229C"
    },
    "8816": {
      "branch": 174,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17651,
        17822
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8817": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 81,
      "value": "0x0"
    },
    "8819": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "DUP7",
      "path": "10"
    },
    "8820": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8821": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8822": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17764
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "8824": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "8826": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8827": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8828": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8831": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "DUP1",
      "path": "10"
    },
    "8832": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8833": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17775
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8834": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17789
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "8836": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17789
      ],
      "op": "ADD",
      "path": "10"
    },
    "8837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17756,
        17789
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8839": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8840": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17734
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8843": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "8844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8846": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "8847": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17719,
        17807
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "8848": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2299"
    },
    "8851": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8852": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "DUP6",
      "path": "10"
    },
    "8853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "8856": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17700,
        17807
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8857": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8858": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "8859": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17700,
        17807
      ],
      "op": "POP",
      "path": "10"
    },
    "8860": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17651,
        17822
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8867": {
      "op": "SHL"
    },
    "8868": {
      "op": "SUB"
    },
    "8869": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17843,
        17864
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 82
    },
    "8870": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17843,
        17864
      ],
      "op": "AND",
      "path": "10"
    },
    "8871": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17843,
        17853
      ],
      "op": "CALLER",
      "path": "10"
    },
    "8872": {
      "branch": 175,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17843,
        17864
      ],
      "op": "SUB",
      "path": "10"
    },
    "8873": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22F4"
    },
    "8876": {
      "branch": 175,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8877": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8879": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8880": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8886": {
      "op": "SHL"
    },
    "8887": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8888": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8889": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8891": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "8893": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "DUP3",
      "path": "10"
    },
    "8894": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "ADD",
      "path": "10"
    },
    "8895": {
      "op": "MSTORE"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8898": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8900": {
      "op": "DUP3"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "MSTORE"
    },
    "8903": {
      "op": "PUSH32",
      "value": "0x43616E6E6F74206368616C6C656E6765206F776E20636C61696D000000000000"
    },
    "8936": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8938": {
      "op": "DUP3"
    },
    "8939": {
      "op": "ADD"
    },
    "8940": {
      "op": "MSTORE"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8943": {
      "op": "ADD"
    },
    "8944": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "8947": {
      "op": "JUMP"
    },
    "8948": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17835,
        17895
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8949": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17982
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 83,
      "value": "0x22FE"
    },
    "8952": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17962,
        17982
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8953": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17959
      ],
      "op": "DUP4",
      "path": "10"
    },
    "8954": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3747"
    },
    "8957": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17947,
        17982
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8958": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17982
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8959": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17986
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2309"
    },
    "8962": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17986
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "8963": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17985,
        17986
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "8965": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17986
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "8968": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        17947,
        17986
      ],
      "op": "JUMP",
      "path": "10"
    },
    "8969": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17947,
        17986
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "8970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8976": {
      "op": "SHL"
    },
    "8977": {
      "op": "SUB"
    },
    "8978": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17934,
        17986
      ],
      "op": "AND",
      "path": "10"
    },
    "8979": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17934,
        17943
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "8980": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17934,
        17986
      ],
      "op": "LT",
      "path": "10"
    },
    "8981": {
      "branch": 176,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17934,
        17986
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8982": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x235D"
    },
    "8985": {
      "branch": 176,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "8986": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "8988": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "8989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8995": {
      "op": "SHL"
    },
    "8996": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "DUP2",
      "path": "10"
    },
    "8997": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9000": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9002": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9003": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "ADD",
      "path": "10"
    },
    "9004": {
      "op": "MSTORE"
    },
    "9005": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9009": {
      "op": "DUP3"
    },
    "9010": {
      "op": "ADD"
    },
    "9011": {
      "op": "MSTORE"
    },
    "9012": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959"
    },
    "9038": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9040": {
      "op": "SHL"
    },
    "9041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9043": {
      "op": "DUP3"
    },
    "9044": {
      "op": "ADD"
    },
    "9045": {
      "op": "MSTORE"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9048": {
      "op": "ADD"
    },
    "9049": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "9052": {
      "op": "JUMP"
    },
    "9053": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17909,
        18045
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9054": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x243C"
    },
    "9057": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9058": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        17596,
        18302
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9059": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18084,
        18094
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 84
    },
    "9060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9066": {
      "op": "SHL"
    },
    "9067": {
      "op": "SUB"
    },
    "9068": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18084,
        18105
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9069": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18084,
        18105
      ],
      "op": "AND",
      "path": "10"
    },
    "9070": {
      "branch": 177,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18084,
        18105
      ],
      "op": "EQ",
      "path": "10"
    },
    "9071": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23B3"
    },
    "9074": {
      "branch": 177,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9075": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9077": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9084": {
      "op": "SHL"
    },
    "9085": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9086": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9089": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9091": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9092": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "ADD",
      "path": "10"
    },
    "9093": {
      "op": "MSTORE"
    },
    "9094": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9098": {
      "op": "DUP3"
    },
    "9099": {
      "op": "ADD"
    },
    "9100": {
      "op": "MSTORE"
    },
    "9101": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "9126": {
      "op": "SHL"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9129": {
      "op": "DUP3"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "op": "MSTORE"
    },
    "9132": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9134": {
      "op": "ADD"
    },
    "9135": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "9138": {
      "op": "JUMP"
    },
    "9139": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18076,
        18132
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9140": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18222,
        18232
      ],
      "op": "PUSH32",
      "path": "10",
      "statement": 85,
      "value": "0x0"
    },
    "9173": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18219
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23DE"
    },
    "9176": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18207,
        18219
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9177": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18204
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9178": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18219
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3747"
    },
    "9181": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18184,
        18219
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9182": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18219
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9183": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18232
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23E8"
    },
    "9186": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18232
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9187": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18232
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9188": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18232
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "9191": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18184,
        18232
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9192": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18184,
        18232
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9197": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9199": {
      "op": "SHL"
    },
    "9200": {
      "op": "SUB"
    },
    "9201": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18171,
        18232
      ],
      "op": "AND",
      "path": "10"
    },
    "9202": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18171,
        18180
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "9203": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18171,
        18232
      ],
      "op": "LT",
      "path": "10"
    },
    "9204": {
      "branch": 178,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18171,
        18232
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9205": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x243C"
    },
    "9208": {
      "branch": 178,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9209": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9211": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9212": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9218": {
      "op": "SHL"
    },
    "9219": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9220": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9223": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9226": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "ADD",
      "path": "10"
    },
    "9227": {
      "op": "MSTORE"
    },
    "9228": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9230": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9232": {
      "op": "DUP3"
    },
    "9233": {
      "op": "ADD"
    },
    "9234": {
      "op": "MSTORE"
    },
    "9235": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA081CDD185AD9481C1C9BDD9A591959"
    },
    "9261": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "9263": {
      "op": "SHL"
    },
    "9264": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9266": {
      "op": "DUP3"
    },
    "9267": {
      "op": "ADD"
    },
    "9268": {
      "op": "MSTORE"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9271": {
      "op": "ADD"
    },
    "9272": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "9275": {
      "op": "JUMP"
    },
    "9276": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18146,
        18291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9283": {
      "op": "SHL"
    },
    "9284": {
      "op": "SUB"
    },
    "9285": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18316,
        18337
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9286": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18316,
        18337
      ],
      "op": "AND",
      "path": "10"
    },
    "9287": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18316,
        18326
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9288": {
      "branch": 179,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18316,
        18337
      ],
      "op": "SUB",
      "path": "10"
    },
    "9289": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x247F"
    },
    "9292": {
      "branch": 179,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9293": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18353,
        18386
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 86,
      "value": "0x2456"
    },
    "9296": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18376,
        18385
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "9297": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18353,
        18386
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9298": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18353,
        18386
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "9301": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18353,
        18386
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9302": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18353,
        18386
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9303": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18418
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 87,
      "value": "0x1"
    },
    "9305": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18418
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9306": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18418
      ],
      "op": "ADD",
      "path": "10"
    },
    "9307": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9308": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9315": {
      "op": "SHL"
    },
    "9316": {
      "op": "SUB"
    },
    "9317": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "AND",
      "path": "10"
    },
    "9318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9322": {
      "op": "SHL"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9329": {
      "op": "SHL"
    },
    "9330": {
      "op": "SUB"
    },
    "9331": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9332": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "AND",
      "path": "10"
    },
    "9333": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "MUL",
      "path": "10"
    },
    "9334": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "OR",
      "path": "10"
    },
    "9335": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9336": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9337": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18400,
        18433
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9338": {
      "op": "POP"
    },
    "9339": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2514"
    },
    "9342": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9343": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9344": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18484
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 88,
      "value": "0x3"
    },
    "9346": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18484
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9347": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18484
      ],
      "op": "ADD",
      "path": "10"
    },
    "9348": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9349": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9356": {
      "op": "SHL"
    },
    "9357": {
      "op": "SUB"
    },
    "9358": {
      "op": "NOT"
    },
    "9359": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "AND",
      "path": "10"
    },
    "9360": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18487,
        18497
      ],
      "op": "CALLER",
      "path": "10"
    },
    "9361": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9362": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9363": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "OR",
      "path": "10"
    },
    "9364": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9365": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9366": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18497
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9367": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18484
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9369": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 89
    },
    "9370": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9371": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9372": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "9374": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18534
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9375": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18534
      ],
      "op": "ADD",
      "path": "10"
    },
    "9376": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9378": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9379": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9381": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9382": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18546
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9383": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9384": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9385": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18557,
        18566
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "9386": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18557,
        18566
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9387": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18464,
        18484
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9388": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24BF"
    },
    "9391": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9392": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18557,
        18566
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9393": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18557,
        18566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9398": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9400": {
      "op": "SHL"
    },
    "9401": {
      "op": "SUB"
    },
    "9402": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "AND",
      "path": "10"
    },
    "9403": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "9406": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18511,
        18567
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9407": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9408": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9409": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "POP",
      "path": "10"
    },
    "9410": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "9413": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "EXP",
      "path": "10"
    },
    "9414": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9415": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9416": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9421": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9423": {
      "op": "SHL"
    },
    "9424": {
      "op": "SUB"
    },
    "9425": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "MUL",
      "path": "10"
    },
    "9426": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "NOT",
      "path": "10"
    },
    "9427": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "AND",
      "path": "10"
    },
    "9428": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9429": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9434": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9436": {
      "op": "SHL"
    },
    "9437": {
      "op": "SUB"
    },
    "9438": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "AND",
      "path": "10"
    },
    "9439": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "MUL",
      "path": "10"
    },
    "9440": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "OR",
      "path": "10"
    },
    "9441": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9442": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9443": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18511,
        18567
      ],
      "op": "POP",
      "path": "10"
    },
    "9444": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18612,
        18621
      ],
      "op": "CALLVALUE",
      "path": "10",
      "statement": 90
    },
    "9445": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9446": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x24EF"
    },
    "9449": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9450": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9451": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "9454": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18581,
        18622
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9455": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18581,
        18622
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9456": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18662
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 91,
      "value": "0x3"
    },
    "9458": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18662
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9459": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18662
      ],
      "op": "ADD",
      "path": "10"
    },
    "9460": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9461": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9468": {
      "op": "SHL"
    },
    "9469": {
      "op": "SUB"
    },
    "9470": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "AND",
      "path": "10"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9475": {
      "op": "SHL"
    },
    "9476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9482": {
      "op": "SHL"
    },
    "9483": {
      "op": "SUB"
    },
    "9484": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9485": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "AND",
      "path": "10"
    },
    "9486": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "MUL",
      "path": "10"
    },
    "9487": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "OR",
      "path": "10"
    },
    "9488": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9489": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9490": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18636,
        18685
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9491": {
      "op": "POP"
    },
    "9492": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18312,
        18696
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9493": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18746,
        18757
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9494": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18710,
        18743
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x251F"
    },
    "9497": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18728,
        18743
      ],
      "op": "DUP6",
      "path": "10"
    },
    "9498": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18710,
        18725
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "9499": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18710,
        18743
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "9502": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18710,
        18743
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9503": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18710,
        18743
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9504": {
      "branch": 180,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18710,
        18757
      ],
      "op": "GT",
      "path": "10"
    },
    "9505": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18706,
        18876
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "9506": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18706,
        18876
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2539"
    },
    "9509": {
      "branch": 180,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18706,
        18876
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9510": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18787,
        18820
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 92,
      "value": "0x252F"
    },
    "9513": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18805,
        18820
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9514": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18787,
        18802
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "9515": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18787,
        18820
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "9518": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18787,
        18820
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9519": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18787,
        18820
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9520": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18851
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 93,
      "value": "0x5"
    },
    "9522": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18851
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9523": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18851
      ],
      "op": "ADD",
      "path": "10"
    },
    "9524": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18865
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9525": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18865
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9526": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18834,
        18865
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9527": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18773,
        18820
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "9528": {
      "op": "POP"
    },
    "9529": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18706,
        18876
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9530": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 94,
      "value": "0x3"
    },
    "9532": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9533": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "ADD",
      "path": "10"
    },
    "9534": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9535": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19098,
        19110
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9537": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19098,
        19110
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9538": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19098,
        19110
      ],
      "op": "ADD",
      "path": "10"
    },
    "9539": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19098,
        19110
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9540": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9542": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9543": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18914,
        18923
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9544": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18914,
        18923
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9545": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF0289B2C09D4E59035C29451CFBB75C07A50FDCC68DB2ECCEF5A84DB99285E44"
    },
    "9578": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9579": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2589"
    },
    "9582": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9583": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18937,
        18944
      ],
      "op": "DUP15",
      "path": "10"
    },
    "9584": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18937,
        18944
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9585": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18958,
        18965
      ],
      "op": "DUP10",
      "path": "10"
    },
    "9586": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18958,
        18965
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9587": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18979,
        18991
      ],
      "op": "DUP10",
      "path": "10"
    },
    "9588": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18979,
        18991
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9595": {
      "op": "SHL"
    },
    "9596": {
      "op": "SUB"
    },
    "9597": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9598": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9599": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "AND",
      "path": "10"
    },
    "9600": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19005,
        19025
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9601": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19039,
        19059
      ],
      "op": "DUP10",
      "path": "10"
    },
    "9602": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19039,
        19059
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9603": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19073,
        19084
      ],
      "op": "DUP15",
      "path": "10"
    },
    "9604": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        19073,
        19084
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9605": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36AB"
    },
    "9608": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        18891,
        19120
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9609": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9610": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9612": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9613": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9614": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9615": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "SUB",
      "path": "10"
    },
    "9616": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9617": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        18891,
        19120
      ],
      "op": "LOG2",
      "path": "10"
    },
    "9618": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9619": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9620": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9621": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9622": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9623": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9624": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16910,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9625": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9626": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        16803,
        19127
      ],
      "op": "POP",
      "path": "10"
    },
    "9627": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        16803,
        19127
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9628": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27186,
        27574
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9629": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A4"
    },
    "9632": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "9635": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9636": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9643": {
      "op": "SHL"
    },
    "9644": {
      "op": "SUB"
    },
    "9645": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9646": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "AND",
      "path": "10"
    },
    "9647": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27306,
        27320
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9649": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9650": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9651": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9652": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27329
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9654": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9656": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9657": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9659": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9660": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27343
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9661": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9663": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "ADD",
      "path": "10"
    },
    "9664": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9669": {
      "op": "SHL"
    },
    "9670": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9671": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "DIV",
      "path": "10"
    },
    "9672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9676": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9678": {
      "op": "SHL"
    },
    "9679": {
      "op": "SUB"
    },
    "9680": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "AND",
      "path": "10"
    },
    "9681": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27323,
        27365
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9682": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 95,
      "value": "0x2614"
    },
    "9685": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9686": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9688": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9695": {
      "op": "SHL"
    },
    "9696": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9697": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9700": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9702": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9703": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "ADD",
      "path": "10"
    },
    "9704": {
      "op": "MSTORE"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9707": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9709": {
      "op": "DUP3"
    },
    "9710": {
      "op": "ADD"
    },
    "9711": {
      "op": "MSTORE"
    },
    "9712": {
      "op": "PUSH20",
      "value": "0x50726F746F636F6C20666565206973207A65726F"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9735": {
      "op": "SHL"
    },
    "9736": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9738": {
      "op": "DUP3"
    },
    "9739": {
      "op": "ADD"
    },
    "9740": {
      "op": "MSTORE"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9743": {
      "op": "ADD"
    },
    "9744": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "9747": {
      "op": "JUMP"
    },
    "9748": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27375,
        27418
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9755": {
      "op": "SHL"
    },
    "9756": {
      "op": "SUB"
    },
    "9757": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 96
    },
    "9758": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9759": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "AND",
      "path": "10"
    },
    "9760": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27473,
        27474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9762": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9763": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9764": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9765": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27434
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "9767": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9769": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9770": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9772": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9773": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27448
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9774": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9776": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27470
      ],
      "op": "ADD",
      "path": "10"
    },
    "9777": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9778": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "9779": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9780": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9781": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "AND",
      "path": "10"
    },
    "9782": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9783": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9784": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27428,
        27474
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9785": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27435,
        27447
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9786": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27435,
        27447
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9787": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27530,
        27567
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 97,
      "value": "0x1B1A"
    },
    "9790": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27530,
        27567
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9791": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27549,
        27558
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9792": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27560,
        27566
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9793": {
      "fn": "RequestManager.withdrawProtocolFees",
      "offset": [
        27530,
        27548
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A7D"
    },
    "9796": {
      "fn": "RequestManager.withdrawProtocolFees",
      "jump": "i",
      "offset": [
        27530,
        27567
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9797": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9798": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x264D"
    },
    "9801": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "9804": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9805": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9806": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28715,
        28716
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 98,
      "value": "0x0"
    },
    "9808": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28698,
        28712
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9809": {
      "branch": 181,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28698,
        28716
      ],
      "op": "GT",
      "path": "10"
    },
    "9810": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x26AC"
    },
    "9813": {
      "branch": 181,
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9814": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9816": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9823": {
      "op": "SHL"
    },
    "9824": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9825": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9828": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9830": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9831": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "ADD",
      "path": "10"
    },
    "9832": {
      "op": "MSTORE"
    },
    "9833": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9837": {
      "op": "DUP3"
    },
    "9838": {
      "op": "ADD"
    },
    "9839": {
      "op": "MSTORE"
    },
    "9840": {
      "op": "PUSH32",
      "value": "0x46696E616C69747920706572696F64206D757374206265206772656174657220"
    },
    "9873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9875": {
      "op": "DUP3"
    },
    "9876": {
      "op": "ADD"
    },
    "9877": {
      "op": "MSTORE"
    },
    "9878": {
      "op": "PUSH6",
      "value": "0x7468616E203"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0xD4"
    },
    "9887": {
      "op": "SHL"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9890": {
      "op": "DUP3"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "MSTORE"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9895": {
      "op": "ADD"
    },
    "9896": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "9899": {
      "op": "JUMP"
    },
    "9900": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28690,
        28759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9901": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 99,
      "value": "0x0"
    },
    "9903": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9904": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9905": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9906": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28784
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "9908": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9910": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9911": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9912": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9913": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9915": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9916": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9917": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9918": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28799
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "9919": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28816
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9920": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9921": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28769,
        28816
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "9922": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 100
    },
    "9923": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9924": {
      "op": "DUP5"
    },
    "9925": {
      "op": "DUP2"
    },
    "9926": {
      "op": "MSTORE"
    },
    "9927": {
      "op": "SWAP1"
    },
    "9928": {
      "op": "DUP2"
    },
    "9929": {
      "op": "ADD"
    },
    "9930": {
      "op": "DUP4"
    },
    "9931": {
      "op": "SWAP1"
    },
    "9932": {
      "op": "MSTORE"
    },
    "9933": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xABA57B48B9F1DFD5747A52ED348A6AB6AA7BAFB0575363A5CB7B62659F727B65"
    },
    "9966": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "9970": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "9971": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9972": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9973": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "SUB",
      "path": "10"
    },
    "9974": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9975": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28832,
        28884
      ],
      "op": "LOG1",
      "path": "10"
    },
    "9976": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "POP",
      "path": "10"
    },
    "9977": {
      "fn": "RequestManager.setFinalityPeriod",
      "offset": [
        28567,
        28891
      ],
      "op": "POP",
      "path": "10"
    },
    "9978": {
      "fn": "RequestManager.setFinalityPeriod",
      "jump": "o",
      "offset": [
        28567,
        28891
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9979": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19674,
        19838
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9986": {
      "op": "SHL"
    },
    "9987": {
      "op": "SUB"
    },
    "9988": {
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9989": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "AND",
      "path": "10"
    },
    "9990": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19772,
        19779
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9992": {
      "offset": [
        8389,
        8404
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9993": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9994": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "9995": {
      "offset": [
        8389,
        8395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "9997": {
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "9999": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10000": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10002": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10003": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8404
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "10004": {
      "offset": [
        8389,
        8412
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "10006": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8412
      ],
      "op": "ADD",
      "path": "10"
    },
    "10007": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8389,
        8412
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "10008": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19746,
        19753
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10009": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19746,
        19753
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10016": {
      "op": "SHL"
    },
    "10017": {
      "op": "SUB"
    },
    "10018": {
      "offset": [
        8389,
        8412
      ],
      "op": "AND",
      "path": "10"
    },
    "10019": {
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x273E"
    },
    "10022": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "10023": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "10025": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "10026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10032": {
      "op": "SHL"
    },
    "10033": {
      "offset": [
        8381,
        8448
      ],
      "op": "DUP2",
      "path": "10"
    },
    "10034": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "10035": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "10037": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "ADD",
      "path": "10"
    },
    "10038": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "10041": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "10042": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x36F7"
    },
    "10045": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10046": {
      "fn": "RequestManager.withdraw",
      "offset": [
        8381,
        8448
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10047": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19802,
        19831
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 101,
      "value": "0xCFD"
    },
    "10050": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19811,
        19821
      ],
      "op": "CALLER",
      "path": "10"
    },
    "10051": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19823,
        19830
      ],
      "op": "DUP5",
      "path": "10"
    },
    "10052": {
      "fn": "RequestManager.withdraw",
      "offset": [
        19802,
        19810
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B30"
    },
    "10055": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        19802,
        19831
      ],
      "op": "JUMP",
      "path": "10"
    },
    "10056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10057": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2750"
    },
    "10060": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x286F"
    },
    "10063": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10071": {
      "op": "SHL"
    },
    "10072": {
      "op": "SUB"
    },
    "10073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 102
    },
    "10074": {
      "branch": 197,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "10075": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B5"
    },
    "10078": {
      "branch": 197,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10081": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10082": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10090": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10091": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10096": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "10097": {
      "op": "MSTORE"
    },
    "10098": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10100": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10102": {
      "op": "DUP3"
    },
    "10103": {
      "op": "ADD"
    },
    "10104": {
      "op": "MSTORE"
    },
    "10105": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "10138": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10140": {
      "op": "DUP3"
    },
    "10141": {
      "op": "ADD"
    },
    "10142": {
      "op": "MSTORE"
    },
    "10143": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10152": {
      "op": "SHL"
    },
    "10153": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10155": {
      "op": "DUP3"
    },
    "10156": {
      "op": "ADD"
    },
    "10157": {
      "op": "MSTORE"
    },
    "10158": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10160": {
      "op": "ADD"
    },
    "10161": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4E"
    },
    "10164": {
      "op": "JUMP"
    },
    "10165": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10166": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 103,
      "value": "0x1905"
    },
    "10169": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10170": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x291B"
    },
    "10173": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10174": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1767,
        1873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10175": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "10177": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10178": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "10180": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "10181": {
      "branch": 199,
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1836,
        1845
      ],
      "op": "ISZERO",
      "path": "1",
      "statement": 104
    },
    "10182": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12AD"
    },
    "10185": {
      "branch": 199,
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "10186": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10188": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10189": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10193": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10195": {
      "op": "SHL"
    },
    "10196": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "DUP2",
      "path": "1"
    },
    "10197": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10200": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "10202": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "DUP3",
      "path": "1"
    },
    "10203": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "ADD",
      "path": "1"
    },
    "10204": {
      "op": "MSTORE"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "10207": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10209": {
      "op": "DUP3"
    },
    "10210": {
      "op": "ADD"
    },
    "10211": {
      "op": "MSTORE"
    },
    "10212": {
      "op": "PUSH16",
      "value": "0x14185D5CD8589B194E881C185D5CD959"
    },
    "10229": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "10231": {
      "op": "SHL"
    },
    "10232": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10234": {
      "op": "DUP3"
    },
    "10235": {
      "op": "ADD"
    },
    "10236": {
      "op": "MSTORE"
    },
    "10237": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "fn": "Pausable._requireNotPaused",
      "offset": [
        1828,
        1866
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4E"
    },
    "10243": {
      "op": "JUMP"
    },
    "10244": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10245": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 105,
      "value": "0x40"
    },
    "10247": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10254": {
      "op": "SHL"
    },
    "10255": {
      "op": "SUB"
    },
    "10256": {
      "op": "DUP1"
    },
    "10257": {
      "op": "DUP6"
    },
    "10258": {
      "op": "AND"
    },
    "10259": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "10261": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "4"
    },
    "10262": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "4"
    },
    "10263": {
      "op": "MSTORE"
    },
    "10264": {
      "op": "DUP4"
    },
    "10265": {
      "op": "AND"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10268": {
      "op": "DUP3"
    },
    "10269": {
      "op": "ADD"
    },
    "10270": {
      "op": "MSTORE"
    },
    "10271": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10273": {
      "op": "DUP2"
    },
    "10274": {
      "op": "ADD"
    },
    "10275": {
      "op": "DUP3"
    },
    "10276": {
      "op": "SWAP1"
    },
    "10277": {
      "op": "MSTORE"
    },
    "10278": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B1A"
    },
    "10281": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10282": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "DUP6",
      "path": "4"
    },
    "10283": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10284": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "10289": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10291": {
      "op": "SHL"
    },
    "10292": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1162,
        1189
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10293": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10295": {
      "op": "ADD"
    },
    "10296": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10297": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "10299": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10300": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10303": {
      "op": "NOT"
    },
    "10304": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10305": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10306": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SUB",
      "path": "4"
    },
    "10307": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "4"
    },
    "10308": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10309": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10310": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10311": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10312": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10313": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "10315": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "4"
    },
    "10316": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "4"
    },
    "10317": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "4"
    },
    "10318": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10323": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10325": {
      "op": "SHL"
    },
    "10326": {
      "op": "SUB"
    },
    "10327": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "4"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10334": {
      "op": "SHL"
    },
    "10335": {
      "op": "SUB"
    },
    "10336": {
      "op": "NOT"
    },
    "10337": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10338": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "10339": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "4"
    },
    "10340": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10341": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10342": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "10343": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "OR",
      "path": "4"
    },
    "10344": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10345": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "10346": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "10347": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F92"
    },
    "10350": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "10351": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10352": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10354": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10361": {
      "op": "SHL"
    },
    "10362": {
      "op": "SUB"
    },
    "10363": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "10364": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6",
      "statement": 106
    },
    "10365": {
      "branch": 198,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 107
    },
    "10366": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12AD"
    },
    "10369": {
      "branch": 198,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10370": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10372": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10373": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10377": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10379": {
      "op": "SHL"
    },
    "10380": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10381": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10384": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10386": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10387": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "10388": {
      "op": "DUP2"
    },
    "10389": {
      "op": "SWAP1"
    },
    "10390": {
      "op": "MSTORE"
    },
    "10391": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10393": {
      "op": "DUP3"
    },
    "10394": {
      "op": "ADD"
    },
    "10395": {
      "op": "MSTORE"
    },
    "10396": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10431": {
      "op": "DUP3"
    },
    "10432": {
      "op": "ADD"
    },
    "10433": {
      "op": "MSTORE"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10436": {
      "op": "ADD"
    },
    "10437": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA4E"
    },
    "10440": {
      "op": "JUMP"
    },
    "10441": {
      "fn": "Pausable._unpause",
      "offset": [
        2433,
        2550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10442": {
      "offset": [
        1486,
        1502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28D1"
    },
    "10445": {
      "offset": [
        1486,
        1500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3064"
    },
    "10448": {
      "jump": "i",
      "offset": [
        1486,
        1502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10449": {
      "fn": "Pausable._unpause",
      "offset": [
        1486,
        1502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10450": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 108,
      "value": "0x3"
    },
    "10452": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10453": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10456": {
      "op": "NOT"
    },
    "10457": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "AND",
      "path": "1"
    },
    "10458": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10459": {
      "fn": "Pausable._unpause",
      "offset": [
        2491,
        2506
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10460": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 109,
      "value": "0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
    },
    "10493": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "10494": {
      "fn": "Pausable._unpause",
      "offset": [
        2530,
        2542
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10495": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10497": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10504": {
      "op": "SHL"
    },
    "10505": {
      "op": "SUB"
    },
    "10506": {
      "op": "SWAP1"
    },
    "10507": {
      "op": "SWAP2"
    },
    "10508": {
      "op": "AND"
    },
    "10509": {
      "op": "DUP2"
    },
    "10510": {
      "op": "MSTORE"
    },
    "10511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10513": {
      "op": "ADD"
    },
    "10514": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "10516": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "10517": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10518": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "10519": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SUB",
      "path": "1"
    },
    "10520": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10521": {
      "fn": "Pausable._unpause",
      "offset": [
        2521,
        2543
      ],
      "op": "LOG1",
      "path": "1"
    },
    "10522": {
      "fn": "Pausable._unpause",
      "jump": "o",
      "offset": [
        2433,
        2550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10523": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10524": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10526": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10527": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10534": {
      "op": "SHL"
    },
    "10535": {
      "op": "SUB"
    },
    "10536": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 110
    },
    "10537": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10538": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10545": {
      "op": "SHL"
    },
    "10546": {
      "op": "SUB"
    },
    "10547": {
      "op": "NOT"
    },
    "10548": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10549": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "10550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10551": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "10552": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10553": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10554": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 111,
      "value": "0x40"
    },
    "10556": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10557": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10558": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10559": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10560": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "10561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "10562": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10563": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10564": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "10597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10599": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "10600": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "10601": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "10602": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10603": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        628,
        1018
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10610": {
      "op": "SHL"
    },
    "10611": {
      "op": "SUB"
    },
    "10612": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 112
    },
    "10613": {
      "branch": 203,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        763,
        783
      ],
      "op": "AND",
      "path": "11"
    },
    "10614": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29CD"
    },
    "10617": {
      "branch": 203,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10618": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10620": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10627": {
      "op": "SHL"
    },
    "10628": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10629": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10632": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10634": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10635": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "ADD",
      "path": "11"
    },
    "10636": {
      "op": "MSTORE"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "10639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10641": {
      "op": "DUP3"
    },
    "10642": {
      "op": "ADD"
    },
    "10643": {
      "op": "MSTORE"
    },
    "10644": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C65722063616E6E6F742062"
    },
    "10677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10679": {
      "op": "DUP3"
    },
    "10680": {
      "op": "ADD"
    },
    "10681": {
      "op": "MSTORE"
    },
    "10682": {
      "op": "PUSH3",
      "value": "0x65203"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0xEC"
    },
    "10688": {
      "op": "SHL"
    },
    "10689": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10691": {
      "op": "DUP3"
    },
    "10692": {
      "op": "ADD"
    },
    "10693": {
      "op": "MSTORE"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10696": {
      "op": "ADD"
    },
    "10697": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "10700": {
      "op": "JUMP"
    },
    "10701": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        755,
        823
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10702": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        891,
        892
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 113,
      "value": "0x0"
    },
    "10704": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10705": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10706": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10707": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        861
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "10709": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10711": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10712": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10714": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10715": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        876
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "10716": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10723": {
      "op": "SHL"
    },
    "10724": {
      "op": "SUB"
    },
    "10725": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        879
      ],
      "op": "AND",
      "path": "11"
    },
    "10726": {
      "branch": 204,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        854,
        893
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "10727": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A41"
    },
    "10730": {
      "branch": 204,
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10731": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "10733": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10740": {
      "op": "SHL"
    },
    "10741": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10742": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10745": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "10747": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10748": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "ADD",
      "path": "11"
    },
    "10749": {
      "op": "MSTORE"
    },
    "10750": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10754": {
      "op": "DUP3"
    },
    "10755": {
      "op": "ADD"
    },
    "10756": {
      "op": "MSTORE"
    },
    "10757": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C657220616C726561647920"
    },
    "10790": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10792": {
      "op": "DUP3"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "op": "MSTORE"
    },
    "10795": {
      "op": "PUSH6",
      "value": "0x657869737473"
    },
    "10802": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10804": {
      "op": "SHL"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10807": {
      "op": "DUP3"
    },
    "10808": {
      "op": "ADD"
    },
    "10809": {
      "op": "MSTORE"
    },
    "10810": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10812": {
      "op": "ADD"
    },
    "10813": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA4E"
    },
    "10816": {
      "op": "JUMP"
    },
    "10817": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        833,
        957
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "10818": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 114,
      "value": "0x40"
    },
    "10820": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10821": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "10822": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10823": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10824": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "11"
    },
    "10825": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10826": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10833": {
      "op": "SHL"
    },
    "10834": {
      "op": "SUB"
    },
    "10835": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10836": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP6",
      "path": "11"
    },
    "10837": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "11"
    },
    "10838": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10839": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10840": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10841": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "AND",
      "path": "11"
    },
    "10842": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "10844": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP1",
      "path": "11"
    },
    "10845": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "DUP4",
      "path": "11"
    },
    "10846": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "ADD",
      "path": "11"
    },
    "10847": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10848": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10849": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10850": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10853": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP7",
      "path": "11"
    },
    "10854": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP2",
      "path": "11"
    },
    "10855": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10856": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        974
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "10858": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10859": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "DUP3",
      "path": "11"
    },
    "10860": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10861": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "10862": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "10863": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10864": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "10865": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "10866": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B1A"
    },
    "10869": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "10870": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10871": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        989
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "10872": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "10873": {
      "fn": "RestrictedCalls._addCaller",
      "offset": [
        967,
        1011
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31D0"
    },
    "10876": {
      "fn": "RestrictedCalls._addCaller",
      "jump": "i",
      "offset": [
        967,
        1011
      ],
      "op": "JUMP",
      "path": "11"
    },
    "10877": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        763,
        968
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "10878": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 115,
      "value": "0x40"
    },
    "10880": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10887": {
      "op": "SHL"
    },
    "10888": {
      "op": "SUB"
    },
    "10889": {
      "op": "DUP4"
    },
    "10890": {
      "op": "AND"
    },
    "10891": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "10893": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "DUP3",
      "path": "4"
    },
    "10894": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "ADD",
      "path": "4"
    },
    "10895": {
      "op": "MSTORE"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10898": {
      "op": "DUP2"
    },
    "10899": {
      "op": "ADD"
    },
    "10900": {
      "op": "DUP3"
    },
    "10901": {
      "op": "SWAP1"
    },
    "10902": {
      "op": "MSTORE"
    },
    "10903": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1855"
    },
    "10906": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        875,
        961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10907": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "DUP5",
      "path": "4"
    },
    "10908": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        895,
        900
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10909": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "10914": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10916": {
      "op": "SHL"
    },
    "10917": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        925,
        948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "10918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10920": {
      "op": "ADD"
    },
    "10921": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        902,
        960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2838"
    },
    "10924": {
      "op": "JUMP"
    },
    "10925": {
      "fn": "Pausable._pause",
      "offset": [
        2186,
        2301
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10926": {
      "offset": [
        1239,
        1258
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AB5"
    },
    "10929": {
      "offset": [
        1239,
        1256
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27BE"
    },
    "10932": {
      "jump": "i",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMP",
      "path": "1"
    },
    "10933": {
      "fn": "Pausable._pause",
      "offset": [
        1239,
        1258
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "10934": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2252
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 116,
      "value": "0x3"
    },
    "10936": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "DUP1",
      "path": "1"
    },
    "10937": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "10940": {
      "op": "NOT"
    },
    "10941": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "AND",
      "path": "1"
    },
    "10942": {
      "fn": "Pausable._pause",
      "offset": [
        2255,
        2259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "10944": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "OR",
      "path": "1"
    },
    "10945": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "10946": {
      "fn": "Pausable._pause",
      "offset": [
        2245,
        2259
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "10947": {
      "fn": "Pausable._pause",
      "offset": [
        2274,
        2294
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 117,
      "value": "0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
    },
    "10980": {
      "fn": "Pausable._pause",
      "offset": [
        2281,
        2293
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28FE"
    },
    "10983": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "6"
    },
    "10984": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "10985": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "6"
    },
    "10986": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "10987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10993": {
      "op": "SHL"
    },
    "10994": {
      "op": "SUB"
    },
    "10995": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP1",
      "path": "10"
    },
    "10996": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP3",
      "path": "10"
    },
    "10997": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "AND",
      "path": "10"
    },
    "10998": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22308,
        22315
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11000": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11001": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11002": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11003": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22368
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11005": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11007": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11008": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11009": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11010": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11012": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11013": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11014": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11015": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22422,
        22437
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11016": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22422,
        22437
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11017": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11018": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11019": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22421
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "11021": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11022": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11023": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11024": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11025": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11026": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11027": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11028": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11029": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11030": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "ADD",
      "path": "10"
    },
    "11031": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11032": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11034": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11035": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "ADD",
      "path": "10"
    },
    "11036": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11037": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "11039": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11040": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "ADD",
      "path": "10"
    },
    "11041": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11042": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22308,
        22315
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11043": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22308,
        22315
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "11044": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22308,
        22315
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11045": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22308,
        22315
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "11046": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "11047": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22362,
        22377
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "11048": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22413,
        22438
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "11049": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11050": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11051": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "AND",
      "path": "10"
    },
    "11052": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22473,
        22496
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11059": {
      "op": "SHL"
    },
    "11060": {
      "op": "SUB"
    },
    "11061": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11062": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "AND",
      "path": "10"
    },
    "11063": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22524,
        22537
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11066": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11068": {
      "op": "SHL"
    },
    "11069": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11070": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11071": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11072": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "DIV",
      "path": "10"
    },
    "11073": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11074": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "AND",
      "path": "10"
    },
    "11075": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11076": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11077": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "DIV",
      "path": "10"
    },
    "11078": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "AND",
      "path": "10"
    },
    "11079": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22708,
        22743
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 118,
      "value": "0x2B50"
    },
    "11082": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22627,
        22653
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11083": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22569,
        22587
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11084": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22708,
        22743
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "11087": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        22708,
        22743
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11088": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22708,
        22743
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11093": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11095": {
      "op": "SHL"
    },
    "11096": {
      "op": "SUB"
    },
    "11097": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22743
      ],
      "op": "AND",
      "path": "10"
    },
    "11098": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22689
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11099": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22705
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11101": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22705
      ],
      "op": "ADD",
      "path": "10"
    },
    "11102": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22705
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11103": {
      "branch": 182,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22684,
        22743
      ],
      "op": "LT",
      "path": "10"
    },
    "11104": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BAB"
    },
    "11107": {
      "branch": 182,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11108": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11110": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11111": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11115": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11117": {
      "op": "SHL"
    },
    "11118": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11119": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11122": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11124": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11125": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "ADD",
      "path": "10"
    },
    "11126": {
      "op": "MSTORE"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "11129": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11131": {
      "op": "DUP3"
    },
    "11132": {
      "op": "ADD"
    },
    "11133": {
      "op": "MSTORE"
    },
    "11134": {
      "op": "PUSH32",
      "value": "0x436C61696D20616C72656164792077697468647261776E000000000000000000"
    },
    "11167": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11169": {
      "op": "DUP3"
    },
    "11170": {
      "op": "ADD"
    },
    "11171": {
      "op": "MSTORE"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11174": {
      "op": "ADD"
    },
    "11175": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "11178": {
      "op": "JUMP"
    },
    "11179": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22663,
        22792
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11180": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "11182": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11183": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "ADD",
      "path": "10"
    },
    "11184": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11185": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23314,
        23328
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11187": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23314,
        23328
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11188": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23314,
        23328
      ],
      "op": "ADD",
      "path": "10"
    },
    "11189": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23314,
        23328
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11190": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22803,
        22818
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11192": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22803,
        22818
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11195": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11197": {
      "op": "SHL"
    },
    "11198": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11199": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "DIV",
      "path": "10"
    },
    "11200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11206": {
      "op": "SHL"
    },
    "11207": {
      "op": "SUB"
    },
    "11208": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "AND",
      "path": "10"
    },
    "11209": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23273,
        23287
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11210": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23343,
        23363
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11211": {
      "branch": 183,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23343,
        23363
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11212": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23339,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BFA"
    },
    "11215": {
      "branch": 183,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23339,
        24094
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11216": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23441,
        23448
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 119
    },
    "11217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11223": {
      "op": "SHL"
    },
    "11224": {
      "op": "SUB"
    },
    "11225": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23448
      ],
      "op": "AND",
      "path": "10"
    },
    "11226": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23437
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11233": {
      "op": "SHL"
    },
    "11234": {
      "op": "SUB"
    },
    "11235": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23448
      ],
      "op": "AND",
      "path": "10"
    },
    "11236": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23448
      ],
      "op": "EQ",
      "path": "10"
    },
    "11237": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11238": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11239": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BF3"
    },
    "11242": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11243": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "POP",
      "path": "10"
    },
    "11244": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23462,
        23467
      ],
      "op": "DUP9",
      "path": "10"
    },
    "11245": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23462,
        23474
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11247": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23462,
        23474
      ],
      "op": "ADD",
      "path": "10"
    },
    "11248": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23462,
        23474
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11249": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23452,
        23458
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11250": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23452,
        23474
      ],
      "op": "EQ",
      "path": "10"
    },
    "11251": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23431,
        23474
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11252": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23418,
        23474
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11253": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23418,
        23474
      ],
      "op": "POP",
      "path": "10"
    },
    "11254": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23339,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CF2"
    },
    "11257": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23339,
        24094
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11258": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23339,
        24094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11259": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11261": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11262": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11263": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11264": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23517
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "11266": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23517
      ],
      "op": "DUP10",
      "path": "10"
    },
    "11267": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23517
      ],
      "op": "ADD",
      "path": "10"
    },
    "11268": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11270": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11271": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11273": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11274": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11275": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11276": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xFF"
    },
    "11278": {
      "branch": 184,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23495,
        23525
      ],
      "op": "AND",
      "path": "10"
    },
    "11279": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11280": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C1C"
    },
    "11283": {
      "branch": 184,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11284": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23593,
        23598
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 120,
      "value": "0x0"
    },
    "11286": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23580,
        23598
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11287": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23580,
        23598
      ],
      "op": "POP",
      "path": "10"
    },
    "11288": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CF2"
    },
    "11291": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11292": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23491,
        24094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11297": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11299": {
      "op": "SHL"
    },
    "11300": {
      "op": "SUB"
    },
    "11301": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23619,
        23639
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11302": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23619,
        23639
      ],
      "op": "AND",
      "path": "10"
    },
    "11303": {
      "branch": 185,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23619,
        23639
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11304": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C86"
    },
    "11307": {
      "branch": 185,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11312": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11314": {
      "op": "SHL"
    },
    "11315": {
      "op": "SUB"
    },
    "11316": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "DUP8",
      "path": "10",
      "statement": 121
    },
    "11317": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "AND",
      "path": "10"
    },
    "11318": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11320": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11321": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11322": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11323": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23740
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11325": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11327": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11328": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11330": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11331": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23757
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11332": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23765
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11334": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23765
      ],
      "op": "ADD",
      "path": "10"
    },
    "11335": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23765
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11342": {
      "op": "SHL"
    },
    "11343": {
      "op": "SUB"
    },
    "11344": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23765
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11345": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23765
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11346": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23765
      ],
      "op": "AND",
      "path": "10"
    },
    "11347": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23765
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11348": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23734,
        23765
      ],
      "op": "AND",
      "path": "10"
    },
    "11349": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23765
      ],
      "op": "EQ",
      "path": "10"
    },
    "11350": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23831
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11351": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23831
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11352": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23831
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2BF3"
    },
    "11355": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23723,
        23831
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11356": {
      "op": "POP"
    },
    "11357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11363": {
      "op": "SHL"
    },
    "11364": {
      "op": "SUB"
    },
    "11365": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11366": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "AND",
      "path": "10"
    },
    "11367": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11369": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11370": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11371": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11372": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23807
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11374": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11376": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11377": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11378": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11379": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11381": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11382": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11383": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23824
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11384": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23831
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11385": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23831
      ],
      "op": "ADD",
      "path": "10"
    },
    "11386": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23801,
        23831
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11387": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23785,
        23797
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11388": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23785,
        23797
      ],
      "op": "DUP11",
      "path": "10"
    },
    "11389": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23785,
        23797
      ],
      "op": "ADD",
      "path": "10"
    },
    "11390": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23785,
        23797
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11391": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23785,
        23831
      ],
      "op": "EQ",
      "path": "10"
    },
    "11392": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23694,
        23831
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11393": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23694,
        23831
      ],
      "op": "POP",
      "path": "10"
    },
    "11394": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CF2"
    },
    "11397": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11398": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11399": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23945,
        23950
      ],
      "op": "DUP9",
      "path": "10",
      "statement": 122
    },
    "11400": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23945,
        23962
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x5"
    },
    "11402": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23945,
        23962
      ],
      "op": "ADD",
      "path": "10"
    },
    "11403": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23945,
        23962
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11404": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23926,
        23941
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "11405": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23926,
        23962
      ],
      "op": "LT",
      "path": "10"
    },
    "11406": {
      "branch": 186,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23926,
        23962
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11407": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2CDA"
    },
    "11410": {
      "branch": 186,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11411": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11413": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11420": {
      "op": "SHL"
    },
    "11421": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11422": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11425": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11427": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11428": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "ADD",
      "path": "10"
    },
    "11429": {
      "op": "MSTORE"
    },
    "11430": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11434": {
      "op": "DUP3"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "MSTORE"
    },
    "11437": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "11470": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11472": {
      "op": "DUP3"
    },
    "11473": {
      "op": "ADD"
    },
    "11474": {
      "op": "MSTORE"
    },
    "11475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11477": {
      "op": "ADD"
    },
    "11478": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "11481": {
      "op": "JUMP"
    },
    "11482": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23901,
        24021
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11483": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24063,
        24083
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 123
    },
    "11484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11488": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11490": {
      "op": "SHL"
    },
    "11491": {
      "op": "SUB"
    },
    "11492": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24048,
        24083
      ],
      "op": "AND",
      "path": "10"
    },
    "11493": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24048,
        24060
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11500": {
      "op": "SHL"
    },
    "11501": {
      "op": "SUB"
    },
    "11502": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24048,
        24083
      ],
      "op": "AND",
      "path": "10"
    },
    "11503": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24048,
        24083
      ],
      "op": "GT",
      "path": "10"
    },
    "11504": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24035,
        24083
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11505": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24035,
        24083
      ],
      "op": "POP",
      "path": "10"
    },
    "11506": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        23615,
        24094
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11507": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24158,
        24178
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11509": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24188,
        24210
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11510": {
      "branch": 187,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24225,
        24235
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11511": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11512": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D0E"
    },
    "11515": {
      "branch": 187,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11516": {
      "op": "POP"
    },
    "11517": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24331,
        24338
      ],
      "op": "DUP7",
      "path": "10",
      "statement": 124
    },
    "11518": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24368,
        24403
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 125,
      "value": "0x2D07"
    },
    "11521": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24383,
        24403
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11522": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24368,
        24380
      ],
      "op": "DUP9",
      "path": "10"
    },
    "11523": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24368,
        24403
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "11526": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        24368,
        24403
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11527": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24368,
        24403
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11528": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24352,
        24403
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11529": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24352,
        24403
      ],
      "op": "POP",
      "path": "10"
    },
    "11530": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DCC"
    },
    "11533": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11534": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24221,
        25006
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11539": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11541": {
      "op": "SHL"
    },
    "11542": {
      "op": "SUB"
    },
    "11543": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24424,
        24448
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11544": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24424,
        24448
      ],
      "op": "AND",
      "path": "10"
    },
    "11545": {
      "branch": 188,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24424,
        24448
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11546": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DBB"
    },
    "11549": {
      "branch": 188,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11550": {
      "op": "POP"
    },
    "11551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11557": {
      "op": "SHL"
    },
    "11558": {
      "op": "SUB"
    },
    "11559": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "DUP15",
      "path": "10",
      "statement": 126
    },
    "11560": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "AND",
      "path": "10"
    },
    "11561": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11563": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11564": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11565": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11566": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24623
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "11568": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24623
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11569": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24623
      ],
      "op": "DUP13",
      "path": "10"
    },
    "11570": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24623
      ],
      "op": "ADD",
      "path": "10"
    },
    "11571": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11573": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11574": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11576": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11577": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11578": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11579": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11580": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24555,
        24566
      ],
      "op": "DUP16",
      "path": "10",
      "statement": 127
    },
    "11581": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24555,
        24566
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11582": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24596,
        24639
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D50"
    },
    "11585": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24596,
        24639
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11590": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11592": {
      "op": "SHL"
    },
    "11593": {
      "op": "SUB"
    },
    "11594": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "AND",
      "path": "10"
    },
    "11595": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24600,
        24639
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11596": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24596,
        24639
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3767"
    },
    "11599": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        24596,
        24639
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11600": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24596,
        24639
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11601": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24580,
        24639
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11602": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24580,
        24639
      ],
      "op": "POP",
      "path": "10"
    },
    "11603": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24677,
        24678
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 128,
      "value": "0x0"
    },
    "11605": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24661,
        24674
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11610": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11612": {
      "op": "SHL"
    },
    "11613": {
      "op": "SUB"
    },
    "11614": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24661,
        24678
      ],
      "op": "AND",
      "path": "10"
    },
    "11615": {
      "branch": 189,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24661,
        24678
      ],
      "op": "GT",
      "path": "10"
    },
    "11616": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DB6"
    },
    "11619": {
      "branch": 189,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11620": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11622": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11629": {
      "op": "SHL"
    },
    "11630": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11631": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11632": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11634": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "11636": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11637": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "ADD",
      "path": "10"
    },
    "11638": {
      "op": "MSTORE"
    },
    "11639": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11643": {
      "op": "DUP3"
    },
    "11644": {
      "op": "ADD"
    },
    "11645": {
      "op": "MSTORE"
    },
    "11646": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E67657220686173206E6F7468696E6720746F20776974686472"
    },
    "11679": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "11681": {
      "op": "DUP3"
    },
    "11682": {
      "op": "ADD"
    },
    "11683": {
      "op": "MSTORE"
    },
    "11684": {
      "op": "PUSH2",
      "value": "0x6177"
    },
    "11687": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "11689": {
      "op": "SHL"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "11692": {
      "op": "DUP3"
    },
    "11693": {
      "op": "ADD"
    },
    "11694": {
      "op": "MSTORE"
    },
    "11695": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "11697": {
      "op": "ADD"
    },
    "11698": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA4E"
    },
    "11701": {
      "op": "JUMP"
    },
    "11702": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24653,
        24717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11703": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2DCC"
    },
    "11706": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11707": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11708": {
      "op": "POP"
    },
    "11709": {
      "op": "POP"
    },
    "11710": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11712": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11713": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24983,
        24995
      ],
      "op": "DUP6",
      "path": "10",
      "statement": 129
    },
    "11714": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24983,
        24995
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11721": {
      "op": "SHL"
    },
    "11722": {
      "op": "SUB"
    },
    "11723": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "11724": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        24420,
        25006
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11725": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "11727": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "DUP12",
      "path": "10"
    },
    "11728": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "ADD",
      "path": "10"
    },
    "11729": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11736": {
      "op": "SHL"
    },
    "11737": {
      "op": "SUB"
    },
    "11738": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11739": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11740": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25315,
        25335
      ],
      "op": "AND",
      "path": "10"
    },
    "11741": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25297,
        25335
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11742": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25297,
        25335
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11743": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25297,
        25335
      ],
      "op": "AND",
      "path": "10"
    },
    "11744": {
      "branch": 190,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25297,
        25335
      ],
      "op": "SUB",
      "path": "10"
    },
    "11745": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25293,
        25582
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E30"
    },
    "11748": {
      "branch": 190,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25293,
        25582
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11749": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25370,
        25390
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11754": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11756": {
      "op": "SHL"
    },
    "11757": {
      "op": "SUB"
    },
    "11758": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25355,
        25390
      ],
      "op": "AND",
      "path": "10"
    },
    "11759": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25355,
        25367
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11766": {
      "op": "SHL"
    },
    "11767": {
      "op": "SUB"
    },
    "11768": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25355,
        25390
      ],
      "op": "AND",
      "path": "10"
    },
    "11769": {
      "branch": 191,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25355,
        25390
      ],
      "op": "GT",
      "path": "10"
    },
    "11770": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "11771": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E19"
    },
    "11774": {
      "branch": 191,
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "11775": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25428,
        25463
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 130,
      "value": "0x2E08"
    },
    "11778": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25443,
        25463
      ],
      "op": "DUP7",
      "path": "10"
    },
    "11779": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25428,
        25440
      ],
      "op": "DUP9",
      "path": "10"
    },
    "11780": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25428,
        25463
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3747"
    },
    "11783": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        25428,
        25463
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11784": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25428,
        25463
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11785": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E12"
    },
    "11788": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11789": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11790": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "11793": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        25410,
        25464
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11794": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11795": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11796": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25410,
        25464
      ],
      "op": "POP",
      "path": "10"
    },
    "11797": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E30"
    },
    "11800": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11801": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11802": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25521,
        25556
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 131,
      "value": "0x2E23"
    },
    "11805": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25544,
        25556
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11806": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25521,
        25541
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11807": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25521,
        25556
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3747"
    },
    "11810": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        25521,
        25556
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11811": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25521,
        25556
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11812": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2E2D"
    },
    "11815": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11816": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "DUP4",
      "path": "10"
    },
    "11817": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3747"
    },
    "11820": {
      "fn": "RequestManager.resolveClaim",
      "jump": "i",
      "offset": [
        25503,
        25557
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11821": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11822": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11823": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25503,
        25557
      ],
      "op": "POP",
      "path": "10"
    },
    "11824": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25351,
        25572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11825": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25600,
        25614
      ],
      "op": "SWAP12",
      "path": "10",
      "statement": 132
    },
    "11826": {
      "op": "POP"
    },
    "11827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11833": {
      "op": "SHL"
    },
    "11834": {
      "op": "SUB"
    },
    "11835": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25592,
        25630
      ],
      "op": "AND",
      "path": "10"
    },
    "11836": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        25592,
        25630
      ],
      "op": "SWAP10",
      "path": "10"
    },
    "11837": {
      "op": "POP"
    },
    "11838": {
      "op": "POP"
    },
    "11839": {
      "op": "POP"
    },
    "11840": {
      "op": "POP"
    },
    "11841": {
      "op": "POP"
    },
    "11842": {
      "op": "POP"
    },
    "11843": {
      "op": "POP"
    },
    "11844": {
      "op": "POP"
    },
    "11845": {
      "op": "POP"
    },
    "11846": {
      "op": "POP"
    },
    "11847": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11848": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "POP",
      "path": "10"
    },
    "11849": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11850": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11851": {
      "fn": "RequestManager.resolveClaim",
      "offset": [
        22203,
        25637
      ],
      "op": "POP",
      "path": "10"
    },
    "11852": {
      "fn": "RequestManager.resolveClaim",
      "jump": "o",
      "offset": [
        22203,
        25637
      ],
      "op": "JUMP",
      "path": "10"
    },
    "11853": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25643,
        26145
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "11854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11860": {
      "op": "SHL"
    },
    "11861": {
      "op": "SUB"
    },
    "11862": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11863": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "AND",
      "path": "10"
    },
    "11864": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25727,
        25746
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "11866": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11867": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11868": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11869": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25755
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "11871": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "11873": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11874": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11875": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "11876": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11878": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11879": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "DUP3",
      "path": "10"
    },
    "11880": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11881": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "11882": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "11884": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11885": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "ADD",
      "path": "10"
    },
    "11886": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11887": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25837,
        25852
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 133
    },
    "11888": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25837,
        25852
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11889": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11890": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11891": {
      "op": "SWAP1"
    },
    "11892": {
      "op": "DUP2"
    },
    "11893": {
      "op": "MSTORE"
    },
    "11894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11900": {
      "op": "SHL"
    },
    "11901": {
      "op": "SUB"
    },
    "11902": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11903": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11904": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25792,
        25805
      ],
      "op": "AND",
      "path": "10"
    },
    "11905": {
      "op": "SWAP3"
    },
    "11906": {
      "op": "DUP2"
    },
    "11907": {
      "op": "ADD"
    },
    "11908": {
      "op": "DUP4"
    },
    "11909": {
      "op": "SWAP1"
    },
    "11910": {
      "op": "MSTORE"
    },
    "11911": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11912": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25749,
        25764
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "11913": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xAB63A14C4AABA38366FD39116091672BB44520328EE870BE35A51E573296E565"
    },
    "11946": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11947": {
      "op": "ADD"
    },
    "11948": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "11950": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "11951": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11952": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11953": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "SUB",
      "path": "10"
    },
    "11954": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11955": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25820,
        25862
      ],
      "op": "LOG1",
      "path": "10"
    },
    "11956": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25896
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 134,
      "value": "0x5"
    },
    "11958": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25896
      ],
      "op": "DUP5",
      "path": "10"
    },
    "11959": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25896
      ],
      "op": "ADD",
      "path": "10"
    },
    "11960": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11961": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11966": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11968": {
      "op": "SHL"
    },
    "11969": {
      "op": "SUB"
    },
    "11970": {
      "op": "NOT"
    },
    "11971": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "AND",
      "path": "10"
    },
    "11972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11976": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11978": {
      "op": "SHL"
    },
    "11979": {
      "op": "SUB"
    },
    "11980": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11981": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "DUP2",
      "path": "10"
    },
    "11982": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "AND",
      "path": "10"
    },
    "11983": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11984": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11985": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11986": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "OR",
      "path": "10"
    },
    "11987": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "11988": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "11989": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25873,
        25906
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "11990": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 135,
      "value": "0x4"
    },
    "11992": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "DUP6",
      "path": "10"
    },
    "11993": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "ADD",
      "path": "10"
    },
    "11994": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "11995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11997": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25924,
        25950
      ],
      "op": "DUP1",
      "path": "10"
    },
    "11998": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25924,
        25950
      ],
      "op": "DUP8",
      "path": "10"
    },
    "11999": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25924,
        25950
      ],
      "op": "ADD",
      "path": "10"
    },
    "12000": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25924,
        25950
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12007": {
      "op": "SHL"
    },
    "12008": {
      "op": "SUB"
    },
    "12009": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25924,
        25950
      ],
      "op": "AND",
      "path": "10"
    },
    "12010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12012": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12013": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12014": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12015": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25923
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "12017": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "12019": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "12020": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "12022": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12023": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25951
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "12024": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25973
      ],
      "op": "ADD",
      "path": "10"
    },
    "12025": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DUP1",
      "path": "10"
    },
    "12026": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12029": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12031": {
      "op": "SHL"
    },
    "12032": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12033": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12034": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "DIV",
      "path": "10"
    },
    "12035": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12036": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "AND",
      "path": "10"
    },
    "12037": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12038": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25973
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12039": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25973
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12040": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25973
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x14"
    },
    "12042": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        25973
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12043": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F1E"
    },
    "12046": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12047": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "DUP6",
      "path": "10"
    },
    "12048": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25977,
        26009
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12053": {
      "op": "SHL"
    },
    "12054": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12055": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12056": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DIV",
      "path": "10"
    },
    "12057": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "AND",
      "path": "10"
    },
    "12058": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3620"
    },
    "12061": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        25917,
        26009
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12062": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12063": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DUP3",
      "path": "10"
    },
    "12064": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12065": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "12068": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12069": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12070": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12071": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "EXP",
      "path": "10"
    },
    "12072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12076": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12078": {
      "op": "SHL"
    },
    "12079": {
      "op": "SUB"
    },
    "12080": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12081": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DUP2",
      "path": "10"
    },
    "12082": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "MUL",
      "path": "10"
    },
    "12083": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "NOT",
      "path": "10"
    },
    "12084": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12085": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "12086": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "AND",
      "path": "10"
    },
    "12087": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12088": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "DUP4",
      "path": "10"
    },
    "12089": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "AND",
      "path": "10"
    },
    "12090": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "MUL",
      "path": "10"
    },
    "12091": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "OR",
      "path": "10"
    },
    "12092": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12093": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12094": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25917,
        26009
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "12095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12097": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "DUP7",
      "path": "10"
    },
    "12098": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "ADD",
      "path": "10"
    },
    "12099": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12100": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 136,
      "value": "0x4"
    },
    "12102": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "DUP8",
      "path": "10"
    },
    "12103": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "ADD",
      "path": "10"
    },
    "12104": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12105": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26121
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "12107": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26121
      ],
      "op": "DUP9",
      "path": "10"
    },
    "12108": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26121
      ],
      "op": "ADD",
      "path": "10"
    },
    "12109": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26121
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "12110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12116": {
      "op": "SHL"
    },
    "12117": {
      "op": "SUB"
    },
    "12118": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12119": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12120": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "AND",
      "path": "10"
    },
    "12121": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26042,
        26068
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "12122": {
      "op": "POP"
    },
    "12123": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26079,
        26138
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2F75"
    },
    "12126": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26079,
        26138
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12127": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26098,
        26105
      ],
      "op": "DUP6",
      "path": "10"
    },
    "12128": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26098,
        26105
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12129": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1B09"
    },
    "12132": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26137
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "12133": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0x100000000"
    },
    "12139": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12140": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "DIV",
      "path": "10"
    },
    "12141": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12142": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "12143": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "AND",
      "path": "10"
    },
    "12144": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26124,
        26137
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "12145": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26107,
        26137
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x35EF"
    },
    "12148": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "i",
      "offset": [
        26107,
        26137
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12149": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        26079,
        26138
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "12150": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25717,
        26145
      ],
      "op": "POP",
      "path": "10"
    },
    "12151": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25717,
        26145
      ],
      "op": "POP",
      "path": "10"
    },
    "12152": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25717,
        26145
      ],
      "op": "POP",
      "path": "10"
    },
    "12153": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25643,
        26145
      ],
      "op": "POP",
      "path": "10"
    },
    "12154": {
      "fn": "RequestManager.withdrawDeposit",
      "offset": [
        25643,
        26145
      ],
      "op": "POP",
      "path": "10"
    },
    "12155": {
      "fn": "RequestManager.withdrawDeposit",
      "jump": "o",
      "offset": [
        25643,
        26145
      ],
      "op": "JUMP",
      "path": "10"
    },
    "12156": {
      "fn": "Math.max",
      "offset": [
        413,
        517
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "12157": {
      "fn": "Math.max",
      "offset": [
        471,
        478
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "12159": {
      "fn": "Math.max",
      "offset": [
        501,
        502
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 137
    },
    "12160": {
      "fn": "Math.max",
      "offset": [
        497,
        498
      ],
      "op": "DUP4",
      "path": "7"
    },
    "12161": {
      "branch": 196,
      "fn": "Math.max",
      "offset": [
        497,
        502
      ],
      "op": "GT",
      "path": "7"
    },
    "12162": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F8B"
    },
    "12165": {
      "branch": 196,
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12166": {
      "fn": "Math.max",
      "offset": [
        509,
        510
      ],
      "op": "DUP2",
      "path": "7"
    },
    "12167": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCFD"
    },
    "12170": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMP",
      "path": "7"
    },
    "12171": {
      "fn": "Math.max",
      "offset": [
        497,
        510
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "12172": {
      "op": "POP"
    },
    "12173": {
      "fn": "Math.max",
      "offset": [
        505,
        506
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12174": {
      "fn": "Math.max",
      "offset": [
        505,
        506
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "12175": {
      "fn": "Math.max",
      "offset": [
        413,
        517
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "12176": {
      "op": "POP"
    },
    "12177": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        413,
        517
      ],
      "op": "JUMP",
      "path": "7"
    },
    "12178": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12179": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "12181": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2FE7"
    },
    "12184": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4220,
        4224
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12185": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12187": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12188": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12189": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12191": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "4"
    },
    "12192": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12194": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12195": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12196": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12198": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12199": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12200": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12202": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "4"
    },
    "12203": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "12236": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12237": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12238": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "POP",
      "path": "4"
    },
    "12239": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4200,
        4205
      ],
      "op": "DUP6",
      "path": "4"
    },
    "12240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12246": {
      "op": "SHL"
    },
    "12247": {
      "op": "SUB"
    },
    "12248": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "AND",
      "path": "4"
    },
    "12249": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30AD"
    },
    "12252": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12253": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "12254": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12255": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12256": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "12261": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "AND",
      "path": "4"
    },
    "12262": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12263": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12264": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12265": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12266": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12267": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12268": {
      "op": "POP"
    },
    "12269": {
      "branch": 205,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4296
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "12270": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1855"
    },
    "12273": {
      "branch": 205,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12274": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4370,
        4380
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 138
    },
    "12275": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP1",
      "path": "4"
    },
    "12276": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "12278": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "4"
    },
    "12279": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12280": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12281": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12282": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "4"
    },
    "12283": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12284": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3005"
    },
    "12287": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "12288": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "12289": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x358A"
    },
    "12292": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMP",
      "path": "4"
    },
    "12293": {
      "branch": 206,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "12294": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1855"
    },
    "12297": {
      "branch": 206,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12298": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "12300": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "12301": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12305": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12307": {
      "op": "SHL"
    },
    "12308": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP2",
      "path": "4"
    },
    "12309": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "12310": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12312": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "12314": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP3",
      "path": "4"
    },
    "12315": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "ADD",
      "path": "4"
    },
    "12316": {
      "op": "MSTORE"
    },
    "12317": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "12319": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12321": {
      "op": "DUP3"
    },
    "12322": {
      "op": "ADD"
    },
    "12323": {
      "op": "MSTORE"
    },
    "12324": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "12357": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12359": {
      "op": "DUP3"
    },
    "12360": {
      "op": "ADD"
    },
    "12361": {
      "op": "MSTORE"
    },
    "12362": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "12373": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "12375": {
      "op": "SHL"
    },
    "12376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12378": {
      "op": "DUP3"
    },
    "12379": {
      "op": "ADD"
    },
    "12380": {
      "op": "MSTORE"
    },
    "12381": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "12383": {
      "op": "ADD"
    },
    "12384": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA4E"
    },
    "12387": {
      "op": "JUMP"
    },
    "12388": {
      "fn": "Pausable._requirePaused",
      "offset": [
        1945,
        2051
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "12389": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "12391": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "12392": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "12394": {
      "fn": "Pausable.paused",
      "offset": [
        1685,
        1692
      ],
      "op": "AND",
      "path": "1"
    },
    "12395": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 139,
      "value": "0x12AD"
    },
    "12398": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12399": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "12401": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "12402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12408": {
      "op": "SHL"
    },
    "12409": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "DUP2",
      "path": "1"
    },
    "12410": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "12411": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12413": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "12415": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "DUP3",
      "path": "1"
    },
    "12416": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "ADD",
      "path": "1"
    },
    "12417": {
      "op": "MSTORE"
    },
    "12418": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "12420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12422": {
      "op": "DUP3"
    },
    "12423": {
      "op": "ADD"
    },
    "12424": {
      "op": "MSTORE"
    },
    "12425": {
      "op": "PUSH20",
      "value": "0x14185D5CD8589B194E881B9BDD081C185D5CD959"
    },
    "12446": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "12448": {
      "op": "SHL"
    },
    "12449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12451": {
      "op": "DUP3"
    },
    "12452": {
      "op": "ADD"
    },
    "12453": {
      "op": "MSTORE"
    },
    "12454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12456": {
      "op": "ADD"
    },
    "12457": {
      "fn": "Pausable._requirePaused",
      "offset": [
        2003,
        2044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA4E"
    },
    "12460": {
      "op": "JUMP"
    },
    "12461": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12462": {
      "fn": "Address.functionCall",
      "offset": [
        4006,
        4018
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12464": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 140,
      "value": "0x1F0C"
    },
    "12467": {
      "fn": "Address.functionCall",
      "offset": [
        4059,
        4065
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12468": {
      "fn": "Address.functionCall",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12469": {
      "fn": "Address.functionCall",
      "offset": [
        4073,
        4074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12471": {
      "fn": "Address.functionCall",
      "offset": [
        4076,
        4088
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12472": {
      "fn": "Address.functionCall",
      "offset": [
        4006,
        4018
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5241,
        5253
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5255,
        5278
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5288
      ],
      "op": "DUP7",
      "path": "5"
    },
    "12477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12483": {
      "op": "SHL"
    },
    "12484": {
      "op": "SUB"
    },
    "12485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5293
      ],
      "op": "AND",
      "path": "5"
    },
    "12486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5301,
        5306
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12487": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30D4"
    },
    "12494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12495": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37C2"
    },
    "12499": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SUB",
      "path": "5"
    },
    "12509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP6",
      "path": "5"
    },
    "12511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "GAS",
      "path": "5"
    },
    "12513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "CALL",
      "path": "5"
    },
    "12514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "12515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12517": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "EQ",
      "path": "5"
    },
    "12524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3111"
    },
    "12527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12531": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12532": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "12535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "NOT",
      "path": "5"
    },
    "12536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "12538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12539": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "5"
    },
    "12540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "AND",
      "path": "5"
    },
    "12541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "5"
    },
    "12543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12547": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "12550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP5",
      "path": "5"
    },
    "12555": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "5"
    },
    "12556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "12557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3116"
    },
    "12560": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12566": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12567": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12568": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12570": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "5"
    },
    "12572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 141,
      "value": "0x3127"
    },
    "12575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5357,
        5363
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5365,
        5372
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5384
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5386,
        5398
      ],
      "op": "DUP8",
      "path": "5"
    },
    "12579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3132"
    },
    "12582": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5323,
        5399
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "12585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "12586": {
      "op": "POP"
    },
    "12587": {
      "op": "POP"
    },
    "12588": {
      "op": "POP"
    },
    "12589": {
      "op": "POP"
    },
    "12590": {
      "op": "POP"
    },
    "12591": {
      "op": "POP"
    },
    "12592": {
      "op": "POP"
    },
    "12593": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12594": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7466,
        8094
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12595": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7646,
        7658
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "12597": {
      "branch": 192,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7674,
        7681
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12598": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12599": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31A1"
    },
    "12602": {
      "branch": 192,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12603": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7711
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12604": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7718
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12605": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7722,
        7723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "12607": {
      "branch": 193,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7723
      ],
      "op": "SUB",
      "path": "5"
    },
    "12608": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x319A"
    },
    "12611": {
      "branch": 193,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12618": {
      "op": "SHL"
    },
    "12619": {
      "op": "SUB"
    },
    "12620": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 142
    },
    "12621": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "5"
    },
    "12622": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "12623": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 143,
      "value": "0x319A"
    },
    "12626": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12627": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12629": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12636": {
      "op": "SHL"
    },
    "12637": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12638": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12641": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12643": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP3",
      "path": "5"
    },
    "12644": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "ADD",
      "path": "5"
    },
    "12645": {
      "op": "MSTORE"
    },
    "12646": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "12648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12650": {
      "op": "DUP3"
    },
    "12651": {
      "op": "ADD"
    },
    "12652": {
      "op": "MSTORE"
    },
    "12653": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "12686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "12688": {
      "op": "DUP3"
    },
    "12689": {
      "op": "ADD"
    },
    "12690": {
      "op": "MSTORE"
    },
    "12691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "12693": {
      "op": "ADD"
    },
    "12694": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA4E"
    },
    "12697": {
      "op": "JUMP"
    },
    "12698": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12699": {
      "op": "POP"
    },
    "12700": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8003,
        8013
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 144
    },
    "12701": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F0C"
    },
    "12704": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12705": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12706": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8044,
        8077
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 145,
      "value": "0x1F0C"
    },
    "12709": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8052,
        8062
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12710": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8064,
        8076
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12711": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12712": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12713": {
      "branch": 194,
      "fn": "Address._revert",
      "offset": [
        8775,
        8796
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "12714": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31B6"
    },
    "12717": {
      "branch": 194,
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12718": {
      "fn": "Address._revert",
      "offset": [
        9003,
        9013
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12719": {
      "fn": "Address._revert",
      "offset": [
        8997,
        9014
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12720": {
      "fn": "Address._revert",
      "offset": [
        9059,
        9074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "12721": {
      "fn": "Address._revert",
      "offset": [
        9046,
        9056
      ],
      "op": "DUP4",
      "path": "5"
    },
    "12722": {
      "fn": "Address._revert",
      "offset": [
        9042,
        9044
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "12724": {
      "fn": "Address._revert",
      "offset": [
        9038,
        9057
      ],
      "op": "ADD",
      "path": "5"
    },
    "12725": {
      "fn": "Address._revert",
      "offset": [
        9031,
        9075
      ],
      "op": "REVERT",
      "path": "5"
    },
    "12726": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "12727": {
      "fn": "Address._revert",
      "offset": [
        9126,
        9138
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 146
    },
    "12728": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "12730": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "12731": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "12735": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "12737": {
      "op": "SHL"
    },
    "12738": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "DUP2",
      "path": "5"
    },
    "12739": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "12740": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "12742": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "ADD",
      "path": "5"
    },
    "12743": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA4E"
    },
    "12746": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "12747": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "12748": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x37DE"
    },
    "12751": {
      "fn": "Address._revert",
      "jump": "i",
      "offset": [
        9119,
        9139
      ],
      "op": "JUMP",
      "path": "5"
    },
    "12752": {
      "op": "JUMPDEST"
    },
    "12753": {
      "op": "DUP3"
    },
    "12754": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12756": {
      "op": "DUP2"
    },
    "12757": {
      "op": "ADD"
    },
    "12758": {
      "op": "SWAP3"
    },
    "12759": {
      "op": "DUP3"
    },
    "12760": {
      "op": "ISZERO"
    },
    "12761": {
      "op": "PUSH2",
      "value": "0x3218"
    },
    "12764": {
      "op": "JUMPI"
    },
    "12765": {
      "op": "SWAP2"
    },
    "12766": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12768": {
      "op": "MUL"
    },
    "12769": {
      "op": "DUP3"
    },
    "12770": {
      "op": "ADD"
    },
    "12771": {
      "op": "JUMPDEST"
    },
    "12772": {
      "op": "DUP3"
    },
    "12773": {
      "op": "DUP2"
    },
    "12774": {
      "op": "GT"
    },
    "12775": {
      "op": "ISZERO"
    },
    "12776": {
      "op": "PUSH2",
      "value": "0x3218"
    },
    "12779": {
      "op": "JUMPI"
    },
    "12780": {
      "op": "DUP3"
    },
    "12781": {
      "op": "MLOAD"
    },
    "12782": {
      "op": "DUP3"
    },
    "12783": {
      "op": "SLOAD"
    },
    "12784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12790": {
      "op": "SHL"
    },
    "12791": {
      "op": "SUB"
    },
    "12792": {
      "op": "NOT"
    },
    "12793": {
      "op": "AND"
    },
    "12794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12800": {
      "op": "SHL"
    },
    "12801": {
      "op": "SUB"
    },
    "12802": {
      "op": "SWAP1"
    },
    "12803": {
      "op": "SWAP2"
    },
    "12804": {
      "op": "AND"
    },
    "12805": {
      "op": "OR"
    },
    "12806": {
      "op": "DUP3"
    },
    "12807": {
      "op": "SSTORE"
    },
    "12808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12810": {
      "op": "SWAP1"
    },
    "12811": {
      "op": "SWAP3"
    },
    "12812": {
      "op": "ADD"
    },
    "12813": {
      "op": "SWAP2"
    },
    "12814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12816": {
      "op": "SWAP1"
    },
    "12817": {
      "op": "SWAP2"
    },
    "12818": {
      "op": "ADD"
    },
    "12819": {
      "op": "SWAP1"
    },
    "12820": {
      "op": "PUSH2",
      "value": "0x31E3"
    },
    "12823": {
      "op": "JUMP"
    },
    "12824": {
      "op": "JUMPDEST"
    },
    "12825": {
      "op": "POP"
    },
    "12826": {
      "op": "PUSH2",
      "value": "0x3224"
    },
    "12829": {
      "op": "SWAP3"
    },
    "12830": {
      "op": "SWAP2"
    },
    "12831": {
      "op": "POP"
    },
    "12832": {
      "op": "PUSH2",
      "value": "0x3228"
    },
    "12835": {
      "jump": "i",
      "op": "JUMP"
    },
    "12836": {
      "op": "JUMPDEST"
    },
    "12837": {
      "op": "POP"
    },
    "12838": {
      "op": "SWAP1"
    },
    "12839": {
      "jump": "o",
      "op": "JUMP"
    },
    "12840": {
      "op": "JUMPDEST"
    },
    "12841": {
      "op": "JUMPDEST"
    },
    "12842": {
      "op": "DUP1"
    },
    "12843": {
      "op": "DUP3"
    },
    "12844": {
      "op": "GT"
    },
    "12845": {
      "op": "ISZERO"
    },
    "12846": {
      "op": "PUSH2",
      "value": "0x3224"
    },
    "12849": {
      "op": "JUMPI"
    },
    "12850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12852": {
      "op": "DUP2"
    },
    "12853": {
      "op": "SSTORE"
    },
    "12854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12856": {
      "op": "ADD"
    },
    "12857": {
      "op": "PUSH2",
      "value": "0x3229"
    },
    "12860": {
      "op": "JUMP"
    },
    "12861": {
      "op": "JUMPDEST"
    },
    "12862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12864": {
      "op": "DUP1"
    },
    "12865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12867": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12869": {
      "op": "DUP5"
    },
    "12870": {
      "op": "DUP7"
    },
    "12871": {
      "op": "SUB"
    },
    "12872": {
      "op": "SLT"
    },
    "12873": {
      "op": "ISZERO"
    },
    "12874": {
      "op": "PUSH2",
      "value": "0x3252"
    },
    "12877": {
      "op": "JUMPI"
    },
    "12878": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12880": {
      "op": "DUP1"
    },
    "12881": {
      "op": "REVERT"
    },
    "12882": {
      "op": "JUMPDEST"
    },
    "12883": {
      "op": "POP"
    },
    "12884": {
      "op": "POP"
    },
    "12885": {
      "op": "DUP2"
    },
    "12886": {
      "op": "CALLDATALOAD"
    },
    "12887": {
      "op": "SWAP4"
    },
    "12888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12890": {
      "op": "DUP4"
    },
    "12891": {
      "op": "ADD"
    },
    "12892": {
      "op": "CALLDATALOAD"
    },
    "12893": {
      "op": "SWAP4"
    },
    "12894": {
      "op": "POP"
    },
    "12895": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12897": {
      "op": "SWAP1"
    },
    "12898": {
      "op": "SWAP3"
    },
    "12899": {
      "op": "ADD"
    },
    "12900": {
      "op": "CALLDATALOAD"
    },
    "12901": {
      "op": "SWAP2"
    },
    "12902": {
      "op": "SWAP1"
    },
    "12903": {
      "op": "POP"
    },
    "12904": {
      "jump": "o",
      "op": "JUMP"
    },
    "12905": {
      "op": "JUMPDEST"
    },
    "12906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12908": {
      "op": "DUP1"
    },
    "12909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12911": {
      "op": "DUP4"
    },
    "12912": {
      "op": "DUP6"
    },
    "12913": {
      "op": "SUB"
    },
    "12914": {
      "op": "SLT"
    },
    "12915": {
      "op": "ISZERO"
    },
    "12916": {
      "op": "PUSH2",
      "value": "0x327C"
    },
    "12919": {
      "op": "JUMPI"
    },
    "12920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12922": {
      "op": "DUP1"
    },
    "12923": {
      "op": "REVERT"
    },
    "12924": {
      "op": "JUMPDEST"
    },
    "12925": {
      "op": "POP"
    },
    "12926": {
      "op": "POP"
    },
    "12927": {
      "op": "DUP1"
    },
    "12928": {
      "op": "CALLDATALOAD"
    },
    "12929": {
      "op": "SWAP3"
    },
    "12930": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12932": {
      "op": "SWAP1"
    },
    "12933": {
      "op": "SWAP2"
    },
    "12934": {
      "op": "ADD"
    },
    "12935": {
      "op": "CALLDATALOAD"
    },
    "12936": {
      "op": "SWAP2"
    },
    "12937": {
      "op": "POP"
    },
    "12938": {
      "jump": "o",
      "op": "JUMP"
    },
    "12939": {
      "op": "JUMPDEST"
    },
    "12940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12944": {
      "op": "DUP3"
    },
    "12945": {
      "op": "DUP5"
    },
    "12946": {
      "op": "SUB"
    },
    "12947": {
      "op": "SLT"
    },
    "12948": {
      "op": "ISZERO"
    },
    "12949": {
      "op": "PUSH2",
      "value": "0x329D"
    },
    "12952": {
      "op": "JUMPI"
    },
    "12953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12955": {
      "op": "DUP1"
    },
    "12956": {
      "op": "REVERT"
    },
    "12957": {
      "op": "JUMPDEST"
    },
    "12958": {
      "op": "POP"
    },
    "12959": {
      "op": "CALLDATALOAD"
    },
    "12960": {
      "op": "SWAP2"
    },
    "12961": {
      "op": "SWAP1"
    },
    "12962": {
      "op": "POP"
    },
    "12963": {
      "jump": "o",
      "op": "JUMP"
    },
    "12964": {
      "op": "JUMPDEST"
    },
    "12965": {
      "op": "DUP1"
    },
    "12966": {
      "op": "CALLDATALOAD"
    },
    "12967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12973": {
      "op": "SHL"
    },
    "12974": {
      "op": "SUB"
    },
    "12975": {
      "op": "DUP2"
    },
    "12976": {
      "op": "AND"
    },
    "12977": {
      "op": "DUP2"
    },
    "12978": {
      "op": "EQ"
    },
    "12979": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "12982": {
      "op": "JUMPI"
    },
    "12983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12985": {
      "op": "DUP1"
    },
    "12986": {
      "op": "REVERT"
    },
    "12987": {
      "op": "JUMPDEST"
    },
    "12988": {
      "op": "SWAP2"
    },
    "12989": {
      "op": "SWAP1"
    },
    "12990": {
      "op": "POP"
    },
    "12991": {
      "jump": "o",
      "op": "JUMP"
    },
    "12992": {
      "op": "JUMPDEST"
    },
    "12993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12995": {
      "op": "DUP1"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12998": {
      "op": "DUP4"
    },
    "12999": {
      "op": "DUP6"
    },
    "13000": {
      "op": "SUB"
    },
    "13001": {
      "op": "SLT"
    },
    "13002": {
      "op": "ISZERO"
    },
    "13003": {
      "op": "PUSH2",
      "value": "0x32D3"
    },
    "13006": {
      "op": "JUMPI"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13009": {
      "op": "DUP1"
    },
    "13010": {
      "op": "REVERT"
    },
    "13011": {
      "op": "JUMPDEST"
    },
    "13012": {
      "op": "PUSH2",
      "value": "0x32DC"
    },
    "13015": {
      "op": "DUP4"
    },
    "13016": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13019": {
      "jump": "i",
      "op": "JUMP"
    },
    "13020": {
      "op": "JUMPDEST"
    },
    "13021": {
      "op": "SWAP5"
    },
    "13022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13024": {
      "op": "SWAP4"
    },
    "13025": {
      "op": "SWAP1"
    },
    "13026": {
      "op": "SWAP4"
    },
    "13027": {
      "op": "ADD"
    },
    "13028": {
      "op": "CALLDATALOAD"
    },
    "13029": {
      "op": "SWAP4"
    },
    "13030": {
      "op": "POP"
    },
    "13031": {
      "op": "POP"
    },
    "13032": {
      "op": "POP"
    },
    "13033": {
      "jump": "o",
      "op": "JUMP"
    },
    "13034": {
      "op": "JUMPDEST"
    },
    "13035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13037": {
      "op": "DUP1"
    },
    "13038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13040": {
      "op": "DUP1"
    },
    "13041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13043": {
      "op": "DUP1"
    },
    "13044": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "13046": {
      "op": "DUP8"
    },
    "13047": {
      "op": "DUP10"
    },
    "13048": {
      "op": "SUB"
    },
    "13049": {
      "op": "SLT"
    },
    "13050": {
      "op": "ISZERO"
    },
    "13051": {
      "op": "PUSH2",
      "value": "0x3303"
    },
    "13054": {
      "op": "JUMPI"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13057": {
      "op": "DUP1"
    },
    "13058": {
      "op": "REVERT"
    },
    "13059": {
      "op": "JUMPDEST"
    },
    "13060": {
      "op": "DUP7"
    },
    "13061": {
      "op": "CALLDATALOAD"
    },
    "13062": {
      "op": "SWAP6"
    },
    "13063": {
      "op": "POP"
    },
    "13064": {
      "op": "PUSH2",
      "value": "0x3313"
    },
    "13067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13069": {
      "op": "DUP9"
    },
    "13070": {
      "op": "ADD"
    },
    "13071": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13074": {
      "jump": "i",
      "op": "JUMP"
    },
    "13075": {
      "op": "JUMPDEST"
    },
    "13076": {
      "op": "SWAP5"
    },
    "13077": {
      "op": "POP"
    },
    "13078": {
      "op": "PUSH2",
      "value": "0x3321"
    },
    "13081": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13083": {
      "op": "DUP9"
    },
    "13084": {
      "op": "ADD"
    },
    "13085": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13088": {
      "jump": "i",
      "op": "JUMP"
    },
    "13089": {
      "op": "JUMPDEST"
    },
    "13090": {
      "op": "SWAP4"
    },
    "13091": {
      "op": "POP"
    },
    "13092": {
      "op": "PUSH2",
      "value": "0x332F"
    },
    "13095": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13097": {
      "op": "DUP9"
    },
    "13098": {
      "op": "ADD"
    },
    "13099": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13102": {
      "jump": "i",
      "op": "JUMP"
    },
    "13103": {
      "op": "JUMPDEST"
    },
    "13104": {
      "op": "SWAP3"
    },
    "13105": {
      "op": "POP"
    },
    "13106": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13108": {
      "op": "DUP8"
    },
    "13109": {
      "op": "ADD"
    },
    "13110": {
      "op": "CALLDATALOAD"
    },
    "13111": {
      "op": "SWAP2"
    },
    "13112": {
      "op": "POP"
    },
    "13113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13115": {
      "op": "DUP8"
    },
    "13116": {
      "op": "ADD"
    },
    "13117": {
      "op": "CALLDATALOAD"
    },
    "13118": {
      "op": "SWAP1"
    },
    "13119": {
      "op": "POP"
    },
    "13120": {
      "op": "SWAP3"
    },
    "13121": {
      "op": "SWAP6"
    },
    "13122": {
      "op": "POP"
    },
    "13123": {
      "op": "SWAP3"
    },
    "13124": {
      "op": "SWAP6"
    },
    "13125": {
      "op": "POP"
    },
    "13126": {
      "op": "SWAP3"
    },
    "13127": {
      "op": "SWAP6"
    },
    "13128": {
      "jump": "o",
      "op": "JUMP"
    },
    "13129": {
      "op": "JUMPDEST"
    },
    "13130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13134": {
      "op": "DUP3"
    },
    "13135": {
      "op": "DUP5"
    },
    "13136": {
      "op": "SUB"
    },
    "13137": {
      "op": "SLT"
    },
    "13138": {
      "op": "ISZERO"
    },
    "13139": {
      "op": "PUSH2",
      "value": "0x335B"
    },
    "13142": {
      "op": "JUMPI"
    },
    "13143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13145": {
      "op": "DUP1"
    },
    "13146": {
      "op": "REVERT"
    },
    "13147": {
      "op": "JUMPDEST"
    },
    "13148": {
      "op": "PUSH2",
      "value": "0xCFD"
    },
    "13151": {
      "op": "DUP3"
    },
    "13152": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13155": {
      "jump": "i",
      "op": "JUMP"
    },
    "13156": {
      "op": "JUMPDEST"
    },
    "13157": {
      "op": "DUP1"
    },
    "13158": {
      "op": "CALLDATALOAD"
    },
    "13159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13163": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13165": {
      "op": "SHL"
    },
    "13166": {
      "op": "SUB"
    },
    "13167": {
      "op": "DUP2"
    },
    "13168": {
      "op": "AND"
    },
    "13169": {
      "op": "DUP2"
    },
    "13170": {
      "op": "EQ"
    },
    "13171": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "13174": {
      "op": "JUMPI"
    },
    "13175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13177": {
      "op": "DUP1"
    },
    "13178": {
      "op": "REVERT"
    },
    "13179": {
      "op": "JUMPDEST"
    },
    "13180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13184": {
      "op": "DUP3"
    },
    "13185": {
      "op": "DUP5"
    },
    "13186": {
      "op": "SUB"
    },
    "13187": {
      "op": "SLT"
    },
    "13188": {
      "op": "ISZERO"
    },
    "13189": {
      "op": "PUSH2",
      "value": "0x338D"
    },
    "13192": {
      "op": "JUMPI"
    },
    "13193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13195": {
      "op": "DUP1"
    },
    "13196": {
      "op": "REVERT"
    },
    "13197": {
      "op": "JUMPDEST"
    },
    "13198": {
      "op": "PUSH2",
      "value": "0xCFD"
    },
    "13201": {
      "op": "DUP3"
    },
    "13202": {
      "op": "PUSH2",
      "value": "0x3364"
    },
    "13205": {
      "jump": "i",
      "op": "JUMP"
    },
    "13206": {
      "op": "JUMPDEST"
    },
    "13207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13209": {
      "op": "DUP1"
    },
    "13210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13212": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13214": {
      "op": "DUP5"
    },
    "13215": {
      "op": "DUP7"
    },
    "13216": {
      "op": "SUB"
    },
    "13217": {
      "op": "SLT"
    },
    "13218": {
      "op": "ISZERO"
    },
    "13219": {
      "op": "PUSH2",
      "value": "0x33AB"
    },
    "13222": {
      "op": "JUMPI"
    },
    "13223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13225": {
      "op": "DUP1"
    },
    "13226": {
      "op": "REVERT"
    },
    "13227": {
      "op": "JUMPDEST"
    },
    "13228": {
      "op": "PUSH2",
      "value": "0x33B4"
    },
    "13231": {
      "op": "DUP5"
    },
    "13232": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13235": {
      "jump": "i",
      "op": "JUMP"
    },
    "13236": {
      "op": "JUMPDEST"
    },
    "13237": {
      "op": "SWAP6"
    },
    "13238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13240": {
      "op": "DUP6"
    },
    "13241": {
      "op": "ADD"
    },
    "13242": {
      "op": "CALLDATALOAD"
    },
    "13243": {
      "op": "SWAP6"
    },
    "13244": {
      "op": "POP"
    },
    "13245": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13247": {
      "op": "SWAP1"
    },
    "13248": {
      "op": "SWAP5"
    },
    "13249": {
      "op": "ADD"
    },
    "13250": {
      "op": "CALLDATALOAD"
    },
    "13251": {
      "op": "SWAP4"
    },
    "13252": {
      "op": "SWAP3"
    },
    "13253": {
      "op": "POP"
    },
    "13254": {
      "op": "POP"
    },
    "13255": {
      "op": "POP"
    },
    "13256": {
      "jump": "o",
      "op": "JUMP"
    },
    "13257": {
      "op": "JUMPDEST"
    },
    "13258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13260": {
      "op": "DUP1"
    },
    "13261": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13263": {
      "op": "DUP1"
    },
    "13264": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13266": {
      "op": "DUP6"
    },
    "13267": {
      "op": "DUP8"
    },
    "13268": {
      "op": "SUB"
    },
    "13269": {
      "op": "SLT"
    },
    "13270": {
      "op": "ISZERO"
    },
    "13271": {
      "op": "PUSH2",
      "value": "0x33DF"
    },
    "13274": {
      "op": "JUMPI"
    },
    "13275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13277": {
      "op": "DUP1"
    },
    "13278": {
      "op": "REVERT"
    },
    "13279": {
      "op": "JUMPDEST"
    },
    "13280": {
      "op": "DUP5"
    },
    "13281": {
      "op": "CALLDATALOAD"
    },
    "13282": {
      "op": "SWAP4"
    },
    "13283": {
      "op": "POP"
    },
    "13284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13286": {
      "op": "DUP6"
    },
    "13287": {
      "op": "ADD"
    },
    "13288": {
      "op": "CALLDATALOAD"
    },
    "13289": {
      "op": "SWAP3"
    },
    "13290": {
      "op": "POP"
    },
    "13291": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13293": {
      "op": "DUP6"
    },
    "13294": {
      "op": "ADD"
    },
    "13295": {
      "op": "CALLDATALOAD"
    },
    "13296": {
      "op": "SWAP2"
    },
    "13297": {
      "op": "POP"
    },
    "13298": {
      "op": "PUSH2",
      "value": "0x33FD"
    },
    "13301": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13303": {
      "op": "DUP7"
    },
    "13304": {
      "op": "ADD"
    },
    "13305": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13308": {
      "jump": "i",
      "op": "JUMP"
    },
    "13309": {
      "op": "JUMPDEST"
    },
    "13310": {
      "op": "SWAP1"
    },
    "13311": {
      "op": "POP"
    },
    "13312": {
      "op": "SWAP3"
    },
    "13313": {
      "op": "SWAP6"
    },
    "13314": {
      "op": "SWAP2"
    },
    "13315": {
      "op": "SWAP5"
    },
    "13316": {
      "op": "POP"
    },
    "13317": {
      "op": "SWAP3"
    },
    "13318": {
      "op": "POP"
    },
    "13319": {
      "jump": "o",
      "op": "JUMP"
    },
    "13320": {
      "op": "JUMPDEST"
    },
    "13321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13323": {
      "op": "DUP1"
    },
    "13324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13326": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13328": {
      "op": "DUP5"
    },
    "13329": {
      "op": "DUP7"
    },
    "13330": {
      "op": "SUB"
    },
    "13331": {
      "op": "SLT"
    },
    "13332": {
      "op": "ISZERO"
    },
    "13333": {
      "op": "PUSH2",
      "value": "0x341D"
    },
    "13336": {
      "op": "JUMPI"
    },
    "13337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13339": {
      "op": "DUP1"
    },
    "13340": {
      "op": "REVERT"
    },
    "13341": {
      "op": "JUMPDEST"
    },
    "13342": {
      "op": "DUP4"
    },
    "13343": {
      "op": "CALLDATALOAD"
    },
    "13344": {
      "op": "SWAP3"
    },
    "13345": {
      "op": "POP"
    },
    "13346": {
      "op": "PUSH2",
      "value": "0x342D"
    },
    "13349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13351": {
      "op": "DUP6"
    },
    "13352": {
      "op": "ADD"
    },
    "13353": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13356": {
      "jump": "i",
      "op": "JUMP"
    },
    "13357": {
      "op": "JUMPDEST"
    },
    "13358": {
      "op": "SWAP2"
    },
    "13359": {
      "op": "POP"
    },
    "13360": {
      "op": "PUSH2",
      "value": "0x343B"
    },
    "13363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13365": {
      "op": "DUP6"
    },
    "13366": {
      "op": "ADD"
    },
    "13367": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13370": {
      "jump": "i",
      "op": "JUMP"
    },
    "13371": {
      "op": "JUMPDEST"
    },
    "13372": {
      "op": "SWAP1"
    },
    "13373": {
      "op": "POP"
    },
    "13374": {
      "op": "SWAP3"
    },
    "13375": {
      "op": "POP"
    },
    "13376": {
      "op": "SWAP3"
    },
    "13377": {
      "op": "POP"
    },
    "13378": {
      "op": "SWAP3"
    },
    "13379": {
      "jump": "o",
      "op": "JUMP"
    },
    "13380": {
      "op": "JUMPDEST"
    },
    "13381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13383": {
      "op": "DUP1"
    },
    "13384": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13386": {
      "op": "DUP4"
    },
    "13387": {
      "op": "DUP6"
    },
    "13388": {
      "op": "SUB"
    },
    "13389": {
      "op": "SLT"
    },
    "13390": {
      "op": "ISZERO"
    },
    "13391": {
      "op": "PUSH2",
      "value": "0x3457"
    },
    "13394": {
      "op": "JUMPI"
    },
    "13395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13397": {
      "op": "DUP1"
    },
    "13398": {
      "op": "REVERT"
    },
    "13399": {
      "op": "JUMPDEST"
    },
    "13400": {
      "op": "PUSH2",
      "value": "0x3460"
    },
    "13403": {
      "op": "DUP4"
    },
    "13404": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13407": {
      "jump": "i",
      "op": "JUMP"
    },
    "13408": {
      "op": "JUMPDEST"
    },
    "13409": {
      "op": "SWAP2"
    },
    "13410": {
      "op": "POP"
    },
    "13411": {
      "op": "PUSH2",
      "value": "0x346E"
    },
    "13414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13416": {
      "op": "DUP5"
    },
    "13417": {
      "op": "ADD"
    },
    "13418": {
      "op": "PUSH2",
      "value": "0x3364"
    },
    "13421": {
      "jump": "i",
      "op": "JUMP"
    },
    "13422": {
      "op": "JUMPDEST"
    },
    "13423": {
      "op": "SWAP1"
    },
    "13424": {
      "op": "POP"
    },
    "13425": {
      "op": "SWAP3"
    },
    "13426": {
      "op": "POP"
    },
    "13427": {
      "op": "SWAP3"
    },
    "13428": {
      "op": "SWAP1"
    },
    "13429": {
      "op": "POP"
    },
    "13430": {
      "jump": "o",
      "op": "JUMP"
    },
    "13431": {
      "op": "JUMPDEST"
    },
    "13432": {
      "op": "DUP1"
    },
    "13433": {
      "op": "CALLDATALOAD"
    },
    "13434": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "13439": {
      "op": "DUP2"
    },
    "13440": {
      "op": "AND"
    },
    "13441": {
      "op": "DUP2"
    },
    "13442": {
      "op": "EQ"
    },
    "13443": {
      "op": "PUSH2",
      "value": "0x32BB"
    },
    "13446": {
      "op": "JUMPI"
    },
    "13447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13449": {
      "op": "DUP1"
    },
    "13450": {
      "op": "REVERT"
    },
    "13451": {
      "op": "JUMPDEST"
    },
    "13452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13454": {
      "op": "DUP1"
    },
    "13455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13457": {
      "op": "DUP1"
    },
    "13458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13462": {
      "op": "DUP7"
    },
    "13463": {
      "op": "DUP9"
    },
    "13464": {
      "op": "SUB"
    },
    "13465": {
      "op": "SLT"
    },
    "13466": {
      "op": "ISZERO"
    },
    "13467": {
      "op": "PUSH2",
      "value": "0x34A3"
    },
    "13470": {
      "op": "JUMPI"
    },
    "13471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13473": {
      "op": "DUP1"
    },
    "13474": {
      "op": "REVERT"
    },
    "13475": {
      "op": "JUMPDEST"
    },
    "13476": {
      "op": "PUSH2",
      "value": "0x34AC"
    },
    "13479": {
      "op": "DUP7"
    },
    "13480": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13483": {
      "jump": "i",
      "op": "JUMP"
    },
    "13484": {
      "op": "JUMPDEST"
    },
    "13485": {
      "op": "SWAP5"
    },
    "13486": {
      "op": "POP"
    },
    "13487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13489": {
      "op": "DUP7"
    },
    "13490": {
      "op": "ADD"
    },
    "13491": {
      "op": "CALLDATALOAD"
    },
    "13492": {
      "op": "SWAP4"
    },
    "13493": {
      "op": "POP"
    },
    "13494": {
      "op": "PUSH2",
      "value": "0x34C1"
    },
    "13497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13499": {
      "op": "DUP8"
    },
    "13500": {
      "op": "ADD"
    },
    "13501": {
      "op": "PUSH2",
      "value": "0x3364"
    },
    "13504": {
      "jump": "i",
      "op": "JUMP"
    },
    "13505": {
      "op": "JUMPDEST"
    },
    "13506": {
      "op": "SWAP3"
    },
    "13507": {
      "op": "POP"
    },
    "13508": {
      "op": "PUSH2",
      "value": "0x34CF"
    },
    "13511": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13513": {
      "op": "DUP8"
    },
    "13514": {
      "op": "ADD"
    },
    "13515": {
      "op": "PUSH2",
      "value": "0x3477"
    },
    "13518": {
      "jump": "i",
      "op": "JUMP"
    },
    "13519": {
      "op": "JUMPDEST"
    },
    "13520": {
      "op": "SWAP2"
    },
    "13521": {
      "op": "POP"
    },
    "13522": {
      "op": "PUSH2",
      "value": "0x34DD"
    },
    "13525": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13527": {
      "op": "DUP8"
    },
    "13528": {
      "op": "ADD"
    },
    "13529": {
      "op": "PUSH2",
      "value": "0x3477"
    },
    "13532": {
      "jump": "i",
      "op": "JUMP"
    },
    "13533": {
      "op": "JUMPDEST"
    },
    "13534": {
      "op": "SWAP1"
    },
    "13535": {
      "op": "POP"
    },
    "13536": {
      "op": "SWAP3"
    },
    "13537": {
      "op": "SWAP6"
    },
    "13538": {
      "op": "POP"
    },
    "13539": {
      "op": "SWAP3"
    },
    "13540": {
      "op": "SWAP6"
    },
    "13541": {
      "op": "SWAP1"
    },
    "13542": {
      "op": "SWAP4"
    },
    "13543": {
      "op": "POP"
    },
    "13544": {
      "jump": "o",
      "op": "JUMP"
    },
    "13545": {
      "op": "JUMPDEST"
    },
    "13546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13548": {
      "op": "DUP1"
    },
    "13549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13551": {
      "op": "DUP4"
    },
    "13552": {
      "op": "DUP6"
    },
    "13553": {
      "op": "SUB"
    },
    "13554": {
      "op": "SLT"
    },
    "13555": {
      "op": "ISZERO"
    },
    "13556": {
      "op": "PUSH2",
      "value": "0x34FC"
    },
    "13559": {
      "op": "JUMPI"
    },
    "13560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13562": {
      "op": "DUP1"
    },
    "13563": {
      "op": "REVERT"
    },
    "13564": {
      "op": "JUMPDEST"
    },
    "13565": {
      "op": "PUSH2",
      "value": "0x3505"
    },
    "13568": {
      "op": "DUP4"
    },
    "13569": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13572": {
      "jump": "i",
      "op": "JUMP"
    },
    "13573": {
      "op": "JUMPDEST"
    },
    "13574": {
      "op": "SWAP2"
    },
    "13575": {
      "op": "POP"
    },
    "13576": {
      "op": "PUSH2",
      "value": "0x346E"
    },
    "13579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13581": {
      "op": "DUP5"
    },
    "13582": {
      "op": "ADD"
    },
    "13583": {
      "op": "PUSH2",
      "value": "0x32A4"
    },
    "13586": {
      "jump": "i",
      "op": "JUMP"
    },
    "13587": {
      "op": "JUMPDEST"
    },
    "13588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13590": {
      "op": "DUP1"
    },
    "13591": {
      "op": "DUP3"
    },
    "13592": {
      "op": "MSTORE"
    },
    "13593": {
      "op": "DUP2"
    },
    "13594": {
      "op": "DUP2"
    },
    "13595": {
      "op": "ADD"
    },
    "13596": {
      "op": "MSTORE"
    },
    "13597": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A2063616C6C20646973616C6C6F776564"
    },
    "13630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13632": {
      "op": "DUP3"
    },
    "13633": {
      "op": "ADD"
    },
    "13634": {
      "op": "MSTORE"
    },
    "13635": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13637": {
      "op": "ADD"
    },
    "13638": {
      "op": "SWAP1"
    },
    "13639": {
      "jump": "o",
      "op": "JUMP"
    },
    "13640": {
      "op": "JUMPDEST"
    },
    "13641": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13643": {
      "op": "DUP1"
    },
    "13644": {
      "op": "DUP3"
    },
    "13645": {
      "op": "MSTORE"
    },
    "13646": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13648": {
      "op": "SWAP1"
    },
    "13649": {
      "op": "DUP3"
    },
    "13650": {
      "op": "ADD"
    },
    "13651": {
      "op": "MSTORE"
    },
    "13652": {
      "op": "PUSH32",
      "value": "0x5265737472696374656443616C6C733A206D657373656E676572206E6F742073"
    },
    "13685": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13687": {
      "op": "DUP3"
    },
    "13688": {
      "op": "ADD"
    },
    "13689": {
      "op": "MSTORE"
    },
    "13690": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "13693": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "13695": {
      "op": "SHL"
    },
    "13696": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13698": {
      "op": "DUP3"
    },
    "13699": {
      "op": "ADD"
    },
    "13700": {
      "op": "MSTORE"
    },
    "13701": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13703": {
      "op": "ADD"
    },
    "13704": {
      "op": "SWAP1"
    },
    "13705": {
      "jump": "o",
      "op": "JUMP"
    },
    "13706": {
      "op": "JUMPDEST"
    },
    "13707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13709": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13711": {
      "op": "DUP3"
    },
    "13712": {
      "op": "DUP5"
    },
    "13713": {
      "op": "SUB"
    },
    "13714": {
      "op": "SLT"
    },
    "13715": {
      "op": "ISZERO"
    },
    "13716": {
      "op": "PUSH2",
      "value": "0x359C"
    },
    "13719": {
      "op": "JUMPI"
    },
    "13720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13722": {
      "op": "DUP1"
    },
    "13723": {
      "op": "REVERT"
    },
    "13724": {
      "op": "JUMPDEST"
    },
    "13725": {
      "op": "DUP2"
    },
    "13726": {
      "op": "MLOAD"
    },
    "13727": {
      "op": "DUP1"
    },
    "13728": {
      "op": "ISZERO"
    },
    "13729": {
      "op": "ISZERO"
    },
    "13730": {
      "op": "DUP2"
    },
    "13731": {
      "op": "EQ"
    },
    "13732": {
      "op": "PUSH2",
      "value": "0xCFD"
    },
    "13735": {
      "op": "JUMPI"
    },
    "13736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13738": {
      "op": "DUP1"
    },
    "13739": {
      "op": "REVERT"
    },
    "13740": {
      "op": "JUMPDEST"
    },
    "13741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13743": {
      "op": "DUP1"
    },
    "13744": {
      "op": "DUP3"
    },
    "13745": {
      "op": "MSTORE"
    },
    "13746": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "13748": {
      "op": "SWAP1"
    },
    "13749": {
      "op": "DUP3"
    },
    "13750": {
      "op": "ADD"
    },
    "13751": {
      "op": "MSTORE"
    },
    "13752": {
      "op": "PUSH19",
      "value": "0x1C995C5D595CDD1259081B9BDD081D985B1A59"
    },
    "13772": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "13774": {
      "op": "SHL"
    },
    "13775": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13777": {
      "op": "DUP3"
    },
    "13778": {
      "op": "ADD"
    },
    "13779": {
      "op": "MSTORE"
    },
    "13780": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13782": {
      "op": "ADD"
    },
    "13783": {
      "op": "SWAP1"
    },
    "13784": {
      "jump": "o",
      "op": "JUMP"
    },
    "13785": {
      "op": "JUMPDEST"
    },
    "13786": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13791": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13793": {
      "op": "SHL"
    },
    "13794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13796": {
      "op": "MSTORE"
    },
    "13797": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "13799": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13801": {
      "op": "MSTORE"
    },
    "13802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13806": {
      "op": "REVERT"
    },
    "13807": {
      "op": "JUMPDEST"
    },
    "13808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13810": {
      "op": "DUP3"
    },
    "13811": {
      "op": "NOT"
    },
    "13812": {
      "op": "DUP3"
    },
    "13813": {
      "op": "GT"
    },
    "13814": {
      "op": "ISZERO"
    },
    "13815": {
      "op": "PUSH2",
      "value": "0x3602"
    },
    "13818": {
      "op": "JUMPI"
    },
    "13819": {
      "op": "PUSH2",
      "value": "0x3602"
    },
    "13822": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "13825": {
      "jump": "i",
      "op": "JUMP"
    },
    "13826": {
      "op": "JUMPDEST"
    },
    "13827": {
      "op": "POP"
    },
    "13828": {
      "op": "ADD"
    },
    "13829": {
      "op": "SWAP1"
    },
    "13830": {
      "jump": "o",
      "op": "JUMP"
    },
    "13831": {
      "op": "JUMPDEST"
    },
    "13832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13834": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13836": {
      "op": "DUP3"
    },
    "13837": {
      "op": "DUP5"
    },
    "13838": {
      "op": "SUB"
    },
    "13839": {
      "op": "SLT"
    },
    "13840": {
      "op": "ISZERO"
    },
    "13841": {
      "op": "PUSH2",
      "value": "0x3619"
    },
    "13844": {
      "op": "JUMPI"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13847": {
      "op": "DUP1"
    },
    "13848": {
      "op": "REVERT"
    },
    "13849": {
      "op": "JUMPDEST"
    },
    "13850": {
      "op": "POP"
    },
    "13851": {
      "op": "MLOAD"
    },
    "13852": {
      "op": "SWAP2"
    },
    "13853": {
      "op": "SWAP1"
    },
    "13854": {
      "op": "POP"
    },
    "13855": {
      "jump": "o",
      "op": "JUMP"
    },
    "13856": {
      "op": "JUMPDEST"
    },
    "13857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13863": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13865": {
      "op": "SHL"
    },
    "13866": {
      "op": "SUB"
    },
    "13867": {
      "op": "DUP1"
    },
    "13868": {
      "op": "DUP4"
    },
    "13869": {
      "op": "AND"
    },
    "13870": {
      "op": "DUP2"
    },
    "13871": {
      "op": "DUP6"
    },
    "13872": {
      "op": "AND"
    },
    "13873": {
      "op": "DUP1"
    },
    "13874": {
      "op": "DUP4"
    },
    "13875": {
      "op": "SUB"
    },
    "13876": {
      "op": "DUP3"
    },
    "13877": {
      "op": "GT"
    },
    "13878": {
      "op": "ISZERO"
    },
    "13879": {
      "op": "PUSH2",
      "value": "0x3642"
    },
    "13882": {
      "op": "JUMPI"
    },
    "13883": {
      "op": "PUSH2",
      "value": "0x3642"
    },
    "13886": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "13889": {
      "jump": "i",
      "op": "JUMP"
    },
    "13890": {
      "op": "JUMPDEST"
    },
    "13891": {
      "op": "ADD"
    },
    "13892": {
      "op": "SWAP5"
    },
    "13893": {
      "op": "SWAP4"
    },
    "13894": {
      "op": "POP"
    },
    "13895": {
      "op": "POP"
    },
    "13896": {
      "op": "POP"
    },
    "13897": {
      "op": "POP"
    },
    "13898": {
      "jump": "o",
      "op": "JUMP"
    },
    "13899": {
      "op": "JUMPDEST"
    },
    "13900": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13902": {
      "op": "DUP2"
    },
    "13903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13905": {
      "op": "NOT"
    },
    "13906": {
      "op": "DIV"
    },
    "13907": {
      "op": "DUP4"
    },
    "13908": {
      "op": "GT"
    },
    "13909": {
      "op": "DUP3"
    },
    "13910": {
      "op": "ISZERO"
    },
    "13911": {
      "op": "ISZERO"
    },
    "13912": {
      "op": "AND"
    },
    "13913": {
      "op": "ISZERO"
    },
    "13914": {
      "op": "PUSH2",
      "value": "0x3665"
    },
    "13917": {
      "op": "JUMPI"
    },
    "13918": {
      "op": "PUSH2",
      "value": "0x3665"
    },
    "13921": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "13924": {
      "jump": "i",
      "op": "JUMP"
    },
    "13925": {
      "op": "JUMPDEST"
    },
    "13926": {
      "op": "POP"
    },
    "13927": {
      "op": "MUL"
    },
    "13928": {
      "op": "SWAP1"
    },
    "13929": {
      "jump": "o",
      "op": "JUMP"
    },
    "13930": {
      "op": "JUMPDEST"
    },
    "13931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13933": {
      "op": "DUP3"
    },
    "13934": {
      "op": "PUSH2",
      "value": "0x3687"
    },
    "13937": {
      "op": "JUMPI"
    },
    "13938": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13943": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13945": {
      "op": "SHL"
    },
    "13946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13948": {
      "op": "MSTORE"
    },
    "13949": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13951": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13953": {
      "op": "MSTORE"
    },
    "13954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13958": {
      "op": "REVERT"
    },
    "13959": {
      "op": "JUMPDEST"
    },
    "13960": {
      "op": "POP"
    },
    "13961": {
      "op": "DIV"
    },
    "13962": {
      "op": "SWAP1"
    },
    "13963": {
      "jump": "o",
      "op": "JUMP"
    },
    "13964": {
      "op": "JUMPDEST"
    },
    "13965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13967": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "13972": {
      "op": "DUP1"
    },
    "13973": {
      "op": "DUP4"
    },
    "13974": {
      "op": "AND"
    },
    "13975": {
      "op": "DUP2"
    },
    "13976": {
      "op": "DUP6"
    },
    "13977": {
      "op": "AND"
    },
    "13978": {
      "op": "DUP1"
    },
    "13979": {
      "op": "DUP4"
    },
    "13980": {
      "op": "SUB"
    },
    "13981": {
      "op": "DUP3"
    },
    "13982": {
      "op": "GT"
    },
    "13983": {
      "op": "ISZERO"
    },
    "13984": {
      "op": "PUSH2",
      "value": "0x3642"
    },
    "13987": {
      "op": "JUMPI"
    },
    "13988": {
      "op": "PUSH2",
      "value": "0x3642"
    },
    "13991": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "13994": {
      "jump": "i",
      "op": "JUMP"
    },
    "13995": {
      "op": "JUMPDEST"
    },
    "13996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14000": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14002": {
      "op": "SHL"
    },
    "14003": {
      "op": "SUB"
    },
    "14004": {
      "op": "SWAP8"
    },
    "14005": {
      "op": "DUP9"
    },
    "14006": {
      "op": "AND"
    },
    "14007": {
      "op": "DUP2"
    },
    "14008": {
      "op": "MSTORE"
    },
    "14009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14015": {
      "op": "SHL"
    },
    "14016": {
      "op": "SUB"
    },
    "14017": {
      "op": "SWAP7"
    },
    "14018": {
      "op": "DUP8"
    },
    "14019": {
      "op": "AND"
    },
    "14020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14022": {
      "op": "DUP3"
    },
    "14023": {
      "op": "ADD"
    },
    "14024": {
      "op": "MSTORE"
    },
    "14025": {
      "op": "SWAP5"
    },
    "14026": {
      "op": "DUP8"
    },
    "14027": {
      "op": "AND"
    },
    "14028": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14030": {
      "op": "DUP7"
    },
    "14031": {
      "op": "ADD"
    },
    "14032": {
      "op": "MSTORE"
    },
    "14033": {
      "op": "SWAP3"
    },
    "14034": {
      "op": "SWAP1"
    },
    "14035": {
      "op": "SWAP5"
    },
    "14036": {
      "op": "AND"
    },
    "14037": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14039": {
      "op": "DUP5"
    },
    "14040": {
      "op": "ADD"
    },
    "14041": {
      "op": "MSTORE"
    },
    "14042": {
      "op": "SWAP1"
    },
    "14043": {
      "op": "SWAP4"
    },
    "14044": {
      "op": "AND"
    },
    "14045": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "14047": {
      "op": "DUP3"
    },
    "14048": {
      "op": "ADD"
    },
    "14049": {
      "op": "MSTORE"
    },
    "14050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14052": {
      "op": "DUP2"
    },
    "14053": {
      "op": "ADD"
    },
    "14054": {
      "op": "SWAP2"
    },
    "14055": {
      "op": "SWAP1"
    },
    "14056": {
      "op": "SWAP2"
    },
    "14057": {
      "op": "MSTORE"
    },
    "14058": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "14060": {
      "op": "DUP2"
    },
    "14061": {
      "op": "ADD"
    },
    "14062": {
      "op": "SWAP2"
    },
    "14063": {
      "op": "SWAP1"
    },
    "14064": {
      "op": "SWAP2"
    },
    "14065": {
      "op": "MSTORE"
    },
    "14066": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "14068": {
      "op": "ADD"
    },
    "14069": {
      "op": "SWAP1"
    },
    "14070": {
      "jump": "o",
      "op": "JUMP"
    },
    "14071": {
      "op": "JUMPDEST"
    },
    "14072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14074": {
      "op": "DUP1"
    },
    "14075": {
      "op": "DUP3"
    },
    "14076": {
      "op": "MSTORE"
    },
    "14077": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "14079": {
      "op": "SWAP1"
    },
    "14080": {
      "op": "DUP3"
    },
    "14081": {
      "op": "ADD"
    },
    "14082": {
      "op": "MSTORE"
    },
    "14083": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "14101": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "14103": {
      "op": "SHL"
    },
    "14104": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14106": {
      "op": "DUP3"
    },
    "14107": {
      "op": "ADD"
    },
    "14108": {
      "op": "MSTORE"
    },
    "14109": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14111": {
      "op": "ADD"
    },
    "14112": {
      "op": "SWAP1"
    },
    "14113": {
      "jump": "o",
      "op": "JUMP"
    },
    "14114": {
      "op": "JUMPDEST"
    },
    "14115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14117": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "14122": {
      "op": "DUP4"
    },
    "14123": {
      "op": "DUP2"
    },
    "14124": {
      "op": "AND"
    },
    "14125": {
      "op": "SWAP1"
    },
    "14126": {
      "op": "DUP4"
    },
    "14127": {
      "op": "AND"
    },
    "14128": {
      "op": "DUP2"
    },
    "14129": {
      "op": "DUP2"
    },
    "14130": {
      "op": "LT"
    },
    "14131": {
      "op": "ISZERO"
    },
    "14132": {
      "op": "PUSH2",
      "value": "0x373F"
    },
    "14135": {
      "op": "JUMPI"
    },
    "14136": {
      "op": "PUSH2",
      "value": "0x373F"
    },
    "14139": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "14142": {
      "jump": "i",
      "op": "JUMP"
    },
    "14143": {
      "op": "JUMPDEST"
    },
    "14144": {
      "op": "SUB"
    },
    "14145": {
      "op": "SWAP4"
    },
    "14146": {
      "op": "SWAP3"
    },
    "14147": {
      "op": "POP"
    },
    "14148": {
      "op": "POP"
    },
    "14149": {
      "op": "POP"
    },
    "14150": {
      "jump": "o",
      "op": "JUMP"
    },
    "14151": {
      "op": "JUMPDEST"
    },
    "14152": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14158": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14160": {
      "op": "SHL"
    },
    "14161": {
      "op": "SUB"
    },
    "14162": {
      "op": "DUP4"
    },
    "14163": {
      "op": "DUP2"
    },
    "14164": {
      "op": "AND"
    },
    "14165": {
      "op": "SWAP1"
    },
    "14166": {
      "op": "DUP4"
    },
    "14167": {
      "op": "AND"
    },
    "14168": {
      "op": "DUP2"
    },
    "14169": {
      "op": "DUP2"
    },
    "14170": {
      "op": "LT"
    },
    "14171": {
      "op": "ISZERO"
    },
    "14172": {
      "op": "PUSH2",
      "value": "0x373F"
    },
    "14175": {
      "op": "JUMPI"
    },
    "14176": {
      "op": "PUSH2",
      "value": "0x373F"
    },
    "14179": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "14182": {
      "jump": "i",
      "op": "JUMP"
    },
    "14183": {
      "op": "JUMPDEST"
    },
    "14184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14190": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "14192": {
      "op": "SHL"
    },
    "14193": {
      "op": "SUB"
    },
    "14194": {
      "op": "DUP1"
    },
    "14195": {
      "op": "DUP4"
    },
    "14196": {
      "op": "AND"
    },
    "14197": {
      "op": "DUP2"
    },
    "14198": {
      "op": "DUP6"
    },
    "14199": {
      "op": "AND"
    },
    "14200": {
      "op": "DUP2"
    },
    "14201": {
      "op": "DUP4"
    },
    "14202": {
      "op": "DIV"
    },
    "14203": {
      "op": "DUP2"
    },
    "14204": {
      "op": "GT"
    },
    "14205": {
      "op": "DUP3"
    },
    "14206": {
      "op": "ISZERO"
    },
    "14207": {
      "op": "ISZERO"
    },
    "14208": {
      "op": "AND"
    },
    "14209": {
      "op": "ISZERO"
    },
    "14210": {
      "op": "PUSH2",
      "value": "0x378D"
    },
    "14213": {
      "op": "JUMPI"
    },
    "14214": {
      "op": "PUSH2",
      "value": "0x378D"
    },
    "14217": {
      "op": "PUSH2",
      "value": "0x35D9"
    },
    "14220": {
      "jump": "i",
      "op": "JUMP"
    },
    "14221": {
      "op": "JUMPDEST"
    },
    "14222": {
      "op": "MUL"
    },
    "14223": {
      "op": "SWAP5"
    },
    "14224": {
      "op": "SWAP4"
    },
    "14225": {
      "op": "POP"
    },
    "14226": {
      "op": "POP"
    },
    "14227": {
      "op": "POP"
    },
    "14228": {
      "op": "POP"
    },
    "14229": {
      "jump": "o",
      "op": "JUMP"
    },
    "14230": {
      "op": "JUMPDEST"
    },
    "14231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14233": {
      "op": "JUMPDEST"
    },
    "14234": {
      "op": "DUP4"
    },
    "14235": {
      "op": "DUP2"
    },
    "14236": {
      "op": "LT"
    },
    "14237": {
      "op": "ISZERO"
    },
    "14238": {
      "op": "PUSH2",
      "value": "0x37B1"
    },
    "14241": {
      "op": "JUMPI"
    },
    "14242": {
      "op": "DUP2"
    },
    "14243": {
      "op": "DUP2"
    },
    "14244": {
      "op": "ADD"
    },
    "14245": {
      "op": "MLOAD"
    },
    "14246": {
      "op": "DUP4"
    },
    "14247": {
      "op": "DUP3"
    },
    "14248": {
      "op": "ADD"
    },
    "14249": {
      "op": "MSTORE"
    },
    "14250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14252": {
      "op": "ADD"
    },
    "14253": {
      "op": "PUSH2",
      "value": "0x3799"
    },
    "14256": {
      "op": "JUMP"
    },
    "14257": {
      "op": "JUMPDEST"
    },
    "14258": {
      "op": "DUP4"
    },
    "14259": {
      "op": "DUP2"
    },
    "14260": {
      "op": "GT"
    },
    "14261": {
      "op": "ISZERO"
    },
    "14262": {
      "op": "PUSH2",
      "value": "0x1B1A"
    },
    "14265": {
      "op": "JUMPI"
    },
    "14266": {
      "op": "POP"
    },
    "14267": {
      "op": "POP"
    },
    "14268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14270": {
      "op": "SWAP2"
    },
    "14271": {
      "op": "ADD"
    },
    "14272": {
      "op": "MSTORE"
    },
    "14273": {
      "jump": "o",
      "op": "JUMP"
    },
    "14274": {
      "op": "JUMPDEST"
    },
    "14275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14277": {
      "op": "DUP3"
    },
    "14278": {
      "op": "MLOAD"
    },
    "14279": {
      "op": "PUSH2",
      "value": "0x37D4"
    },
    "14282": {
      "op": "DUP2"
    },
    "14283": {
      "op": "DUP5"
    },
    "14284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14286": {
      "op": "DUP8"
    },
    "14287": {
      "op": "ADD"
    },
    "14288": {
      "op": "PUSH2",
      "value": "0x3796"
    },
    "14291": {
      "jump": "i",
      "op": "JUMP"
    },
    "14292": {
      "op": "JUMPDEST"
    },
    "14293": {
      "op": "SWAP2"
    },
    "14294": {
      "op": "SWAP1"
    },
    "14295": {
      "op": "SWAP2"
    },
    "14296": {
      "op": "ADD"
    },
    "14297": {
      "op": "SWAP3"
    },
    "14298": {
      "op": "SWAP2"
    },
    "14299": {
      "op": "POP"
    },
    "14300": {
      "op": "POP"
    },
    "14301": {
      "jump": "o",
      "op": "JUMP"
    },
    "14302": {
      "op": "JUMPDEST"
    },
    "14303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14305": {
      "op": "DUP2"
    },
    "14306": {
      "op": "MSTORE"
    },
    "14307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14309": {
      "op": "DUP3"
    },
    "14310": {
      "op": "MLOAD"
    },
    "14311": {
      "op": "DUP1"
    },
    "14312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14314": {
      "op": "DUP5"
    },
    "14315": {
      "op": "ADD"
    },
    "14316": {
      "op": "MSTORE"
    },
    "14317": {
      "op": "PUSH2",
      "value": "0x37FD"
    },
    "14320": {
      "op": "DUP2"
    },
    "14321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14323": {
      "op": "DUP6"
    },
    "14324": {
      "op": "ADD"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "14327": {
      "op": "DUP8"
    },
    "14328": {
      "op": "ADD"
    },
    "14329": {
      "op": "PUSH2",
      "value": "0x3796"
    },
    "14332": {
      "jump": "i",
      "op": "JUMP"
    },
    "14333": {
      "op": "JUMPDEST"
    },
    "14334": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14336": {
      "op": "ADD"
    },
    "14337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "14339": {
      "op": "NOT"
    },
    "14340": {
      "op": "AND"
    },
    "14341": {
      "op": "SWAP2"
    },
    "14342": {
      "op": "SWAP1"
    },
    "14343": {
      "op": "SWAP2"
    },
    "14344": {
      "op": "ADD"
    },
    "14345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "14347": {
      "op": "ADD"
    },
    "14348": {
      "op": "SWAP3"
    },
    "14349": {
      "op": "SWAP2"
    },
    "14350": {
      "op": "POP"
    },
    "14351": {
      "op": "POP"
    },
    "14352": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1fa90f55748b90097db585aee96625ef5260ab55",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.12;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/access/Ownable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/security/Pausable.sol\";\n\nimport \"./BeamerUtils.sol\";\nimport \"./RestrictedCalls.sol\";\nimport \"./LpWhitelist.sol\";\n\n/// The request manager.\n///\n/// This contract is responsible for keeping track of transfer requests,\n/// implementing the rules of the challenge game and holding deposited\n/// tokens until they are withdrawn.\n/// The information passed by L1 resolution will be stored with the respective requests.\n///\n/// It is the only contract that agents need to interact with on the source chain.\n/// .. note::\n///\n///   The functions resolveRequest and invalidateFill can only be called by\n///   the :sol:contract:`Resolver` contract, via a chain-dependent messenger contract.\ncontract RequestManager is Ownable, LpWhitelist, RestrictedCalls, Pausable {\n    using Math for uint256;\n    using SafeERC20 for IERC20;\n\n    // Structs\n    // TODO: check if we can use a smaller type for `targetChainId`, so that the\n    // fields can be packed into one storage slot\n    struct Request {\n        address sender;\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        uint256 amount;\n        uint32 validUntil;\n        uint96 lpFee;\n        uint96 protocolFee;\n        uint32 activeClaims;\n        uint96 withdrawClaimId;\n        address filler;\n        bytes32 fillId;\n        mapping(bytes32 => bool) invalidFillIds;\n    }\n\n    struct Claim {\n        bytes32 requestId;\n        address claimer;\n        uint96 claimerStake;\n        mapping(address => uint96) challengersStakes;\n        address lastChallenger;\n        uint96 challengerStakeTotal;\n        uint256 withdrawnAmount;\n        uint256 termination;\n        bytes32 fillId;\n    }\n\n    struct Token {\n        uint256 transferLimit;\n        uint96 minLpFee;\n        uint32 lpFeePPM;\n        uint32 protocolFeePPM;\n        uint96 collectedProtocolFees;\n    }\n\n    // Events\n\n    /// Emitted when a new request has been created.\n    ///\n    /// .. seealso:: :sol:func:`createRequest`\n    event RequestCreated(\n        bytes32 indexed requestId,\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address indexed sourceAddress,\n        address targetAddress,\n        uint256 amount,\n        uint96 nonce,\n        uint32 validUntil\n    );\n\n    /// Emitted when the token deposit for request ``requestId`` has been\n    /// transferred to the ``receiver``.\n    ///\n    /// This can happen in two cases:\n    ///\n    ///  * the request expired and the request submitter called :sol:func:`withdrawExpiredRequest`\n    ///  * a claim related to the request has been resolved successfully in favor of the claimer\n    ///\n    /// .. seealso:: :sol:func:`withdraw` :sol:func:`withdrawExpiredRequest`\n    event DepositWithdrawn(bytes32 requestId, address receiver);\n\n    /// Emitted when a claim or a counter-claim (challenge) has been made.\n    ///\n    /// .. seealso:: :sol:func:`claimRequest` :sol:func:`challengeClaim`\n    event ClaimMade(\n        bytes32 indexed requestId,\n        uint96 claimId,\n        address claimer,\n        uint96 claimerStake,\n        address lastChallenger,\n        uint96 challengerStakeTotal,\n        uint256 termination,\n        bytes32 fillId\n    );\n\n    /// Emitted when staked native tokens tied to a claim have been withdrawn.\n    ///\n    /// This can only happen when the claim has been resolved and the caller\n    /// of :sol:func:`withdraw` is allowed to withdraw their stake.\n    ///\n    /// .. seealso:: :sol:func:`withdraw`\n    event ClaimStakeWithdrawn(\n        uint96 claimId,\n        bytes32 indexed requestId,\n        address stakeRecipient\n    );\n\n    event FinalityPeriodUpdated(uint256 targetChainId, uint256 finalityPeriod);\n\n    /// Emitted when token object of a token address is updated.\n    ///\n    /// .. seealso:: :sol:func:`updateToken`\n    event TokenUpdated(\n        address tokenAddress,\n        uint256 transferLimit,\n        uint96 minLpFee,\n        uint32 lpFeePPM,\n        uint32 protocolFeePPM\n    );\n\n    /// Emitted when a request has been resolved via L1 resolution.\n    ///\n    /// .. seealso:: :sol:func:`resolveRequest`\n    event RequestResolved(bytes32 requestId, address filler, bytes32 fillId);\n\n    /// Emitted when an invalidated fill has been resolved.\n    ///\n    /// .. seealso:: :sol:func:`invalidateFill`\n    event FillInvalidatedResolved(bytes32 requestId, bytes32 fillId);\n\n    // Constants\n\n    /// The minimum amount of source chain's native token that the claimer needs to\n    /// provide when making a claim, as well in each round of the challenge game.\n    uint96 public immutable claimStake;\n\n    /// The additional time given to claim a request. This value is added to the\n    /// validity period of a request.\n    uint256 public immutable claimRequestExtension;\n\n    /// The period for which the claim is valid.\n    uint256 public immutable claimPeriod;\n\n    /// The period by which the termination time of a claim is extended after each\n    /// round of the challenge game. This period should allow enough time for the\n    /// other parties to counter-challenge.\n    ///\n    /// .. note::\n    ///\n    ///    The claim's termination time is extended only if it is less than the\n    ///    extension time.\n    ///\n    /// Note that in the first challenge round, i.e. the round initiated by the first\n    /// challenger, the termination time is extended additionally by the finality\n    /// period of the target chain. This is done to allow for L1 resolution.\n    uint256 public immutable challengePeriodExtension;\n\n    /// The minimum validity period of a request.\n    uint256 public constant MIN_VALIDITY_PERIOD = 30 minutes;\n\n    /// The maximum validity period of a request.\n    uint256 public constant MAX_VALIDITY_PERIOD = 48 hours;\n\n    /// withdrawClaimId is set to this value when an expired request gets withdrawn by the sender\n    uint96 public constant CLAIM_ID_WITHDRAWN_EXPIRED = type(uint96).max;\n\n    // Variables\n\n    /// A counter used to generate request and claim IDs.\n    /// The variable holds the most recently used nonce and must\n    /// be incremented to get the next nonce\n    uint96 public currentNonce;\n\n    /// Maps target rollup chain IDs to finality periods.\n    /// Finality periods are in seconds.\n    mapping(uint256 => uint256) public finalityPeriods;\n\n    /// Maps request IDs to requests.\n    mapping(bytes32 => Request) public requests;\n\n    /// Maps claim IDs to claims.\n    mapping(uint96 => Claim) public claims;\n\n    /// Maps ERC20 token address to tokens\n    mapping(address => Token) public tokens;\n\n    /// Compute the liquidity provider fee that needs to be paid for a given transfer amount.\n    function lpFee(address tokenAddress, uint256 amount)\n        public\n        view\n        returns (uint256)\n    {\n        Token storage token = tokens[tokenAddress];\n        return Math.max(token.minLpFee, (amount * token.lpFeePPM) / 1_000_000);\n    }\n\n    /// Compute the protocol fee that needs to be paid for a given transfer amount.\n    function protocolFee(address tokenAddress, uint256 amount)\n        public\n        view\n        returns (uint256)\n    {\n        return (amount * tokens[tokenAddress].protocolFeePPM) / 1_000_000;\n    }\n\n    /// Compute the total fee that needs to be paid for a given transfer amount.\n    /// The total fee is the sum of the liquidity provider fee and the protocol fee.\n    function totalFee(address tokenAddress, uint256 amount)\n        public\n        view\n        returns (uint256)\n    {\n        return lpFee(tokenAddress, amount) + protocolFee(tokenAddress, amount);\n    }\n\n    // Modifiers\n\n    /// Check whether a given request ID is valid.\n    modifier validRequestId(bytes32 requestId) {\n        require(\n            requests[requestId].sender != address(0),\n            \"requestId not valid\"\n        );\n        _;\n    }\n\n    /// Check whether a given claim ID is valid.\n    modifier validClaimId(uint96 claimId) {\n        require(claims[claimId].claimer != address(0), \"claimId not valid\");\n        _;\n    }\n\n    /// Constructor.\n    ///\n    /// @param _claimStake Claim stake amount.\n    /// @param _claimRequestExtension Extension to claim a request after validity period ends.\n    /// @param _claimPeriod Claim period, in seconds.\n    /// @param _challengePeriodExtension Challenge period extension, in seconds.\n    constructor(\n        uint96 _claimStake,\n        uint256 _claimRequestExtension,\n        uint256 _claimPeriod,\n        uint256 _challengePeriodExtension\n    ) {\n        claimStake = _claimStake;\n        claimRequestExtension = _claimRequestExtension;\n        claimPeriod = _claimPeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n    }\n\n    /// Create a new transfer request.\n    ///\n    /// @param targetChainId ID of the target chain.\n    /// @param sourceTokenAddress Address of the token contract on the source chain.\n    /// @param targetTokenAddress Address of the token contract on the target chain.\n    /// @param targetAddress Recipient address on the target chain.\n    /// @param amount Amount of tokens to transfer. Does not include fees.\n    /// @param validityPeriod The number of seconds the request is to be considered valid.\n    ///                       Once its validity period has elapsed, the request cannot be claimed\n    ///                       anymore and will eventually expire, allowing the request submitter\n    ///                       to withdraw the deposited tokens if there are no active claims.\n    /// @return ID of the newly created request.\n    function createRequest(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount,\n        uint256 validityPeriod\n    ) external whenNotPaused returns (bytes32) {\n        require(\n            finalityPeriods[targetChainId] != 0,\n            \"Target rollup not supported\"\n        );\n        require(\n            validityPeriod >= MIN_VALIDITY_PERIOD,\n            \"Validity period too short\"\n        );\n        require(\n            validityPeriod <= MAX_VALIDITY_PERIOD,\n            \"Validity period too long\"\n        );\n        require(\n            amount <= tokens[sourceTokenAddress].transferLimit,\n            \"Amount exceeds transfer limit\"\n        );\n\n        uint256 lpFeeTokenAmount = lpFee(sourceTokenAddress, amount);\n        uint256 protocolFeeTokenAmount = protocolFee(\n            sourceTokenAddress,\n            amount\n        );\n\n        require(\n            IERC20(sourceTokenAddress).allowance(msg.sender, address(this)) >=\n                amount + lpFeeTokenAmount + protocolFeeTokenAmount,\n            \"Insufficient allowance\"\n        );\n\n        uint96 nonce = currentNonce + 1;\n        currentNonce = nonce;\n\n        bytes32 requestId = BeamerUtils.createRequestId(\n            block.chainid,\n            targetChainId,\n            targetTokenAddress,\n            targetAddress,\n            amount,\n            nonce\n        );\n\n        Request storage newRequest = requests[requestId];\n        newRequest.sender = msg.sender;\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.amount = amount;\n        newRequest.validUntil = uint32(block.timestamp + validityPeriod);\n        newRequest.lpFee = uint96(lpFeeTokenAmount);\n        newRequest.protocolFee = uint96(protocolFeeTokenAmount);\n\n        emit RequestCreated(\n            requestId,\n            targetChainId,\n            sourceTokenAddress,\n            targetTokenAddress,\n            msg.sender,\n            targetAddress,\n            amount,\n            nonce,\n            uint32(block.timestamp + validityPeriod)\n        );\n\n        IERC20(sourceTokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount + lpFeeTokenAmount + protocolFeeTokenAmount\n        );\n\n        return requestId;\n    }\n\n    /// Withdraw funds deposited with an expired request.\n    ///\n    /// No claims must be active for the request.\n    ///\n    /// @param requestId ID of the expired request.\n    function withdrawExpiredRequest(bytes32 requestId)\n        external\n        validRequestId(requestId)\n    {\n        Request storage request = requests[requestId];\n\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(\n            block.timestamp >= request.validUntil,\n            \"Request not expired yet\"\n        );\n        require(request.activeClaims == 0, \"Active claims running\");\n\n        request.withdrawClaimId = CLAIM_ID_WITHDRAWN_EXPIRED;\n\n        emit DepositWithdrawn(requestId, request.sender);\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(\n            request.sender,\n            request.amount + request.lpFee + request.protocolFee\n        );\n    }\n\n    /// Claim that a request was filled by the caller.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    ///\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(bytes32 requestId, bytes32 fillId)\n        external\n        payable\n        validRequestId(requestId)\n        onlyAllowed(msg.sender)\n        returns (uint96)\n    {\n        return claimRequest(msg.sender, requestId, fillId);\n    }\n\n    /// Claim that a request was filled.\n    ///\n    /// The request must still be valid at call time.\n    /// The caller must provide the ``claimStake`` amount of source rollup's native\n    /// token.\n    /// Only the claimer may get the stake back later.\n    ///\n    /// @param claimer Address of the claimer.\n    /// @param requestId ID of the request.\n    /// @param fillId The fill ID.\n    /// @return The claim ID.\n    function claimRequest(\n        address claimer,\n        bytes32 requestId,\n        bytes32 fillId\n    )\n        public\n        payable\n        validRequestId(requestId)\n        onlyAllowed(claimer)\n        returns (uint96)\n    {\n        Request storage request = requests[requestId];\n\n        require(\n            block.timestamp < request.validUntil + claimRequestExtension,\n            \"Request cannot be claimed anymore\"\n        );\n        require(request.withdrawClaimId == 0, \"Deposit already withdrawn\");\n        require(msg.value == claimStake, \"Invalid stake amount\");\n        require(fillId != bytes32(0), \"FillId must not be 0x0\");\n\n        request.activeClaims += 1;\n\n        uint96 nonce = currentNonce + 1;\n        currentNonce = nonce;\n        uint256 termination = block.timestamp + claimPeriod;\n\n        Claim storage claim = claims[nonce];\n        claim.requestId = requestId;\n        claim.claimer = claimer;\n        claim.claimerStake = uint96(msg.value);\n        claim.termination = termination;\n        claim.fillId = fillId;\n\n        emit ClaimMade(\n            requestId,\n            nonce,\n            claimer,\n            uint96(msg.value),\n            address(0),\n            0,\n            termination,\n            fillId\n        );\n\n        return nonce;\n    }\n\n    /// Challenge an existing claim.\n    ///\n    /// The claim must still be valid at call time.\n    /// This function implements one round of the challenge game.\n    /// The original claimer is allowed to call this function only\n    /// after someone else made a challenge, i.e. every second round.\n    /// However, once the original claimer counter-challenges, anyone\n    /// can join the game and make another challenge.\n    ///\n    /// The caller must provide enough native tokens as their stake.\n    /// For the original claimer, the minimum stake is\n    /// ``challengerStakeTotal - claimerStake + claimStake``.\n    ///\n    /// For challengers, the minimum stake is\n    /// ``claimerStake - challengerStakeTotal + 1``.\n    ///\n    /// An example (time flows downwards, claimStake = 10)::\n    ///\n    ///   claimRequest() by Max [stakes 10]\n    ///   challengeClaim() by Alice [stakes 11]\n    ///   challengeClaim() by Max [stakes 11]\n    ///   challengeClaim() by Bob [stakes 16]\n    ///\n    /// In this example, if Max didn't want to lose the challenge game to\n    /// Alice and Bob, he would have to challenge with a stake of at least 16.\n    ///\n    /// @param claimId The claim ID.\n    function challengeClaim(uint96 claimId)\n        external\n        payable\n        validClaimId(claimId)\n    {\n        Claim storage claim = claims[claimId];\n        bytes32 requestId = claim.requestId;\n        uint256 termination = claim.termination;\n        require(block.timestamp < termination, \"Claim expired\");\n        require(\n            requests[requestId].filler == address(0),\n            \"Request already resolved\"\n        );\n        require(\n            !requests[requestId].invalidFillIds[claim.fillId],\n            \"Fill already invalidated\"\n        );\n\n        uint256 periodExtension = challengePeriodExtension;\n        address claimer = claim.claimer;\n        uint96 claimerStake = claim.claimerStake;\n        uint96 challengerStakeTotal = claim.challengerStakeTotal;\n\n        if (claimerStake > challengerStakeTotal) {\n            if (challengerStakeTotal == 0) {\n                periodExtension += finalityPeriods[\n                    requests[requestId].targetChainId\n                ];\n            }\n            require(msg.sender != claimer, \"Cannot challenge own claim\");\n            require(\n                msg.value >= claimerStake - challengerStakeTotal + 1,\n                \"Not enough stake provided\"\n            );\n        } else {\n            require(msg.sender == claimer, \"Not eligible to outbid\");\n            require(\n                msg.value >= challengerStakeTotal - claimerStake + claimStake,\n                \"Not enough stake provided\"\n            );\n        }\n\n        if (msg.sender == claimer) {\n            claimerStake += uint96(msg.value);\n            claim.claimerStake = claimerStake;\n        } else {\n            claim.lastChallenger = msg.sender;\n            claim.challengersStakes[msg.sender] += uint96(msg.value);\n            challengerStakeTotal += uint96(msg.value);\n            claim.challengerStakeTotal = challengerStakeTotal;\n        }\n\n        if (block.timestamp + periodExtension > termination) {\n            termination = block.timestamp + periodExtension;\n            claim.termination = termination;\n        }\n\n        emit ClaimMade(\n            requestId,\n            claimId,\n            claimer,\n            claimerStake,\n            claim.lastChallenger,\n            challengerStakeTotal,\n            termination,\n            claim.fillId\n        );\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @return The claim stakes receiver.\n    function withdraw(uint96 claimId)\n        external\n        validClaimId(claimId)\n        returns (address)\n    {\n        return withdraw(msg.sender, claimId);\n    }\n\n    /// Withdraw the deposit that the request submitter left with the contract,\n    /// as well as the staked native tokens associated with the claim.\n    ///\n    /// This function is called on behalf of a participant. Only a participant\n    /// may receive the funds if he is the winner of the challenge or the claim is valid.\n    ///\n    /// In case the caller of this function is a challenger that won the game,\n    /// they will only get their staked native tokens plus the reward in the form\n    /// of full (sole challenger) or partial (multiple challengers) amount\n    /// of native tokens staked by the dishonest claimer.\n    ///\n    /// @param claimId The claim ID.\n    /// @param participant The participant.\n    /// @return The claim stakes receiver.\n    function withdraw(address participant, uint96 claimId)\n        public\n        validClaimId(claimId)\n        returns (address)\n    {\n        Claim storage claim = claims[claimId];\n        address claimer = claim.claimer;\n        require(\n            participant == claimer || claim.challengersStakes[participant] > 0,\n            \"Not an active participant in this claim\"\n        );\n        bytes32 requestId = claim.requestId;\n        Request storage request = requests[requestId];\n\n        (address stakeRecipient, uint256 ethToTransfer) = resolveClaim(\n            participant,\n            claimId\n        );\n\n        if (claim.challengersStakes[stakeRecipient] > 0) {\n            //Re-entrancy protection\n            claim.challengersStakes[stakeRecipient] = 0;\n        }\n\n        uint256 withdrawnAmount = claim.withdrawnAmount;\n\n        // First time withdraw is called, remove it from active claims\n        if (withdrawnAmount == 0) {\n            request.activeClaims -= 1;\n        }\n        withdrawnAmount += ethToTransfer;\n        claim.withdrawnAmount = withdrawnAmount;\n\n        require(\n            withdrawnAmount <= claim.claimerStake + claim.challengerStakeTotal,\n            \"Amount to withdraw too large\"\n        );\n\n        (bool sent, ) = stakeRecipient.call{value: ethToTransfer}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        emit ClaimStakeWithdrawn(claimId, requestId, stakeRecipient);\n\n        if (request.withdrawClaimId == 0 && stakeRecipient == claimer) {\n            withdrawDeposit(request, claimId);\n        }\n\n        return stakeRecipient;\n    }\n\n    function resolveClaim(address participant, uint96 claimId)\n        private\n        view\n        returns (address, uint256)\n    {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        uint96 withdrawClaimId = request.withdrawClaimId;\n        address claimer = claim.claimer;\n        uint96 claimerStake = claim.claimerStake;\n        uint96 challengerStakeTotal = claim.challengerStakeTotal;\n        require(\n            claim.withdrawnAmount < claimerStake + challengerStakeTotal,\n            \"Claim already withdrawn\"\n        );\n\n        bool claimValid = false;\n\n        // The claim is resolved with the following priority:\n        // 1) The l1 resolved filler is the claimer and l1 resolved fillId matches, claim is valid\n        // 2) FillId is true in request's invalidFillIds, claim is invalid\n        // 3) The withdrawer's claim matches exactly this claim (same claimer address, same fillId)\n        // 4) Claim properties, claim terminated and claimer has the highest stake\n        address filler = request.filler;\n        bytes32 fillId = request.fillId;\n\n        if (filler != address(0)) {\n            // Claim resolution via 1)\n            claimValid = filler == claimer && fillId == claim.fillId;\n        } else if (request.invalidFillIds[fillId]) {\n            // Claim resolution via 2)\n            claimValid = false;\n        } else if (withdrawClaimId != 0) {\n            // Claim resolution via 3)\n            claimValid =\n                claimer == claims[withdrawClaimId].claimer &&\n                claim.fillId == claims[withdrawClaimId].fillId;\n        } else {\n            // Claim resolution via 4)\n            require(\n                block.timestamp >= claim.termination,\n                \"Claim period not finished\"\n            );\n            claimValid = claimerStake > challengerStakeTotal;\n        }\n\n        // Calculate withdraw scheme for claim stakes\n        uint96 ethToTransfer;\n        address stakeRecipient;\n\n        if (claimValid) {\n            // If claim is valid, all stakes go to the claimer\n            stakeRecipient = claimer;\n            ethToTransfer = claimerStake + challengerStakeTotal;\n        } else if (challengerStakeTotal > 0) {\n            // If claim is invalid, partial withdrawal by the participant\n            stakeRecipient = participant;\n            ethToTransfer = 2 * claim.challengersStakes[stakeRecipient];\n            require(ethToTransfer > 0, \"Challenger has nothing to withdraw\");\n        } else {\n            // The unlikely event is possible that a false claim has no challenger\n            // If it is known that the claim is false then the claimer stake goes to the platform\n            stakeRecipient = owner();\n            ethToTransfer = claimerStake;\n        }\n\n        // If the challenger wins and is the last challenger, he gets either\n        // twice his stake plus the excess stake (if the claimer was winning), or\n        // twice his stake minus the difference between the claimer and challenger stakes (if the claimer was losing)\n        if (stakeRecipient == claim.lastChallenger) {\n            if (claimerStake > challengerStakeTotal) {\n                ethToTransfer += (claimerStake - challengerStakeTotal);\n            } else {\n                ethToTransfer -= (challengerStakeTotal - claimerStake);\n            }\n        }\n\n        return (stakeRecipient, ethToTransfer);\n    }\n\n    function withdrawDeposit(Request storage request, uint96 claimId) private {\n        Claim storage claim = claims[claimId];\n        address claimer = claim.claimer;\n        emit DepositWithdrawn(claim.requestId, claimer);\n\n        request.withdrawClaimId = claimId;\n\n        tokens[request.sourceTokenAddress].collectedProtocolFees += request\n            .protocolFee;\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        token.safeTransfer(claimer, request.amount + request.lpFee);\n    }\n\n    /// Returns whether a request's deposit was withdrawn or not\n    ///\n    /// This can be true in two cases:\n    /// 1. The deposit was withdrawn after the request was claimed and filled.\n    /// 2. The submitter withdrew the deposit after the request's expiry.\n    /// .. seealso:: :sol:func:`withdraw`\n    /// .. seealso:: :sol:func:`withdrawExpiredRequest`\n    ///\n    /// @param requestId The request ID\n    /// @return Whether the deposit corresponding to the given request ID was withdrawn\n    function isWithdrawn(bytes32 requestId)\n        public\n        view\n        validRequestId(requestId)\n        returns (bool)\n    {\n        return requests[requestId].withdrawClaimId != 0;\n    }\n\n    /// Withdraw protocol fees collected by the contract.\n    ///\n    /// Protocol fees are paid in token transferred.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param tokenAddress The address of the token contract.\n    /// @param recipient The address the fees should be sent to.\n    function withdrawProtocolFees(address tokenAddress, address recipient)\n        external\n        onlyOwner\n    {\n        uint256 amount = tokens[tokenAddress].collectedProtocolFees;\n        require(amount > 0, \"Protocol fee is zero\");\n        tokens[tokenAddress].collectedProtocolFees = 0;\n\n        IERC20 token = IERC20(tokenAddress);\n        token.safeTransfer(recipient, amount);\n    }\n\n    function updateToken(\n        address tokenAddress,\n        uint256 transferLimit,\n        uint96 minLpFee,\n        uint32 lpFeePPM,\n        uint32 protocolFeePPM\n    ) external onlyOwner {\n        require(lpFeePPM <= 999_999, \"Maximum PPM of 999999 exceeded\");\n        require(protocolFeePPM <= 999_999, \"Maximum PPM of 999999 exceeded\");\n\n        Token storage token = tokens[tokenAddress];\n        token.transferLimit = transferLimit;\n        token.minLpFee = minLpFee;\n        token.lpFeePPM = lpFeePPM;\n        token.protocolFeePPM = protocolFeePPM;\n\n        emit TokenUpdated(\n            tokenAddress,\n            transferLimit,\n            minLpFee,\n            lpFeePPM,\n            protocolFeePPM\n        );\n    }\n\n    /// Set the finality period for the given target chain.\n    ///\n    /// .. note:: This function can only be called by the contract owner.\n    ///\n    /// @param targetChainId The target chain ID.\n    /// @param finalityPeriod Finality period in seconds.\n    function setFinalityPeriod(uint256 targetChainId, uint256 finalityPeriod)\n        external\n        onlyOwner\n    {\n        require(finalityPeriod > 0, \"Finality period must be greater than 0\");\n        finalityPeriods[targetChainId] = finalityPeriod;\n\n        emit FinalityPeriodUpdated(targetChainId, finalityPeriod);\n    }\n\n    /// Returns whether a fill is invalidated or not\n    ///\n    /// Calling invalidateFill() will set this boolean to true,\n    /// marking that the ``fillId`` for the corresponding ``requestId`` was\n    /// invalidated.\n    /// Calling resolveRequest will validate it again, setting request.invalidatedFills[fillId]\n    /// to false.\n    /// .. seealso:: :sol:func:`invalidateFill`\n    /// .. seealso:: :sol:func:`resolveRequest`\n    ///\n    /// @param requestId The request ID\n    /// @param fillId The fill ID\n    /// @return Whether the fill ID is invalid for the given request ID\n    function isInvalidFill(bytes32 requestId, bytes32 fillId)\n        public\n        view\n        returns (bool)\n    {\n        return requests[requestId].invalidFillIds[fillId];\n    }\n\n    /// Mark the request identified by ``requestId`` as filled by ``filler``.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    /// @param filler The address that filled the request.\n    function resolveRequest(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId,\n        address filler\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        request.filler = filler;\n        request.fillId = fillId;\n\n        request.invalidFillIds[fillId] = false;\n\n        emit RequestResolved(requestId, filler, fillId);\n    }\n\n    /// Mark the fill identified by ``requestId`` and ``fillId`` as invalid.\n    ///\n    /// .. note::\n    ///\n    ///     This function is a restricted call function. Only callable by the added caller.\n    ///\n    /// @param requestId The request ID.\n    /// @param fillId The fill ID.\n    /// @param resolutionChainId The resolution (L1) chain ID.\n    function invalidateFill(\n        bytes32 requestId,\n        bytes32 fillId,\n        uint256 resolutionChainId\n    ) external restricted(resolutionChainId) {\n        Request storage request = requests[requestId];\n        require(\n            request.filler == address(0),\n            \"Cannot invalidate resolved fills\"\n        );\n        require(\n            request.invalidFillIds[fillId] == false,\n            \"Fill already invalidated\"\n        );\n\n        request.invalidFillIds[fillId] = true;\n\n        emit FillInvalidatedResolved(requestId, fillId);\n    }\n\n    /// Pauses the contract.\n    ///\n    /// Once the contract is paused, it cannot be used to create new\n    /// requests anymore. Withdrawing deposited funds and claim stakes\n    /// still works, though.\n    ///\n    /// .. note:: This function can only be called when the contract is not paused.\n    /// .. note:: This function can only be called by the contract owner.\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// Unpauses the contract.\n    ///\n    /// Once the contract is unpaused, it can be used normally.\n    ///\n    /// .. note:: This function can only be called when the contract is paused.\n    /// .. note:: This function can only be called by the contract owner.\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}\n",
  "sourceMap": "1141:31044:10:-:0;;;8778:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:6;936:18:0;:32::i;:::-;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;;;;;8947:24:10;;;;;8981:46;;;;;9037:26;;9073:52;;1141:31044;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:472:13:-;110:6;118;126;134;187:3;175:9;166:7;162:23;158:33;155:53;;;204:1;201;194:12;155:53;230:16;;-1:-1:-1;;;;;275:30:13;;265:41;;255:69;;320:1;317;310:12;255:69;388:2;373:18;;367:25;432:2;417:18;;411:25;476:2;461:18;;;455:25;343:5;;367:25;;-1:-1:-1;455:25:13;;-1:-1:-1;14:472:13;-1:-1:-1;;;14:472:13:o;:::-;1141:31044:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/RequestManager.sol",
  "type": "contract"
}