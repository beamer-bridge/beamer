{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_claimPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_challengePeriodExtension",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "leader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        }
      ],
      "name": "ChallengeCountered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        }
      ],
      "name": "ClaimChallenged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        }
      ],
      "name": "ClaimCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        }
      ],
      "name": "ClaimWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RequestCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "challengeClaim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengePeriodExtension",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "challenges",
      "outputs": [
        {
          "internalType": "address",
          "name": "challenger",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "challengerStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "claimerStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        }
      ],
      "name": "claimRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "claimSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "claims",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "withdrawn",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "termination",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "counterChallenge",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "request",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requests",
      "outputs": [
        {
          "internalType": "address",
          "name": "sourceTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetChainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "targetTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "claimId",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
    "1": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/Context.sol",
    "3": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol",
    "4": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeMath.sol",
    "5": "contracts/RequestManager.sol"
  },
  "ast": {
    "absolutePath": "contracts/RequestManager.sol",
    "exportedSymbols": {
      "Context": [
        1368
      ],
      "IERC20": [
        946
      ],
      "Math": [
        1034
      ],
      "Ownable": [
        868
      ],
      "RequestManager": [
        764
      ],
      "SafeMath": [
        1346
      ]
    },
    "id": 765,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 765,
        "sourceUnit": 947,
        "src": "57:84:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 765,
        "sourceUnit": 869,
        "src": "142:80:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeMath.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 765,
        "sourceUnit": 1347,
        "src": "223:85:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/paul/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 765,
        "sourceUnit": 1035,
        "src": "309:81:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 868,
              "src": "419:7:5"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "419:7:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 764,
        "linearizedBaseContracts": [
          764,
          868,
          1368
        ],
        "name": "RequestManager",
        "nameLocation": "401:14:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10,
            "libraryName": {
              "id": 8,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1346,
              "src": "439:8:5"
            },
            "nodeType": "UsingForDirective",
            "src": "433:27:5",
            "typeName": {
              "id": 9,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 13,
            "libraryName": {
              "id": 11,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1034,
              "src": "471:4:5"
            },
            "nodeType": "UsingForDirective",
            "src": "465:23:5",
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "480:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "RequestManager.Request",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "sourceTokenAddress",
                "nameLocation": "542:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "534:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "targetChainId",
                "nameLocation": "578:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "570:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 16,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "570:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "targetTokenAddress",
                "nameLocation": "609:18:5",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "601:26:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 18,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "601:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "targetAddress",
                "nameLocation": "645:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "637:21:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "637:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "676:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "668:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "668:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Request",
            "nameLocation": "516:7:5",
            "nodeType": "StructDefinition",
            "scope": 764,
            "src": "509:180:5",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Claim",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "requestId",
                "nameLocation": "726:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "718:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "718:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "claimer",
                "nameLocation": "753:7:5",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "745:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "745:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "withdrawn",
                "nameLocation": "775:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "770:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 29,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "770:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "802:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "794:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 31,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nameLocation": "702:5:5",
            "nodeType": "StructDefinition",
            "scope": 764,
            "src": "695:125:5",
            "visibility": "public"
          },
          {
            "canonicalName": "RequestManager.Challenge",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 35,
                "mutability": "mutable",
                "name": "challenger",
                "nameLocation": "861:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "853:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 34,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "853:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "challengerStake",
                "nameLocation": "889:15:5",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "881:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "881:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "claimerStake",
                "nameLocation": "922:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "914:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "914:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "termination",
                "nameLocation": "952:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "944:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "944:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Challenge",
            "nameLocation": "833:9:5",
            "nodeType": "StructDefinition",
            "scope": 764,
            "src": "826:144:5",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 52,
            "name": "RequestCreated",
            "nameLocation": "996:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1036:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1020:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "1071:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1055:29:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "1110:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1094:34:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1146:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1138:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:148:5"
            },
            "src": "990:169:5"
          },
          {
            "anonymous": false,
            "id": 62,
            "name": "ClaimCreated",
            "nameLocation": "1171:12:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "1209:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1193:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1234:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1226:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1261:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1253:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "termination",
                  "nameLocation": "1286:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1278:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1183:120:5"
            },
            "src": "1165:139:5"
          },
          {
            "anonymous": false,
            "id": 70,
            "name": "ClaimWithdrawn",
            "nameLocation": "1316:14:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "1356:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1340:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1381:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1373:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "1408:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1400:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1400:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1330:91:5"
            },
            "src": "1310:112:5"
          },
          {
            "anonymous": false,
            "id": 76,
            "name": "ClaimChallenged",
            "nameLocation": "1434:15:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "1475:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1459:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "challenger",
                  "nameLocation": "1500:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "1492:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1449:67:5"
            },
            "src": "1428:89:5"
          },
          {
            "anonymous": false,
            "id": 84,
            "name": "ChallengeCountered",
            "nameLocation": "1529:18:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "1573:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1557:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1557:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "leader",
                  "nameLocation": "1598:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1590:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "highestBid",
                  "nameLocation": "1622:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "1614:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1547:91:5"
            },
            "src": "1523:116:5"
          },
          {
            "constant": false,
            "functionSelector": "eb321173",
            "id": 86,
            "mutability": "mutable",
            "name": "claimStake",
            "nameLocation": "1677:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1662:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 85,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1662:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc2cd98",
            "id": 88,
            "mutability": "mutable",
            "name": "claimPeriod",
            "nameLocation": "1708:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1693:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1693:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3f480d9",
            "id": 90,
            "mutability": "mutable",
            "name": "challengePeriod",
            "nameLocation": "1740:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1725:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 89,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1725:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1d18adc5",
            "id": 92,
            "mutability": "mutable",
            "name": "challengePeriodExtension",
            "nameLocation": "1776:24:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1761:39:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1761:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "973a814e",
            "id": 94,
            "mutability": "mutable",
            "name": "requestCounter",
            "nameLocation": "1839:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1824:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 93,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1824:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4efa8f17",
            "id": 96,
            "mutability": "mutable",
            "name": "claimCounter",
            "nameLocation": "1874:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1859:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 95,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1859:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "81d12c58",
            "id": 101,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "1928:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1892:44:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$24_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Request)"
            },
            "typeName": {
              "id": 100,
              "keyType": {
                "id": 97,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1901:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1892:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$24_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Request)"
              },
              "valueType": {
                "id": 99,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 98,
                  "name": "Request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "1912:7:5"
                },
                "referencedDeclaration": 24,
                "src": "1912:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                  "typeString": "struct RequestManager.Request"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a888c2cd",
            "id": 106,
            "mutability": "mutable",
            "name": "claims",
            "nameLocation": "1976:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1942:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Claim)"
            },
            "typeName": {
              "id": 105,
              "keyType": {
                "id": 102,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1951:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1942:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Claim)"
              },
              "valueType": {
                "id": 104,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 103,
                  "name": "Claim",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33,
                  "src": "1962:5:5"
                },
                "referencedDeclaration": 33,
                "src": "1962:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                  "typeString": "struct RequestManager.Claim"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8f1d3776",
            "id": 111,
            "mutability": "mutable",
            "name": "challenges",
            "nameLocation": "2026:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 764,
            "src": "1988:48:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
              "typeString": "mapping(uint256 => struct RequestManager.Challenge)"
            },
            "typeName": {
              "id": 110,
              "keyType": {
                "id": 107,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1997:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1988:30:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                "typeString": "mapping(uint256 => struct RequestManager.Challenge)"
              },
              "valueType": {
                "id": 109,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 108,
                  "name": "Challenge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42,
                  "src": "2008:9:5"
                },
                "referencedDeclaration": 42,
                "src": "2008:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                  "typeString": "struct RequestManager.Challenge"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "2099:96:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 116,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2117:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 117,
                            "name": "claimCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2128:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2117:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 119,
                            "name": "claimId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "2144:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2154:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2144:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2117:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636c61696d4964206e6f742076616c6964",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2157:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        },
                        "value": "claimId not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f76ef4b9559047f48ccd368349bc1d95713392442f579fe3d262d71404d1dcff",
                          "typeString": "literal_string \"claimId not valid\""
                        }
                      ],
                      "id": 115,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2109:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:68:5"
                },
                {
                  "id": 126,
                  "nodeType": "PlaceholderStatement",
                  "src": "2187:1:5"
                }
              ]
            },
            "id": 128,
            "name": "validClaimId",
            "nameLocation": "2069:12:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "2090:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "2082:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:17:5"
            },
            "src": "2060:135:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "2355:183:5",
              "statements": [
                {
                  "expression": {
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "2365:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 140,
                      "name": "_claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "2378:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2365:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:24:5"
                },
                {
                  "expression": {
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "2399:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 144,
                      "name": "_claimPeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "2413:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2399:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:26:5"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2435:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 148,
                      "name": "_challengePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "2453:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2435:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2435:34:5"
                },
                {
                  "expression": {
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151,
                      "name": "challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 92,
                      "src": "2479:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 152,
                      "name": "_challengePeriodExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "2506:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2479:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:52:5"
                }
              ]
            },
            "id": 156,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "_claimStake",
                  "nameLocation": "2230:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2222:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2222:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_claimPeriod",
                  "nameLocation": "2259:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2251:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_challengePeriod",
                  "nameLocation": "2289:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2281:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "_challengePeriodExtension",
                  "nameLocation": "2323:25:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2315:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2315:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2212:142:5"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2355:0:5"
            },
            "scope": 764,
            "src": "2201:337:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 246,
              "nodeType": "Block",
              "src": "2760:707:5",
              "statements": [
                {
                  "expression": {
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 171,
                      "name": "requestCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 94,
                      "src": "2770:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2788:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2770:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:19:5"
                },
                {
                  "assignments": [
                    176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "2807:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2799:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2799:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "id": 177,
                    "name": "requestCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "2819:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:34:5"
                },
                {
                  "assignments": [
                    181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "newRequest",
                      "nameLocation": "2860:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "2844:26:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 179,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "2844:7:5"
                        },
                        "referencedDeclaration": 24,
                        "src": "2844:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "baseExpression": {
                      "id": 182,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "2873:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$24_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 184,
                    "indexExpression": {
                      "id": 183,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "2882:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2873:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$24_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2844:48:5"
                },
                {
                  "expression": {
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 186,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2902:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sourceTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "2902:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 189,
                      "name": "sourceTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "2934:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2902:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 191,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:50:5"
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 192,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "2962:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetChainId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2962:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 195,
                      "name": "targetChainId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "2989:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2962:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "2962:40:5"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3012:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "3012:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 201,
                      "name": "targetTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 162,
                      "src": "3044:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3012:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "3012:50:5"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 204,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3072:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "targetAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3072:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 207,
                      "name": "targetAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 164,
                      "src": "3099:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3072:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3072:40:5"
                },
                {
                  "expression": {
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 210,
                        "name": "newRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "3122:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3122:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 213,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3142:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3122:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 217,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "3192:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 218,
                        "name": "targetChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "3215:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 219,
                        "name": "targetTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "3242:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 220,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "3274:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 216,
                      "name": "RequestCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "3164:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3164:126:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "EmitStatement",
                  "src": "3159:131:5"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "3308:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 246,
                      "src": "3301:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$946",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 224,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 223,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 946,
                          "src": "3301:6:5"
                        },
                        "referencedDeclaration": 946,
                        "src": "3301:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$946",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 229,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "sourceTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 160,
                        "src": "3323:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 226,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "3316:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$946_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$946",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 233,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3379:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3379:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 237,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3399:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RequestManager_$764",
                                  "typeString": "contract RequestManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RequestManager_$764",
                                  "typeString": "contract RequestManager"
                                }
                              ],
                              "id": 236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3391:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 235,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3391:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3391:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 239,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "3406:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 231,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "3360:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$946",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 927,
                          "src": "3360:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3360:53:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3415:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3352:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:81:5"
                },
                {
                  "expression": {
                    "id": 244,
                    "name": "requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 176,
                    "src": "3451:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 170,
                  "id": 245,
                  "nodeType": "Return",
                  "src": "3444:16:5"
                }
              ]
            },
            "functionSelector": "0e0fe0eb",
            "id": 247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "request",
            "nameLocation": "2553:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "targetChainId",
                  "nameLocation": "2578:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2570:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "sourceTokenAddress",
                  "nameLocation": "2609:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2601:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "targetTokenAddress",
                  "nameLocation": "2645:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2637:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2637:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "2681:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2673:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2673:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2712:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2704:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2704:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2560:164:5"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "2747:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:9:5"
            },
            "scope": 764,
            "src": "2544:923:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "3549:562:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 255,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3567:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3567:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 257,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "3580:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3567:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b652070726f7669646564206e6f7420636f7272656374",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3592:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77e4edf4cb6abe2c14ea73a359fd970adb27fb065a4c3fbe978c36f8ab1a767a",
                          "typeString": "literal_string \"Stake provided not correct\""
                        },
                        "value": "Stake provided not correct"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77e4edf4cb6abe2c14ea73a359fd970adb27fb065a4c3fbe978c36f8ab1a767a",
                          "typeString": "literal_string \"Stake provided not correct\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3559:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3559:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3559:62:5"
                },
                {
                  "expression": {
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 262,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "3632:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3648:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3632:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:17:5"
                },
                {
                  "assignments": [
                    267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 267,
                      "mutability": "mutable",
                      "name": "newClaimId",
                      "nameLocation": "3667:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "3659:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3659:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "id": 268,
                    "name": "claimCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96,
                    "src": "3680:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3659:33:5"
                },
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "newClaim",
                      "nameLocation": "3717:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 316,
                      "src": "3703:22:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 271,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 270,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33,
                          "src": "3703:5:5"
                        },
                        "referencedDeclaration": 33,
                        "src": "3703:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 276,
                  "initialValue": {
                    "baseExpression": {
                      "id": 273,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "3728:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 275,
                    "indexExpression": {
                      "id": 274,
                      "name": "claimCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 96,
                      "src": "3735:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3728:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3703:45:5"
                },
                {
                  "expression": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 277,
                        "name": "newClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3758:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3758:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 280,
                      "name": "requestId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 249,
                      "src": "3779:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 282,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:30:5"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 283,
                        "name": "newClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3798:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "3798:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 286,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3817:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3817:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3798:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "3798:29:5"
                },
                {
                  "expression": {
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 290,
                        "name": "newClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3837:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "3837:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3858:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3837:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:26:5"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 296,
                        "name": "newClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3873:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "3873:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 299,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3896:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3896:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 301,
                        "name": "claimPeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "3914:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3896:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3873:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3873:52:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 306,
                        "name": "newClaimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "3967:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 307,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3991:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 308,
                          "name": "newClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "4014:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "4014:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 310,
                          "name": "newClaim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "4044:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 311,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "termination",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "4044:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 305,
                      "name": "ClaimCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "3941:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:133:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "EmitStatement",
                  "src": "3936:138:5"
                },
                {
                  "expression": {
                    "id": 314,
                    "name": "claimCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 96,
                    "src": "4092:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 253,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "4085:19:5"
                }
              ]
            },
            "functionSelector": "a3d6299d",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRequest",
            "nameLocation": "3482:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "3503:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3495:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3495:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3494:19:5"
            },
            "returnParameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3540:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3539:9:5"
            },
            "scope": 764,
            "src": "3473:638:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "4196:597:5",
              "statements": [
                {
                  "assignments": [
                    327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 327,
                      "mutability": "mutable",
                      "name": "challenge",
                      "nameLocation": "4224:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "4206:27:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                        "typeString": "struct RequestManager.Challenge"
                      },
                      "typeName": {
                        "id": 326,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 325,
                          "name": "Challenge",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42,
                          "src": "4206:9:5"
                        },
                        "referencedDeclaration": 42,
                        "src": "4206:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 331,
                  "initialValue": {
                    "baseExpression": {
                      "id": 328,
                      "name": "challenges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "4236:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                      }
                    },
                    "id": 330,
                    "indexExpression": {
                      "id": 329,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 319,
                      "src": "4247:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4236:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Challenge_$42_storage",
                      "typeString": "struct RequestManager.Challenge storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4206:49:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 333,
                            "name": "challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "4274:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                              "typeString": "struct RequestManager.Challenge storage pointer"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "challenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "4274:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4306:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4298:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 335,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4298:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4298:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4274:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206368616c6c656e676564",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d73da794b34fe5886daee27bd9c792e31c19da18adf6daae3cbcb573336d544",
                          "typeString": "literal_string \"Already challenged\""
                        },
                        "value": "Already challenged"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d73da794b34fe5886daee27bd9c792e31c19da18adf6daae3cbcb573336d544",
                          "typeString": "literal_string \"Already challenged\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4266:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4266:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "4266:65:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 344,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4349:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4349:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 346,
                              "name": "claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 106,
                              "src": "4367:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                                "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                              }
                            },
                            "id": 348,
                            "indexExpression": {
                              "id": 347,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "4374:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4367:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$33_storage",
                              "typeString": "struct RequestManager.Claim storage ref"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32,
                          "src": "4367:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4349:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920636c61696d6564207375636365737366756c6c79",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_995490cecb6fde23c177dc5222a0f3ee8803f2d9173c5af8b25d221047694df2",
                          "typeString": "literal_string \"Already claimed successfully\""
                        },
                        "value": "Already claimed successfully"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_995490cecb6fde23c177dc5222a0f3ee8803f2d9173c5af8b25d221047694df2",
                          "typeString": "literal_string \"Already claimed successfully\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4341:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4341:86:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:86:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 355,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4445:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4445:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 357,
                          "name": "claimStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "4457:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4445:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e64732070726f7669646564",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4469:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45cbc427c7db627458860c00d864adc6893c63527755e4f8f6c6875a7ebab887",
                          "typeString": "literal_string \"Not enough funds provided\""
                        },
                        "value": "Not enough funds provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45cbc427c7db627458860c00d864adc6893c63527755e4f8f6c6875a7ebab887",
                          "typeString": "literal_string \"Not enough funds provided\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4437:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4437:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "4437:60:5"
                },
                {
                  "expression": {
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 362,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4508:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "4508:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 365,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4531:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4531:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4508:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 368,
                  "nodeType": "ExpressionStatement",
                  "src": "4508:33:5"
                },
                {
                  "expression": {
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 369,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4551:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "challengerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "4551:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 372,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4579:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "4579:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4551:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:37:5"
                },
                {
                  "expression": {
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 376,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4598:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "4598:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 379,
                      "name": "claimStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "4623:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4598:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:35:5"
                },
                {
                  "expression": {
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 382,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "4643:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "4643:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 385,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4667:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4667:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 387,
                        "name": "challengePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "4685:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4667:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4643:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 390,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:57:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 392,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "4745:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4766:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4766:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 391,
                      "name": "ClaimChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "4716:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4716:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "EmitStatement",
                  "src": "4711:75:5"
                }
              ]
            },
            "functionSelector": "92c824d8",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 322,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 319,
                    "src": "4180:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 323,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 321,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "4167:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4167:21:5"
              }
            ],
            "name": "challengeClaim",
            "nameLocation": "4126:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "4149:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "4141:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4141:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4140:17:5"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4196:0:5"
            },
            "scope": 764,
            "src": "4117:676:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "4881:1314:5",
              "statements": [
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "4905:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "4891:19:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 407,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 406,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33,
                          "src": "4891:5:5"
                        },
                        "referencedDeclaration": 33,
                        "src": "4891:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 412,
                  "initialValue": {
                    "baseExpression": {
                      "id": 409,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "4913:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 411,
                    "indexExpression": {
                      "id": 410,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "4920:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4913:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4891:37:5"
                },
                {
                  "assignments": [
                    415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 415,
                      "mutability": "mutable",
                      "name": "challenge",
                      "nameLocation": "4956:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "4938:27:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                        "typeString": "struct RequestManager.Challenge"
                      },
                      "typeName": {
                        "id": 414,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 413,
                          "name": "Challenge",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42,
                          "src": "4938:9:5"
                        },
                        "referencedDeclaration": 42,
                        "src": "4938:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "baseExpression": {
                      "id": 416,
                      "name": "challenges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "4968:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                      }
                    },
                    "id": 418,
                    "indexExpression": {
                      "id": 417,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "4979:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4968:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Challenge_$42_storage",
                      "typeString": "struct RequestManager.Challenge storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4938:49:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 421,
                            "name": "challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "5005:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                              "typeString": "struct RequestManager.Challenge storage pointer"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "challenger",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 35,
                          "src": "5005:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5037:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5029:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 423,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5029:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5029:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5005:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d206e6f7420796574206368616c6c656e676564",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5041:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_184b455bd0763399a3a722dc5f5cccf3275dc036a39f8ba58e424ac328bb2185",
                          "typeString": "literal_string \"Claim not yet challenged\""
                        },
                        "value": "Claim not yet challenged"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_184b455bd0763399a3a722dc5f5cccf3275dc036a39f8ba58e424ac328bb2185",
                          "typeString": "literal_string \"Claim not yet challenged\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4997:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4997:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "4997:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 432,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5086:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5086:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 434,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 408,
                              "src": "5100:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 435,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "5100:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5086:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 437,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5117:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5117:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 439,
                              "name": "challenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5131:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                                "typeString": "struct RequestManager.Challenge storage pointer"
                              }
                            },
                            "id": 440,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challenger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "5131:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5117:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5086:65:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206368616c6c656e67656420627920616e6f746865722061646472657373",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5153:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e04705fb71b46c5ce3afcc438c0c092a172fd001104c60ad3aeb83b57bbd9eeb",
                          "typeString": "literal_string \"Already challenged by another address\""
                        },
                        "value": "Already challenged by another address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e04705fb71b46c5ce3afcc438c0c092a172fd001104c60ad3aeb83b57bbd9eeb",
                          "typeString": "literal_string \"Already challenged by another address\""
                        }
                      ],
                      "id": 431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5078:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5078:115:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "5078:115:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 447,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5211:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5211:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 449,
                            "name": "challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "5229:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                              "typeString": "struct RequestManager.Challenge storage pointer"
                            }
                          },
                          "id": 450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "5229:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5211:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368616c6c656e676520706572696f642066696e6973686564",
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5252:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31303daa3198c11ee50dc0b50b60472d8ef2afbb577cb80e3126c160bf20a74b",
                          "typeString": "literal_string \"Challenge period finished\""
                        },
                        "value": "Challenge period finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31303daa3198c11ee50dc0b50b60472d8ef2afbb577cb80e3126c160bf20a74b",
                          "typeString": "literal_string \"Challenge period finished\""
                        }
                      ],
                      "id": 446,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5203:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5203:77:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 454,
                  "nodeType": "ExpressionStatement",
                  "src": "5203:77:5"
                },
                {
                  "assignments": [
                    456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 456,
                      "mutability": "mutable",
                      "name": "claimerStakeBigger",
                      "nameLocation": "5296:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "5291:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 455,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5291:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 462,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 457,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5317:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "5317:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 459,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5342:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challengerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "5342:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5317:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5291:76:5"
                },
                {
                  "assignments": [
                    464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 464,
                      "mutability": "mutable",
                      "name": "nextActor",
                      "nameLocation": "5385:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "5377:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 463,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5377:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 471,
                  "initialValue": {
                    "condition": {
                      "id": 465,
                      "name": "claimerStakeBigger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "5397:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 468,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "5441:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "5441:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5397:57:5",
                    "trueExpression": {
                      "expression": {
                        "id": 466,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5418:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 467,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "5418:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5377:77:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 473,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5472:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5472:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 475,
                          "name": "nextActor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "5486:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5472:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656c696769626c6520746f206f7574626964",
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5497:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        },
                        "value": "Not eligible to outbid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53e2604a0114b11c1d789e6b14267b95918e9ede3be05afe9cd186cfa90bc222",
                          "typeString": "literal_string \"Not eligible to outbid\""
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5464:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5464:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "5464:58:5"
                },
                {
                  "assignments": [
                    481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 481,
                      "mutability": "mutable",
                      "name": "minStake",
                      "nameLocation": "5541:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "5533:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5533:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 494,
                  "initialValue": {
                    "condition": {
                      "id": 482,
                      "name": "claimerStakeBigger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "5552:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 488,
                          "name": "challenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5626:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                            "typeString": "struct RequestManager.Challenge storage pointer"
                          }
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "5626:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 490,
                          "name": "challenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5654:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                            "typeString": "struct RequestManager.Challenge storage pointer"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "5654:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5626:50:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5552:124:5",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 483,
                          "name": "challenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5573:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                            "typeString": "struct RequestManager.Challenge storage pointer"
                          }
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39,
                        "src": "5573:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "expression": {
                          "id": 485,
                          "name": "challenge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "5598:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                            "typeString": "struct RequestManager.Challenge storage pointer"
                          }
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "challengerStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37,
                        "src": "5598:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5573:50:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5533:143:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 496,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5694:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5694:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 498,
                          "name": "minStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "5706:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5694:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e64732070726f7669646564",
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5716:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45cbc427c7db627458860c00d864adc6893c63527755e4f8f6c6875a7ebab887",
                          "typeString": "literal_string \"Not enough funds provided\""
                        },
                        "value": "Not enough funds provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45cbc427c7db627458860c00d864adc6893c63527755e4f8f6c6875a7ebab887",
                          "typeString": "literal_string \"Not enough funds provided\""
                        }
                      ],
                      "id": 495,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5686:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5686:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "5686:58:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 503,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5759:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5759:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 505,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "5773:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "5773:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5759:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "5854:63:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 516,
                              "name": "challenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5868:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                                "typeString": "struct RequestManager.Challenge storage pointer"
                              }
                            },
                            "id": 518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "challengerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "5868:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 519,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5897:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5897:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5868:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "5868:38:5"
                      }
                    ]
                  },
                  "id": 524,
                  "nodeType": "IfStatement",
                  "src": "5755:162:5",
                  "trueBody": {
                    "id": 515,
                    "nodeType": "Block",
                    "src": "5788:60:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 508,
                              "name": "challenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "5802:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                                "typeString": "struct RequestManager.Challenge storage pointer"
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "5802:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 511,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5828:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5828:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5802:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "5802:35:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 525,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "5927:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "5927:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 530,
                            "name": "challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "5960:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                              "typeString": "struct RequestManager.Challenge storage pointer"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "5960:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 532,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5983:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5983:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 534,
                            "name": "challengePeriodExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "6001:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5983:42:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 528,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1034,
                          "src": "5951:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$1034_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 967,
                        "src": "5951:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5951:75:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5927:99:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 538,
                  "nodeType": "ExpressionStatement",
                  "src": "5927:99:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 540,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "6074:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 541,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6095:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6095:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 545,
                              "name": "challenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "6128:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                                "typeString": "struct RequestManager.Challenge storage pointer"
                              }
                            },
                            "id": 546,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "challengerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37,
                            "src": "6128:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 547,
                              "name": "challenge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "6155:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                                "typeString": "struct RequestManager.Challenge storage pointer"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimerStake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "6155:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 543,
                            "name": "Math",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "6119:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Math_$1034_$",
                              "typeString": "type(library Math)"
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 967,
                          "src": "6119:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6119:59:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 539,
                      "name": "ChallengeCountered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84,
                      "src": "6042:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:146:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 551,
                  "nodeType": "EmitStatement",
                  "src": "6037:151:5"
                }
              ]
            },
            "functionSelector": "19a4e062",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 403,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 400,
                    "src": "4864:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 404,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 402,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "4851:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4851:21:5"
              }
            ],
            "name": "counterChallenge",
            "nameLocation": "4808:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "4833:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "4825:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4824:17:5"
            },
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4881:0:5"
            },
            "scope": 764,
            "src": "4799:1396:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "6292:151:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 564,
                              "name": "challenges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "6310:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                                "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                              }
                            },
                            "id": 566,
                            "indexExpression": {
                              "id": 565,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "6321:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6310:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Challenge_$42_storage",
                              "typeString": "struct RequestManager.Challenge storage ref"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "termination",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "6310:31:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6345:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6310:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d20776173206368616c6c656e676564",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6349:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0abc78a088e779d5e918f43d6efef859f089f8438b5be939ee63bb3be6304032",
                          "typeString": "literal_string \"Claim was challenged\""
                        },
                        "value": "Claim was challenged"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0abc78a088e779d5e918f43d6efef859f089f8438b5be939ee63bb3be6304032",
                          "typeString": "literal_string \"Claim was challenged\""
                        }
                      ],
                      "id": 563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6302:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "6302:70:5"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 573,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6390:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6390:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 575,
                          "name": "claims",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "6409:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                            "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                          }
                        },
                        "id": 577,
                        "indexExpression": {
                          "id": 576,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "6416:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6409:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage",
                          "typeString": "struct RequestManager.Claim storage ref"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "6409:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6390:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 562,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "6383:53:5"
                }
              ]
            },
            "functionSelector": "1215fce4",
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 558,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 555,
                    "src": "6268:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 557,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "6255:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6255:21:5"
              }
            ],
            "name": "claimSuccessful",
            "nameLocation": "6210:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "6234:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6226:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6226:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6225:17:5"
            },
            "returnParameters": {
              "id": 562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "6286:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6286:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:6:5"
            },
            "scope": 764,
            "src": "6201:242:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 660,
              "nodeType": "Block",
              "src": "6515:818:5",
              "statements": [
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "claim",
                      "nameLocation": "6539:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 660,
                      "src": "6525:19:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                        "typeString": "struct RequestManager.Claim"
                      },
                      "typeName": {
                        "id": 591,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 590,
                          "name": "Claim",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33,
                          "src": "6525:5:5"
                        },
                        "referencedDeclaration": 33,
                        "src": "6525:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 596,
                  "initialValue": {
                    "baseExpression": {
                      "id": 593,
                      "name": "claims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "6547:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Claim_$33_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Claim storage ref)"
                      }
                    },
                    "id": 595,
                    "indexExpression": {
                      "id": 594,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 584,
                      "src": "6554:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6547:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33_storage",
                      "typeString": "struct RequestManager.Claim storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6525:37:5"
                },
                {
                  "assignments": [
                    599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "6588:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 660,
                      "src": "6572:23:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                        "typeString": "struct RequestManager.Request"
                      },
                      "typeName": {
                        "id": 598,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 597,
                          "name": "Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "6572:7:5"
                        },
                        "referencedDeclaration": 24,
                        "src": "6572:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 604,
                  "initialValue": {
                    "baseExpression": {
                      "id": 600,
                      "name": "requests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "6598:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$24_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Request storage ref)"
                      }
                    },
                    "id": 603,
                    "indexExpression": {
                      "expression": {
                        "id": 601,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "6607:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "6607:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6598:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$24_storage",
                      "typeString": "struct RequestManager.Request storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6572:51:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6641:16:5",
                        "subExpression": {
                          "expression": {
                            "id": 606,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "6642:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                              "typeString": "struct RequestManager.Claim storage pointer"
                            }
                          },
                          "id": 607,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 30,
                          "src": "6642:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c72656164792077697468647261776e",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6659:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219",
                          "typeString": "literal_string \"Already withdrawn\""
                        },
                        "value": "Already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b293b0896b22dc3a03a4f229b72f78da937962c6081a958fe0adeeb67107219",
                          "typeString": "literal_string \"Already withdrawn\""
                        }
                      ],
                      "id": 605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6633:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6633:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 611,
                  "nodeType": "ExpressionStatement",
                  "src": "6633:46:5"
                },
                {
                  "assignments": [
                    613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "claimChallenged",
                      "nameLocation": "6695:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 660,
                      "src": "6690:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6690:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 620,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 614,
                          "name": "challenges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "6713:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                            "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                          }
                        },
                        "id": 616,
                        "indexExpression": {
                          "id": 615,
                          "name": "claimId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "6724:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6713:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage",
                          "typeString": "struct RequestManager.Challenge storage ref"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "termination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "6713:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6748:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6713:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6690:59:5"
                },
                {
                  "condition": {
                    "id": 622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6763:16:5",
                    "subExpression": {
                      "id": 621,
                      "name": "claimChallenged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "6764:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 644,
                    "nodeType": "Block",
                    "src": "6886:153:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 634,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6908:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 635,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6908:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 636,
                                    "name": "challenges",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 111,
                                    "src": "6927:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                                      "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                                    }
                                  },
                                  "id": 638,
                                  "indexExpression": {
                                    "id": 637,
                                    "name": "claimId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 584,
                                    "src": "6938:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6927:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Challenge_$42_storage",
                                    "typeString": "struct RequestManager.Challenge storage ref"
                                  }
                                },
                                "id": 639,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "termination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41,
                                "src": "6927:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6908:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4368616c6c656e676520706572696f64206e6f742066696e6973686564",
                              "id": 641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6960:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b373610457a387037b31b281a31758fd0790def9937bdea1e2511404bdbdf3c4",
                                "typeString": "literal_string \"Challenge period not finished\""
                              },
                              "value": "Challenge period not finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b373610457a387037b31b281a31758fd0790def9937bdea1e2511404bdbdf3c4",
                                "typeString": "literal_string \"Challenge period not finished\""
                              }
                            ],
                            "id": 633,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6900:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6900:92:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "6900:92:5"
                      }
                    ]
                  },
                  "id": 645,
                  "nodeType": "IfStatement",
                  "src": "6759:280:5",
                  "trueBody": {
                    "id": 632,
                    "nodeType": "Block",
                    "src": "6781:99:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 624,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6803:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6803:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "expression": {
                                  "id": 626,
                                  "name": "claim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "6822:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                                    "typeString": "struct RequestManager.Claim storage pointer"
                                  }
                                },
                                "id": 627,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "termination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32,
                                "src": "6822:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6803:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436c61696d20706572696f64206e6f742066696e6973686564",
                              "id": 629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6841:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                "typeString": "literal_string \"Claim period not finished\""
                              },
                              "value": "Claim period not finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b8448f60bea41c2365f4846fbc9740459fd6b3e474680edd33ee842ead499b03",
                                "typeString": "literal_string \"Claim period not finished\""
                              }
                            ],
                            "id": 623,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6795:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6795:74:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 631,
                        "nodeType": "ExpressionStatement",
                        "src": "6795:74:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 647,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "7064:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 648,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "7073:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        }
                      },
                      {
                        "id": 649,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "7082:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                          "typeString": "struct RequestManager.Request storage pointer"
                        },
                        {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      ],
                      "id": 646,
                      "name": "withdraw_claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 706,
                      "src": "7049:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Request_$24_storage_ptr_$_t_struct$_Claim_$33_storage_ptr_$returns$__$",
                        "typeString": "function (uint256,struct RequestManager.Request storage pointer,struct RequestManager.Claim storage pointer)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7049:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 651,
                  "nodeType": "ExpressionStatement",
                  "src": "7049:39:5"
                },
                {
                  "condition": {
                    "id": 652,
                    "name": "claimChallenged",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 613,
                    "src": "7251:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 659,
                  "nodeType": "IfStatement",
                  "src": "7247:80:5",
                  "trueBody": {
                    "id": 658,
                    "nodeType": "Block",
                    "src": "7268:59:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 654,
                              "name": "claimId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "7301:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 655,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "7310:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            ],
                            "id": 653,
                            "name": "withdraw_challenge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "7282:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Claim_$33_storage_ptr_$returns$__$",
                              "typeString": "function (uint256,struct RequestManager.Claim storage pointer)"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7282:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "7282:34:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 661,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 587,
                    "name": "claimId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 584,
                    "src": "6506:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 586,
                  "name": "validClaimId",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 128,
                  "src": "6493:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6493:21:5"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6458:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "6475:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 661,
                  "src": "6467:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6467:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6466:17:5"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6515:0:5"
            },
            "scope": 764,
            "src": "6449:884:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "7434:299:5",
              "statements": [
                {
                  "expression": {
                    "id": 676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 672,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "7444:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "7444:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7462:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7444:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 677,
                  "nodeType": "ExpressionStatement",
                  "src": "7444:22:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 679,
                        "name": "claimId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "7510:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 680,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "7531:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "requestId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26,
                        "src": "7531:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 682,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "7560:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                            "typeString": "struct RequestManager.Claim storage pointer"
                          }
                        },
                        "id": 683,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "claimer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "7560:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 678,
                      "name": "ClaimWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "7482:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7482:101:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "EmitStatement",
                  "src": "7477:106:5"
                },
                {
                  "assignments": [
                    688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7601:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 705,
                      "src": "7594:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$946",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 687,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 686,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 946,
                          "src": "7594:6:5"
                        },
                        "referencedDeclaration": 946,
                        "src": "7594:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$946",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 693,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 690,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "7616:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                            "typeString": "struct RequestManager.Request storage pointer"
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sourceTokenAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "7616:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 689,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "7609:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$946_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7609:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$946",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7594:49:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 697,
                              "name": "claim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "7676:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                                "typeString": "struct RequestManager.Claim storage pointer"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "claimer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "7676:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 699,
                              "name": "request",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "7691:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                                "typeString": "struct RequestManager.Request storage pointer"
                              }
                            },
                            "id": 700,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23,
                            "src": "7691:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 695,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "7661:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$946",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 895,
                          "src": "7661:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7661:45:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7708:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7653:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7653:73:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "7653:73:5"
                }
              ]
            },
            "id": 706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw_claim",
            "nameLocation": "7348:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "7371:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "7363:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7363:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "request",
                  "nameLocation": "7396:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "7380:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                    "typeString": "struct RequestManager.Request"
                  },
                  "typeName": {
                    "id": 665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 664,
                      "name": "Request",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24,
                      "src": "7380:7:5"
                    },
                    "referencedDeclaration": 24,
                    "src": "7380:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$24_storage_ptr",
                      "typeString": "struct RequestManager.Request"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7419:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "7405:19:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                    "typeString": "struct RequestManager.Claim"
                  },
                  "typeName": {
                    "id": 668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 667,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33,
                      "src": "7405:5:5"
                    },
                    "referencedDeclaration": 33,
                    "src": "7405:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                      "typeString": "struct RequestManager.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7362:63:5"
            },
            "returnParameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7434:0:5"
            },
            "scope": 764,
            "src": "7339:394:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "7813:521:5",
              "statements": [
                {
                  "assignments": [
                    716
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 716,
                      "mutability": "mutable",
                      "name": "challenge",
                      "nameLocation": "7841:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "7823:27:5",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                        "typeString": "struct RequestManager.Challenge"
                      },
                      "typeName": {
                        "id": 715,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 714,
                          "name": "Challenge",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42,
                          "src": "7823:9:5"
                        },
                        "referencedDeclaration": 42,
                        "src": "7823:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 720,
                  "initialValue": {
                    "baseExpression": {
                      "id": 717,
                      "name": "challenges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "7853:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Challenge_$42_storage_$",
                        "typeString": "mapping(uint256 => struct RequestManager.Challenge storage ref)"
                      }
                    },
                    "id": 719,
                    "indexExpression": {
                      "id": 718,
                      "name": "claimId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "7864:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7853:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Challenge_$42_storage",
                      "typeString": "struct RequestManager.Challenge storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7823:49:5"
                },
                {
                  "assignments": [
                    722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "claimerStakeBigger",
                      "nameLocation": "7888:18:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "7883:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7883:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 728,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 723,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "7909:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "7909:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 725,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "7934:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challengerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "7934:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7909:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7883:76:5"
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "mutability": "mutable",
                      "name": "challengeWinner",
                      "nameLocation": "7977:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "7969:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7969:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 737,
                  "initialValue": {
                    "condition": {
                      "id": 731,
                      "name": "claimerStakeBigger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "7995:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 734,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "8039:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                          "typeString": "struct RequestManager.Claim storage pointer"
                        }
                      },
                      "id": 735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "8039:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7995:57:5",
                    "trueExpression": {
                      "expression": {
                        "id": 732,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "8016:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 733,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challenger",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35,
                      "src": "8016:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7969:83:5"
                },
                {
                  "assignments": [
                    739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "challengeStake",
                      "nameLocation": "8070:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8062:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8062:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 745,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 740,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "8087:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "8087:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 742,
                        "name": "challenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 716,
                        "src": "8112:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Challenge_$42_storage_ptr",
                          "typeString": "struct RequestManager.Challenge storage pointer"
                        }
                      },
                      "id": 743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "challengerStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "8112:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8087:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8062:75:5"
                },
                {
                  "assignments": [
                    747,
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 747,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "8154:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8149:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 746,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8149:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "8173:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 762,
                      "src": "8160:17:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8160:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8225:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 750,
                          "name": "challengeWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 730,
                          "src": "8181:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8181:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 752,
                          "name": "challengeStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 739,
                          "src": "8209:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8181:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8181:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8148:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 758,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "8246:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661696c656420746f2073656e64204574686572",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8252:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        },
                        "value": "Failed to send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445140255c9d889994129d349e64078d6f76b4b37ec896948f7e858f9b8a0dcb",
                          "typeString": "literal_string \"Failed to send Ether\""
                        }
                      ],
                      "id": 757,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8238:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8238:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "8238:37:5"
                }
              ]
            },
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw_challenge",
            "nameLocation": "7748:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "claimId",
                  "nameLocation": "7775:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "7767:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7798:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "7784:19:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                    "typeString": "struct RequestManager.Claim"
                  },
                  "typeName": {
                    "id": 710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 709,
                      "name": "Claim",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33,
                      "src": "7784:5:5"
                    },
                    "referencedDeclaration": 33,
                    "src": "7784:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$33_storage_ptr",
                      "typeString": "struct RequestManager.Claim"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7766:38:5"
            },
            "returnParameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7813:0:5"
            },
            "scope": 764,
            "src": "7739:595:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 765,
        "src": "392:7944:5",
        "usedErrors": []
      }
    ],
    "src": "32:8305:5"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161140e38038061140e83398101604081905261002f9161009f565b6100383361004f565b6001939093556002919091556003556004556100d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600080608085870312156100b557600080fd5b505082516020840151604085015160609095015191969095509092509050565b61132a806100e46000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063a3d6299d11610064578063a3d6299d14610358578063a888c2cd1461036b578063eb321173146103eb578063f2fde38b14610401578063f3f480d91461042157600080fd5b80638da5cb5b146102915780638f1d3776146102b957806392c824d81461032f578063973a814e1461034257600080fd5b80632e1a7d4d116100dc5780632e1a7d4d1461019c5780634efa8f17146101bc578063715018a6146101d25780637dc2cd98146101e757806381d12c58146101fd57600080fd5b80630e0fe0eb1461010e5780631215fce41461014157806319a4e062146101715780631d18adc514610186575b600080fd5b34801561011a57600080fd5b5061012e61012936600461122f565b610437565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c366004611216565b6105cb565b6040519015158152602001610138565b61018461017f366004611216565b61066c565b005b34801561019257600080fd5b5061012e60045481565b3480156101a857600080fd5b506101846101b7366004611216565b6109b2565b3480156101c857600080fd5b5061012e60065481565b3480156101de57600080fd5b50610184610b43565b3480156101f357600080fd5b5061012e60025481565b34801561020957600080fd5b50610256610218366004611216565b600760205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949293918216929091169085565b604080516001600160a01b0396871681526020810195909552928516928401929092529092166060820152608081019190915260a001610138565b34801561029d57600080fd5b506000546040516001600160a01b039091168152602001610138565b3480156102c557600080fd5b506103056102d4366004611216565b60096020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610138565b61018461033d366004611216565b610ba9565b34801561034e57600080fd5b5061012e60055481565b61012e610366366004611216565b610d4c565b34801561037757600080fd5b506103bd610386366004611216565b60086020526000908152604090208054600182015460029092015490916001600160a01b03811691600160a01b90910460ff169084565b604080519485526001600160a01b039093166020850152901515918301919091526060820152608001610138565b3480156103f757600080fd5b5061012e60015481565b34801561040d57600080fd5b5061018461041c3660046111d9565b610e56565b34801561042d57600080fd5b5061012e60035481565b600060016005600082825461044c91906112af565b90915550506005546000818152600760205260409081902080546001600160a01b03808a166001600160a01b0319928316178355600183018b90556002830180548a83169084168117909155600384018054928a169290931691909117909155600482018690559151909190899084907f84d53118259dd61386d5f2d40ea401e6f35d831e04ec37f7d424660886bfb11d906104eb9089815260200190565b60405180910390a46040516323b872dd60e01b81523360048201523060248201526044810185905287906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906111f4565b6105be5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b5090979650505050505050565b60008160065481111580156105e05750600081115b6105fc5760405162461bcd60e51b81526004016105b590611284565b600083815260096020526040902060030154156106525760405162461bcd60e51b815260206004820152601460248201527310db185a5b481dd85cc818da185b1b195b99d95960621b60448201526064016105b5565b505060009081526008602052604090206002015442101590565b80600654811115801561067f5750600081115b61069b5760405162461bcd60e51b81526004016105b590611284565b6000828152600860209081526040808320600990925290912080546001600160a01b031661070b5760405162461bcd60e51b815260206004820152601860248201527f436c61696d206e6f7420796574206368616c6c656e676564000000000000000060448201526064016105b5565b60018201546001600160a01b031633148061072f575080546001600160a01b031633145b6107895760405162461bcd60e51b815260206004820152602560248201527f416c7265616479206368616c6c656e67656420627920616e6f74686572206164604482015264647265737360d81b60648201526084016105b5565b806003015442106107dc5760405162461bcd60e51b815260206004820152601960248201527f4368616c6c656e676520706572696f642066696e69736865640000000000000060448201526064016105b5565b60018101546002820154116000816108015760018401546001600160a01b031661080d565b82546001600160a01b03165b9050336001600160a01b038216146108605760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016105b5565b600082610880578360020154846001015461087b91906112c7565b610894565b8360010154846002015461089491906112c7565b90508034116108e15760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da08199d5b991cc81c1c9bdd9a591959603a1b60448201526064016105b5565b60018501546001600160a01b0316331415610915573484600201600082825461090a91906112af565b9091555061092f9050565b3484600101600082825461092991906112af565b90915550505b61094a84600301546004544261094591906112af565b610f21565b8460030181905550867f4626e30dc12b4c7f8133abb51a00dd8828ca7a90ef06e23db76298bb6091016a3361098787600101548860020154610f21565b604080516001600160a01b03909316835260208301919091520160405180910390a250505050505050565b8060065481111580156109c55750600081115b6109e15760405162461bcd60e51b81526004016105b590611284565b60008281526008602090815260408083208054845260079092529091206001820154600160a01b900460ff1615610a4e5760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b60448201526064016105b5565b600084815260096020526040902060030154151580610ac0578260020154421015610abb5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016105b5565b610b21565b600085815260096020526040902060030154421015610b215760405162461bcd60e51b815260206004820152601d60248201527f4368616c6c656e676520706572696f64206e6f742066696e697368656400000060448201526064016105b5565b610b2c858385610f3a565b8015610b3c57610b3c858461106c565b5050505050565b6000546001600160a01b03163314610b9d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b5565b610ba7600061116d565b565b806006548111158015610bbc5750600081115b610bd85760405162461bcd60e51b81526004016105b590611284565b600082815260096020526040902080546001600160a01b031615610c335760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e4818da185b1b195b99d95960721b60448201526064016105b5565b6000838152600860205260409020600201544210610c935760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920636c61696d6564207375636365737366756c6c790000000060448201526064016105b5565b6001543411610ce05760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da08199d5b991cc81c1c9bdd9a591959603a1b60448201526064016105b5565b80546001600160a01b0319163317815534600180830191909155546002820155600354610d0d90426112af565b600382015560405133815283907f829b4d84d4743d197a9b0fad05abef9f517535e06d50e0b85b1e77089b8afa9d9060200160405180910390a2505050565b60006001543414610d9f5760405162461bcd60e51b815260206004820152601a60248201527f5374616b652070726f7669646564206e6f7420636f727265637400000000000060448201526064016105b5565b600160066000828254610db291906112af565b909155505060065460008181526008602052604090208381556001810180546001600160a81b0319163360ff60a01b1916179055600254610df390426112af565b600282018190556001820154604080518781526001600160a01b03909216602083015281019190915282907fd970dabcc5f2873d6eb169e62fdf8a4691be874148ab73513c8c939e446630999060600160405180910390a2505060065492915050565b6000546001600160a01b03163314610eb05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b5565b6001600160a01b038116610f155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b5565b610f1e8161116d565b50565b600081831015610f315781610f33565b825b9392505050565b600181018054600160a01b60ff60a01b198216179091558154604080519182526001600160a01b03909216602082015284917fc494c0d9b07fae9d937a92117991d3017ad9408a7d344caa86c184c47f7bd183910160405180910390a28154600182015460048085015460405163a9059cbb60e01b81526001600160a01b03938416928101929092526024820152911690819063a9059cbb90604401602060405180830381600087803b158015610ff057600080fd5b505af1158015611004573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102891906111f4565b6110665760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016105b5565b50505050565b6000828152600960205260408120600181015460028201549192911190816110a15760018401546001600160a01b03166110ad565b82546001600160a01b03165b90506000836001015484600201546110c591906112af565b9050600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611115576040519150601f19603f3d011682016040523d82523d6000602084013e61111a565b606091505b5091509150816111635760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016105b5565b5050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146111d457600080fd5b919050565b6000602082840312156111eb57600080fd5b610f33826111bd565b60006020828403121561120657600080fd5b81518015158114610f3357600080fd5b60006020828403121561122857600080fd5b5035919050565b600080600080600060a0868803121561124757600080fd5b85359450611257602087016111bd565b9350611265604087016111bd565b9250611273606087016111bd565b949793965091946080013592915050565b60208082526011908201527018db185a5b5259081b9bdd081d985b1a59607a1b604082015260600190565b600082198211156112c2576112c26112de565b500190565b6000828210156112d9576112d96112de565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122028f8cbc20d802b807705e8cd3e5497da6593c1fc445ed527474b3e1559864bbd64736f6c63430008070033",
  "bytecodeSha1": "65cea93dc413d80755b552510346550b84065916",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.7+commit.e28d00a7"
  },
  "contractName": "RequestManager",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "74": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Math.max": {
          "73": [
            299,
            305,
            true
          ]
        }
      },
      "4": {},
      "5": {
        "RequestManager.challengeClaim": {
          "66": [
            2117,
            2140,
            false
          ],
          "67": [
            4274,
            4308,
            true
          ],
          "68": [
            4349,
            4394,
            true
          ],
          "69": [
            4445,
            4467,
            true
          ]
        },
        "RequestManager.claimRequest": {
          "70": [
            3567,
            3590,
            true
          ]
        },
        "RequestManager.claimSuccessful": {
          "54": [
            6310,
            6346,
            true
          ]
        },
        "RequestManager.counterChallenge": {
          "55": [
            5086,
            5113,
            true
          ],
          "56": [
            5117,
            5151,
            true
          ],
          "57": [
            5211,
            5250,
            true
          ],
          "58": [
            5472,
            5495,
            true
          ],
          "59": [
            5552,
            5570,
            true
          ],
          "60": [
            5694,
            5714,
            true
          ],
          "61": [
            5759,
            5786,
            false
          ]
        },
        "RequestManager.request": {
          "53": [
            3360,
            3413,
            true
          ]
        },
        "RequestManager.withdraw": {
          "62": [
            6641,
            6657,
            true
          ],
          "63": [
            6803,
            6839,
            true
          ],
          "64": [
            6908,
            6958,
            true
          ],
          "65": [
            7251,
            7266,
            false
          ]
        },
        "RequestManager.withdraw_challenge": {
          "72": [
            8246,
            8250,
            true
          ]
        },
        "RequestManager.withdraw_claim": {
          "71": [
            7661,
            7706,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "51": [
            2131,
            2148
          ],
          "52": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "27": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "44": [
            1926,
            1999
          ],
          "45": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "26": [
            659,
            676
          ]
        }
      },
      "3": {
        "Math.max": {
          "46": [
            292,
            313
          ]
        }
      },
      "4": {},
      "5": {
        "RequestManager.challengeClaim": {
          "28": [
            4266,
            4331
          ],
          "29": [
            4341,
            4427
          ],
          "30": [
            4437,
            4497
          ],
          "31": [
            4508,
            4541
          ],
          "32": [
            4551,
            4588
          ],
          "33": [
            4598,
            4633
          ],
          "34": [
            4643,
            4700
          ],
          "35": [
            4711,
            4786
          ]
        },
        "RequestManager.claimRequest": {
          "36": [
            3559,
            3621
          ],
          "37": [
            3632,
            3649
          ],
          "38": [
            3758,
            3788
          ],
          "39": [
            3798,
            3827
          ],
          "40": [
            3837,
            3863
          ],
          "41": [
            3873,
            3925
          ],
          "42": [
            3936,
            4074
          ],
          "43": [
            4085,
            4104
          ]
        },
        "RequestManager.claimSuccessful": {
          "10": [
            6302,
            6372
          ],
          "11": [
            6383,
            6436
          ]
        },
        "RequestManager.counterChallenge": {
          "12": [
            4997,
            5068
          ],
          "13": [
            5078,
            5193
          ],
          "14": [
            5203,
            5280
          ],
          "15": [
            5464,
            5522
          ],
          "16": [
            5686,
            5744
          ],
          "17": [
            5802,
            5837
          ],
          "18": [
            5868,
            5906
          ],
          "19": [
            5927,
            6026
          ],
          "20": [
            6037,
            6188
          ]
        },
        "RequestManager.request": {
          "1": [
            2770,
            2789
          ],
          "2": [
            2902,
            2952
          ],
          "3": [
            2962,
            3002
          ],
          "4": [
            3012,
            3062
          ],
          "5": [
            3072,
            3112
          ],
          "6": [
            3122,
            3148
          ],
          "7": [
            3159,
            3290
          ],
          "8": [
            3352,
            3433
          ],
          "9": [
            3444,
            3460
          ]
        },
        "RequestManager.withdraw": {
          "21": [
            6633,
            6679
          ],
          "22": [
            6795,
            6869
          ],
          "23": [
            6900,
            6992
          ],
          "24": [
            7049,
            7088
          ],
          "25": [
            7282,
            7316
          ]
        },
        "RequestManager.withdraw_challenge": {
          "50": [
            8238,
            8275
          ]
        },
        "RequestManager.withdraw_claim": {
          "47": [
            7444,
            7466
          ],
          "48": [
            7477,
            7583
          ],
          "49": [
            7653,
            7726
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Math",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.2/SafeMath"
  ],
  "deployedBytecode": "6080604052600436106101095760003560e01c80638da5cb5b11610095578063a3d6299d11610064578063a3d6299d14610358578063a888c2cd1461036b578063eb321173146103eb578063f2fde38b14610401578063f3f480d91461042157600080fd5b80638da5cb5b146102915780638f1d3776146102b957806392c824d81461032f578063973a814e1461034257600080fd5b80632e1a7d4d116100dc5780632e1a7d4d1461019c5780634efa8f17146101bc578063715018a6146101d25780637dc2cd98146101e757806381d12c58146101fd57600080fd5b80630e0fe0eb1461010e5780631215fce41461014157806319a4e062146101715780631d18adc514610186575b600080fd5b34801561011a57600080fd5b5061012e61012936600461122f565b610437565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b5061016161015c366004611216565b6105cb565b6040519015158152602001610138565b61018461017f366004611216565b61066c565b005b34801561019257600080fd5b5061012e60045481565b3480156101a857600080fd5b506101846101b7366004611216565b6109b2565b3480156101c857600080fd5b5061012e60065481565b3480156101de57600080fd5b50610184610b43565b3480156101f357600080fd5b5061012e60025481565b34801561020957600080fd5b50610256610218366004611216565b600760205260009081526040902080546001820154600283015460038401546004909401546001600160a01b03938416949293918216929091169085565b604080516001600160a01b0396871681526020810195909552928516928401929092529092166060820152608081019190915260a001610138565b34801561029d57600080fd5b506000546040516001600160a01b039091168152602001610138565b3480156102c557600080fd5b506103056102d4366004611216565b60096020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b0390951685526020850193909352918301526060820152608001610138565b61018461033d366004611216565b610ba9565b34801561034e57600080fd5b5061012e60055481565b61012e610366366004611216565b610d4c565b34801561037757600080fd5b506103bd610386366004611216565b60086020526000908152604090208054600182015460029092015490916001600160a01b03811691600160a01b90910460ff169084565b604080519485526001600160a01b039093166020850152901515918301919091526060820152608001610138565b3480156103f757600080fd5b5061012e60015481565b34801561040d57600080fd5b5061018461041c3660046111d9565b610e56565b34801561042d57600080fd5b5061012e60035481565b600060016005600082825461044c91906112af565b90915550506005546000818152600760205260409081902080546001600160a01b03808a166001600160a01b0319928316178355600183018b90556002830180548a83169084168117909155600384018054928a169290931691909117909155600482018690559151909190899084907f84d53118259dd61386d5f2d40ea401e6f35d831e04ec37f7d424660886bfb11d906104eb9089815260200190565b60405180910390a46040516323b872dd60e01b81523360048201523060248201526044810185905287906001600160a01b038216906323b872dd90606401602060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906111f4565b6105be5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064015b60405180910390fd5b5090979650505050505050565b60008160065481111580156105e05750600081115b6105fc5760405162461bcd60e51b81526004016105b590611284565b600083815260096020526040902060030154156106525760405162461bcd60e51b815260206004820152601460248201527310db185a5b481dd85cc818da185b1b195b99d95960621b60448201526064016105b5565b505060009081526008602052604090206002015442101590565b80600654811115801561067f5750600081115b61069b5760405162461bcd60e51b81526004016105b590611284565b6000828152600860209081526040808320600990925290912080546001600160a01b031661070b5760405162461bcd60e51b815260206004820152601860248201527f436c61696d206e6f7420796574206368616c6c656e676564000000000000000060448201526064016105b5565b60018201546001600160a01b031633148061072f575080546001600160a01b031633145b6107895760405162461bcd60e51b815260206004820152602560248201527f416c7265616479206368616c6c656e67656420627920616e6f74686572206164604482015264647265737360d81b60648201526084016105b5565b806003015442106107dc5760405162461bcd60e51b815260206004820152601960248201527f4368616c6c656e676520706572696f642066696e69736865640000000000000060448201526064016105b5565b60018101546002820154116000816108015760018401546001600160a01b031661080d565b82546001600160a01b03165b9050336001600160a01b038216146108605760405162461bcd60e51b8152602060048201526016602482015275139bdd08195b1a59da589b19481d1bc81bdd5d189a5960521b60448201526064016105b5565b600082610880578360020154846001015461087b91906112c7565b610894565b8360010154846002015461089491906112c7565b90508034116108e15760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da08199d5b991cc81c1c9bdd9a591959603a1b60448201526064016105b5565b60018501546001600160a01b0316331415610915573484600201600082825461090a91906112af565b9091555061092f9050565b3484600101600082825461092991906112af565b90915550505b61094a84600301546004544261094591906112af565b610f21565b8460030181905550867f4626e30dc12b4c7f8133abb51a00dd8828ca7a90ef06e23db76298bb6091016a3361098787600101548860020154610f21565b604080516001600160a01b03909316835260208301919091520160405180910390a250505050505050565b8060065481111580156109c55750600081115b6109e15760405162461bcd60e51b81526004016105b590611284565b60008281526008602090815260408083208054845260079092529091206001820154600160a01b900460ff1615610a4e5760405162461bcd60e51b815260206004820152601160248201527020b63932b0b23c903bb4ba34323930bbb760791b60448201526064016105b5565b600084815260096020526040902060030154151580610ac0578260020154421015610abb5760405162461bcd60e51b815260206004820152601960248201527f436c61696d20706572696f64206e6f742066696e69736865640000000000000060448201526064016105b5565b610b21565b600085815260096020526040902060030154421015610b215760405162461bcd60e51b815260206004820152601d60248201527f4368616c6c656e676520706572696f64206e6f742066696e697368656400000060448201526064016105b5565b610b2c858385610f3a565b8015610b3c57610b3c858461106c565b5050505050565b6000546001600160a01b03163314610b9d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b5565b610ba7600061116d565b565b806006548111158015610bbc5750600081115b610bd85760405162461bcd60e51b81526004016105b590611284565b600082815260096020526040902080546001600160a01b031615610c335760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e4818da185b1b195b99d95960721b60448201526064016105b5565b6000838152600860205260409020600201544210610c935760405162461bcd60e51b815260206004820152601c60248201527f416c726561647920636c61696d6564207375636365737366756c6c790000000060448201526064016105b5565b6001543411610ce05760405162461bcd60e51b8152602060048201526019602482015278139bdd08195b9bdd59da08199d5b991cc81c1c9bdd9a591959603a1b60448201526064016105b5565b80546001600160a01b0319163317815534600180830191909155546002820155600354610d0d90426112af565b600382015560405133815283907f829b4d84d4743d197a9b0fad05abef9f517535e06d50e0b85b1e77089b8afa9d9060200160405180910390a2505050565b60006001543414610d9f5760405162461bcd60e51b815260206004820152601a60248201527f5374616b652070726f7669646564206e6f7420636f727265637400000000000060448201526064016105b5565b600160066000828254610db291906112af565b909155505060065460008181526008602052604090208381556001810180546001600160a81b0319163360ff60a01b1916179055600254610df390426112af565b600282018190556001820154604080518781526001600160a01b03909216602083015281019190915282907fd970dabcc5f2873d6eb169e62fdf8a4691be874148ab73513c8c939e446630999060600160405180910390a2505060065492915050565b6000546001600160a01b03163314610eb05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b5565b6001600160a01b038116610f155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b5565b610f1e8161116d565b50565b600081831015610f315781610f33565b825b9392505050565b600181018054600160a01b60ff60a01b198216179091558154604080519182526001600160a01b03909216602082015284917fc494c0d9b07fae9d937a92117991d3017ad9408a7d344caa86c184c47f7bd183910160405180910390a28154600182015460048085015460405163a9059cbb60e01b81526001600160a01b03938416928101929092526024820152911690819063a9059cbb90604401602060405180830381600087803b158015610ff057600080fd5b505af1158015611004573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102891906111f4565b6110665760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016105b5565b50505050565b6000828152600960205260408120600181015460028201549192911190816110a15760018401546001600160a01b03166110ad565b82546001600160a01b03165b90506000836001015484600201546110c591906112af565b9050600080836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611115576040519150601f19603f3d011682016040523d82523d6000602084013e61111a565b606091505b5091509150816111635760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016105b5565b5050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146111d457600080fd5b919050565b6000602082840312156111eb57600080fd5b610f33826111bd565b60006020828403121561120657600080fd5b81518015158114610f3357600080fd5b60006020828403121561122857600080fd5b5035919050565b600080600080600060a0868803121561124757600080fd5b85359450611257602087016111bd565b9350611265604087016111bd565b9250611273606087016111bd565b949793965091946080013592915050565b60208082526011908201527018db185a5b5259081b9bdd081d985b1a59607a1b604082015260600190565b600082198211156112c2576112c26112de565b500190565b6000828210156112d9576112d96112de565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122028f8cbc20d802b807705e8cd3e5497da6593c1fc445ed527474b3e1559864bbd64736f6c63430008070033",
  "deployedSourceMap": "392:7944:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2544:923;;;;;;;;;;-1:-1:-1;2544:923:5;;;;;:::i;:::-;;:::i;:::-;;;9788:25:6;;;9776:2;9761:18;2544:923:5;;;;;;;;6201:242;;;;;;;;;;-1:-1:-1;6201:242:5;;;;;:::i;:::-;;:::i;:::-;;;3524:14:6;;3517:22;3499:41;;3487:2;3472:18;6201:242:5;3359:187:6;4799:1396:5;;;;;;:::i;:::-;;:::i;:::-;;1761:39;;;;;;;;;;;;;;;;6449:884;;;;;;;;;;-1:-1:-1;6449:884:5;;;;;:::i;:::-;;:::i;1859:27::-;;;;;;;;;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;1693:26:5:-;;;;;;;;;;;;;;;;1892:44;;;;;;;;;;-1:-1:-1;1892:44:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1892:44:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2719:15:6;;;2701:34;;2766:2;2751:18;;2744:34;;;;2814:15;;;2794:18;;;2787:43;;;;2866:15;;;2861:2;2846:18;;2839:43;2913:3;2898:19;;2891:35;;;;2650:3;2635:19;1892:44:5;2404:528:6;973:85:0;;;;;;;;;;-1:-1:-1;1019:7:0;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;1683:51:6;;1671:2;1656:18;973:85:0;1537:203:6;1988:48:5;;;;;;;;;;-1:-1:-1;1988:48:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1988:48:5;;;;;;;;;;;;-1:-1:-1;;;;;3186:32:6;;;3168:51;;3250:2;3235:18;;3228:34;;;;3278:18;;;3271:34;3336:2;3321:18;;3314:34;3155:3;3140:19;1988:48:5;2937:417:6;4117:676:5;;;;;;:::i;:::-;;:::i;1824:29::-;;;;;;;;;;;;;;;;3473:638;;;;;;:::i;:::-;;:::i;1942:40::-;;;;;;;;;;-1:-1:-1;1942:40:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1942:40:5;;;-1:-1:-1;;;1942:40:5;;;;;;;;;;;;10328:25:6;;;-1:-1:-1;;;;;10389:32:6;;;10384:2;10369:18;;10362:60;10465:14;;10458:22;10438:18;;;10431:50;;;;10512:2;10497:18;;10490:34;10315:3;10300:19;1942:40:5;10103:427:6;1662:25:5;;;;;;;;;;;;;;;;1846:189:0;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;1725:30:5:-;;;;;;;;;;;;;;;;2544:923;2747:7;2788:1;2770:14;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;2819:14:5;;2799:17;2873:19;;;:8;:19;;;;;;;2902:50;;-1:-1:-1;;;;;2902:50:5;;;-1:-1:-1;;;;;;2902:50:5;;;;;;;2962:24;;:40;;;3012:29;;;:50;;;;;;;;;;;;;3072:24;;;:40;;;;;;;;;;;;;;;;3122:17;;;:26;;;3164:126;;2873:19;;3012:50;2989:13;;2819:14;;3164:126;;;;3142:6;9788:25:6;;9776:2;9761:18;;9642:177;3164:126:5;;;;;;;;3360:53;;-1:-1:-1;;;3360:53:5;;3379:10;3360:53;;;1985:34:6;3399:4:5;2035:18:6;;;2028:43;2087:18;;;2080:34;;;3323:18:5;;-1:-1:-1;;;;;3360:18:5;;;;;1920::6;;3360:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3352:81;;;;-1:-1:-1;;;3352:81:5;;4862:2:6;3352:81:5;;;4844:21:6;4901:2;4881:18;;;4874:30;-1:-1:-1;;;4920:18:6;;;4913:45;4975:18;;3352:81:5;;;;;;;;;-1:-1:-1;3451:9:5;;2544:923;-1:-1:-1;;;;;;;2544:923:5:o;6201:242::-;6286:4;6268:7;2128:12;;2117:7;:23;;:38;;;;;2154:1;2144:7;:11;2117:38;2109:68;;;;-1:-1:-1;;;2109:68:5;;;;;;;:::i;:::-;6310:19:::1;::::0;;;:10:::1;:19;::::0;;;;:31:::1;;::::0;:36;6302:70:::1;;;::::0;-1:-1:-1;;;6302:70:5;;3753:2:6;6302:70:5::1;::::0;::::1;3735:21:6::0;3792:2;3772:18;;;3765:30;-1:-1:-1;;;3811:18:6;;;3804:50;3871:18;;6302:70:5::1;3551:344:6::0;6302:70:5::1;-1:-1:-1::0;;6409:15:5::1;::::0;;;:6:::1;:15;::::0;;;;:27:::1;;::::0;6390:15:::1;:46;;::::0;6201:242::o;4799:1396::-;4864:7;2128:12;;2117:7;:23;;:38;;;;;2154:1;2144:7;:11;2117:38;2109:68;;;;-1:-1:-1;;;2109:68:5;;;;;;;:::i;:::-;4891:19:::1;4913:15:::0;;;:6:::1;:15;::::0;;;;;;;4968:10:::1;:19:::0;;;;;;5005:20;;-1:-1:-1;;;;;5005:20:5::1;4997:71;;;::::0;-1:-1:-1;;;4997:71:5;;4102:2:6;4997:71:5::1;::::0;::::1;4084:21:6::0;4141:2;4121:18;;;4114:30;4180:26;4160:18;;;4153:54;4224:18;;4997:71:5::1;3900:348:6::0;4997:71:5::1;5100:13;::::0;::::1;::::0;-1:-1:-1;;;;;5100:13:5::1;5086:10;:27;::::0;:65:::1;;-1:-1:-1::0;5131:20:5;;-1:-1:-1;;;;;5131:20:5::1;5117:10;:34;5086:65;5078:115;;;::::0;-1:-1:-1;;;5078:115:5;;9092:2:6;5078:115:5::1;::::0;::::1;9074:21:6::0;9131:2;9111:18;;;9104:30;9170:34;9150:18;;;9143:62;-1:-1:-1;;;9221:18:6;;;9214:35;9266:19;;5078:115:5::1;8890:401:6::0;5078:115:5::1;5229:9;:21;;;5211:15;:39;5203:77;;;::::0;-1:-1:-1;;;5203:77:5;;5553:2:6;5203:77:5::1;::::0;::::1;5535:21:6::0;5592:2;5572:18;;;5565:30;5631:27;5611:18;;;5604:55;5676:18;;5203:77:5::1;5351:349:6::0;5203:77:5::1;5342:25;::::0;::::1;::::0;5317:22:::1;::::0;::::1;::::0;:50:::1;5291:23;5317:50:::0;5397:57:::1;;5441:13;::::0;::::1;::::0;-1:-1:-1;;;;;5441:13:5::1;5397:57;;;5418:20:::0;;-1:-1:-1;;;;;5418:20:5::1;5397:57;5377:77:::0;-1:-1:-1;5472:10:5::1;-1:-1:-1::0;;;;;5472:23:5;::::1;;5464:58;;;::::0;-1:-1:-1;;;5464:58:5;;6610:2:6;5464:58:5::1;::::0;::::1;6592:21:6::0;6649:2;6629:18;;;6622:30;-1:-1:-1;;;6668:18:6;;;6661:52;6730:18;;5464:58:5::1;6408:346:6::0;5464:58:5::1;5533:16;5552:18;:124;;5654:9;:22;;;5626:9;:25;;;:50;;;;:::i;:::-;5552:124;;;5598:9;:25;;;5573:9;:22;;;:50;;;;:::i;:::-;5533:143;;5706:8;5694:9;:20;5686:58;;;::::0;-1:-1:-1;;;5686:58:5;;6256:2:6;5686:58:5::1;::::0;::::1;6238:21:6::0;6295:2;6275:18;;;6268:30;-1:-1:-1;;;6314:18:6;;;6307:55;6379:18;;5686:58:5::1;6054:349:6::0;5686:58:5::1;5773:13;::::0;::::1;::::0;-1:-1:-1;;;;;5773:13:5::1;5759:10;:27;5755:162;;;5828:9;5802;:22;;;:35;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5755:162:5::1;::::0;-1:-1:-1;5755:162:5::1;;5897:9;5868;:25;;;:38;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5755:162:5::1;5951:75;5960:9;:21;;;6001:24;;5983:15;:42;;;;:::i;:::-;5951:8;:75::i;:::-;5927:9;:21;;:99;;;;6074:7;6042:146;6095:10;6119:59;6128:9;:25;;;6155:9;:22;;;6119:8;:59::i;:::-;6042:146;::::0;;-1:-1:-1;;;;;2317:32:6;;;2299:51;;2381:2;2366:18;;2359:34;;;;2272:18;6042:146:5::1;;;;;;;4881:1314;;;;;4799:1396:::0;;:::o;6449:884::-;6506:7;2128:12;;2117:7;:23;;:38;;;;;2154:1;2144:7;:11;2117:38;2109:68;;;;-1:-1:-1;;;2109:68:5;;;;;;;:::i;:::-;6525:19:::1;6547:15:::0;;;:6:::1;:15;::::0;;;;;;;6607;;6598:25;;:8:::1;:25:::0;;;;;;6642:15:::1;::::0;::::1;::::0;-1:-1:-1;;;6642:15:5;::::1;;;6641:16;6633:46;;;::::0;-1:-1:-1;;;6633:46:5;;6961:2:6;6633:46:5::1;::::0;::::1;6943:21:6::0;7000:2;6980:18;;;6973:30;-1:-1:-1;;;7019:18:6;;;7012:47;7076:18;;6633:46:5::1;6759:341:6::0;6633:46:5::1;6690:20;6713:19:::0;;;:10:::1;:19;::::0;;;;:31:::1;;::::0;:36;::::1;::::0;6759:280:::1;;6822:5;:17;;;6803:15;:36;;6795:74;;;::::0;-1:-1:-1;;;6795:74:5;;8738:2:6;6795:74:5::1;::::0;::::1;8720:21:6::0;8777:2;8757:18;;;8750:30;8816:27;8796:18;;;8789:55;8861:18;;6795:74:5::1;8536:349:6::0;6795:74:5::1;6759:280;;;6927:19;::::0;;;:10:::1;:19;::::0;;;;:31:::1;;::::0;6908:15:::1;:50;;6900:92;;;::::0;-1:-1:-1;;;6900:92:5;;8380:2:6;6900:92:5::1;::::0;::::1;8362:21:6::0;8419:2;8399:18;;;8392:30;8458:31;8438:18;;;8431:59;8507:18;;6900:92:5::1;8178:353:6::0;6900:92:5::1;7049:39;7064:7;7073;7082:5;7049:14;:39::i;:::-;7251:15;7247:80;;;7282:34;7301:7;7310:5;7282:18;:34::i;:::-;6515:818;;;6449:884:::0;;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;7662:2:6;1177:68:0;;;7644:21:6;;;7681:18;;;7674:30;7740:34;7720:18;;;7713:62;7792:18;;1177:68:0;7460:356:6;1177:68:0;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;4117:676:5:-;4180:7;2128:12;;2117:7;:23;;:38;;;;;2154:1;2144:7;:11;2117:38;2109:68;;;;-1:-1:-1;;;2109:68:5;;;;;;;:::i;:::-;4206:27:::1;4236:19:::0;;;:10:::1;:19;::::0;;;;4274:20;;-1:-1:-1;;;;;4274:20:5::1;:34:::0;4266:65:::1;;;::::0;-1:-1:-1;;;4266:65:5;;5206:2:6;4266:65:5::1;::::0;::::1;5188:21:6::0;5245:2;5225:18;;;5218:30;-1:-1:-1;;;5264:18:6;;;5257:48;5322:18;;4266:65:5::1;5004:342:6::0;4266:65:5::1;4367:15;::::0;;;:6:::1;:15;::::0;;;;:27:::1;;::::0;4349:15:::1;:45;4341:86;;;::::0;-1:-1:-1;;;4341:86:5;;8023:2:6;4341:86:5::1;::::0;::::1;8005:21:6::0;8062:2;8042:18;;;8035:30;8101;8081:18;;;8074:58;8149:18;;4341:86:5::1;7821:352:6::0;4341:86:5::1;4457:10;;4445:9;:22;4437:60;;;::::0;-1:-1:-1;;;4437:60:5;;6256:2:6;4437:60:5::1;::::0;::::1;6238:21:6::0;6295:2;6275:18;;;6268:30;-1:-1:-1;;;6314:18:6;;;6307:55;6379:18;;4437:60:5::1;6054:349:6::0;4437:60:5::1;4508:33:::0;;-1:-1:-1;;;;;;4508:33:5::1;4531:10;4508:33;::::0;;4579:9:::1;4508:33:::0;4551:25;;::::1;:37:::0;;;;4623:10;4598:22:::1;::::0;::::1;:35:::0;4685:15:::1;::::0;4667:33:::1;::::0;:15:::1;:33;:::i;:::-;4643:21;::::0;::::1;:57:::0;4716:70:::1;::::0;4766:10:::1;1683:51:6::0;;4745:7:5;;4716:70:::1;::::0;1671:2:6;1656:18;4716:70:5::1;;;;;;;4196:597;4117:676:::0;;:::o;3473:638::-;3540:7;3580:10;;3567:9;:23;3559:62;;;;-1:-1:-1;;;3559:62:5;;7307:2:6;3559:62:5;;;7289:21:6;7346:2;7326:18;;;7319:30;7385:28;7365:18;;;7358:56;7431:18;;3559:62:5;7105:350:6;3559:62:5;3648:1;3632:12;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;3680:12:5;;3659:18;3728:20;;;:6;:20;;;;;3758:30;;;3798:16;;;:29;;-1:-1:-1;;;;;;3837:26:5;3817:10;-1:-1:-1;;;;3837:26:5;;;;3914:11;;3896:29;;:15;:29;:::i;:::-;3873:20;;;:52;;;4014:16;;;;3941:133;;;10737:25:6;;;-1:-1:-1;;;;;4014:16:5;;;10793:2:6;10778:18;;10771:60;10847:18;;10840:34;;;;3967:10:5;;3941:133;;10725:2:6;10710:18;3941:133:5;;;;;;;-1:-1:-1;;4092:12:5;;;3473:638;-1:-1:-1;;3473:638:5:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;7662:2:6;1177:68:0;;;7644:21:6;;;7681:18;;;7674:30;7740:34;7720:18;;;7713:62;7792:18;;1177:68:0;7460:356:6;1177:68:0;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;4455:2:6;1926:73:0::1;::::0;::::1;4437:21:6::0;4494:2;4474:18;;;4467:30;4533:34;4513:18;;;4506:62;-1:-1:-1;;;4584:18:6;;;4577:36;4630:19;;1926:73:0::1;4253:402:6::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;215:105:3:-;273:7;304:1;299;:6;;:14;;312:1;299:14;;;308:1;299:14;292:21;215:105;-1:-1:-1;;;215:105:3:o;7339:394:5:-;7462:4;7444:15;;:22;;-1:-1:-1;;;;;;;7444:22:5;;;;;;7531:15;;7482:101;;;9998:25:6;;;-1:-1:-1;;;;;7560:13:5;;;10054:2:6;10039:18;;10032:60;7510:7:5;;7482:101;;9971:18:6;7482:101:5;;;;;;;7616:26;;;7676:13;;;7691:14;;;;;7661:45;;-1:-1:-1;;;7661:45:5;;-1:-1:-1;;;;;7676:13:5;;;7661:45;;;2299:51:6;;;;2366:18;;;2359:34;7616:26:5;;;;;7661:14;;2272:18:6;;7661:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7653:73;;;;-1:-1:-1;;;7653:73:5;;4862:2:6;7653:73:5;;;4844:21:6;4901:2;4881:18;;;4874:30;-1:-1:-1;;;4920:18:6;;;4913:45;4975:18;;7653:73:5;4660:339:6;7653:73:5;7434:299;7339:394;;;:::o;7739:595::-;7823:27;7853:19;;;:10;:19;;;;;7934:25;;;;7909:22;;;;7853:19;;7909:50;;;;7995:57;;8039:13;;;;-1:-1:-1;;;;;8039:13:5;7995:57;;;8016:20;;-1:-1:-1;;;;;8016:20:5;7995:57;7969:83;;8062:22;8112:9;:25;;;8087:9;:22;;;:50;;;;:::i;:::-;8062:75;;8149:9;8160:17;8181:15;-1:-1:-1;;;;;8181:20:5;8209:14;8181:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8148:80;;;;8246:4;8238:37;;;;-1:-1:-1;;;8238:37:5;;5907:2:6;8238:37:5;;;5889:21:6;5946:2;5926:18;;;5919:30;-1:-1:-1;;;5965:18:6;;;5958:50;6025:18;;8238:37:5;5705:344:6;8238:37:5;7813:521;;;;;;7739:595;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:277::-;450:6;503:2;491:9;482:7;478:23;474:32;471:52;;;519:1;516;509:12;471:52;551:9;545:16;604:5;597:13;590:21;583:5;580:32;570:60;;626:1;623;616:12;665:180;724:6;777:2;765:9;756:7;752:23;748:32;745:52;;;793:1;790;783:12;745:52;-1:-1:-1;816:23:6;;665:180;-1:-1:-1;665:180:6:o;850:472::-;945:6;953;961;969;977;1030:3;1018:9;1009:7;1005:23;1001:33;998:53;;;1047:1;1044;1037:12;998:53;1083:9;1070:23;1060:33;;1112:38;1146:2;1135:9;1131:18;1112:38;:::i;:::-;1102:48;;1169:38;1203:2;1192:9;1188:18;1169:38;:::i;:::-;1159:48;;1226:38;1260:2;1249:9;1245:18;1226:38;:::i;:::-;850:472;;;;-1:-1:-1;850:472:6;;1311:3;1296:19;1283:33;;850:472;-1:-1:-1;;850:472:6:o;9296:341::-;9498:2;9480:21;;;9537:2;9517:18;;;9510:30;-1:-1:-1;;;9571:2:6;9556:18;;9549:47;9628:2;9613:18;;9296:341::o;10885:128::-;10925:3;10956:1;10952:6;10949:1;10946:13;10943:39;;;10962:18;;:::i;:::-;-1:-1:-1;10998:9:6;;10885:128::o;11018:125::-;11058:4;11086:1;11083;11080:8;11077:34;;;11091:18;;:::i;:::-;-1:-1:-1;11128:9:6;;11018:125::o;11148:127::-;11209:10;11204:3;11200:20;11197:1;11190:31;11240:4;11237:1;11230:15;11264:4;11261:1;11254:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    392,
    8336
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA3D6299D GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA3D6299D EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xA888C2CD EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xEB321173 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xF3F480D9 EQ PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x8F1D3776 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x92C824D8 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x973A814E EQ PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x4EFA8F17 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x7DC2CD98 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x81D12C58 EQ PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE0FE0EB EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x1215FCE4 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x19A4E062 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x1D18ADC5 EQ PUSH2 0x186 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x122F JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0xB43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP3 SWAP4 SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP3 DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x305 PUSH2 0x2D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x138 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x1216 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x184 PUSH2 0x41C CALLDATASIZE PUSH1 0x4 PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD DUP12 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP11 DUP4 AND SWAP1 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP3 ADD DUP7 SWAP1 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 DUP10 SWAP1 DUP5 SWAP1 PUSH32 0x84D53118259DD61386D5F2D40EA401E6F35D831E04EC37F7D424660886BFB11D SWAP1 PUSH2 0x4EB SWAP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x557 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x5E0 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD ISZERO PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DB185A5B481DD85CC818DA185B1B195B99D959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x67F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D206E6F7420796574206368616C6C656E6765640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x72F JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479206368616C6C656E67656420627920616E6F74686572206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD TIMESTAMP LT PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E676520706572696F642066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD GT PUSH1 0x0 DUP2 PUSH2 0x801 JUMPI PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x80D JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x860 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x880 JUMPI DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x87B SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x894 JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE GT PUSH2 0x8E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA08199D5B991CC81C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x915 JUMPI CALLVALUE DUP5 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x92F SWAP1 POP JUMP JUMPDEST CALLVALUE DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x94A DUP5 PUSH1 0x3 ADD SLOAD PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x945 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST PUSH2 0xF21 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP7 PUSH32 0x4626E30DC12B4C7F8133ABB51A00DD8828CA7A90EF06E23DB76298BB6091016A CALLER PUSH2 0x987 DUP8 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x2 ADD SLOAD PUSH2 0xF21 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP5 MSTORE PUSH1 0x7 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x20B63932B0B23C903BB4BA34323930BBB7 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD ISZERO ISZERO DUP1 PUSH2 0xAC0 JUMPI DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D20706572696F64206E6F742066696E697368656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4368616C6C656E676520706572696F64206E6F742066696E6973686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xB2C DUP6 DUP4 DUP6 PUSH2 0xF3A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB3C JUMPI PUSH2 0xB3C DUP6 DUP5 PUSH2 0x106C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xBA7 PUSH1 0x0 PUSH2 0x116D JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST PUSH2 0xBD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B5 SWAP1 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E4818DA185B1B195B99D959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920636C61696D6564207375636365737366756C6C7900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 SLOAD CALLVALUE GT PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x139BDD08195B9BDD59DA08199D5B991CC81C1C9BDD9A591959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE CALLVALUE PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0xD0D SWAP1 TIMESTAMP PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE DUP4 SWAP1 PUSH32 0x829B4D84D4743D197A9B0FAD05ABEF9F517535E06D50E0B85B1E77089B8AFA9D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD CALLVALUE EQ PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B652070726F7669646564206E6F7420636F7272656374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH2 0xDF3 SWAP1 TIMESTAMP PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 SWAP1 PUSH32 0xD970DABCC5F2873D6EB169E62FDF8A4691BE874148AB73513C8C939E44663099 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x6 SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xF1E DUP2 PUSH2 0x116D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0xF31 JUMPI DUP2 PUSH2 0xF33 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL NOT DUP3 AND OR SWAP1 SWAP2 SSTORE DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP2 PUSH32 0xC494C0D9B07FAE9D937A92117991D3017AD9408A7D344CAA86C184C47F7BD183 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x4 DUP1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1004 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1028 SWAP2 SWAP1 PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 GT SWAP1 DUP2 PUSH2 0x10A1 JUMPI PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10AD JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x12AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x111A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1163 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2330B4B632B2103A379039B2B7321022BA3432B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5B5 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF33 DUP3 PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH2 0x1257 PUSH1 0x20 DUP8 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP4 POP PUSH2 0x1265 PUSH1 0x40 DUP8 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP3 POP PUSH2 0x1273 PUSH1 0x60 DUP8 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x18DB185A5B5259081B9BDD081D985B1A59 PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12C2 JUMPI PUSH2 0x12C2 PUSH2 0x12DE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D9 PUSH2 0x12DE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xF8 0xCB 0xC2 0xD DUP1 0x2B DUP1 PUSH24 0x5E8CD3E5497DA6593C1FC445ED527474B3E1559864BBD64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109"
    },
    "12": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x95"
    },
    "29": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3D6299D"
    },
    "36": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "40": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA3D6299D"
    },
    "47": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x358"
    },
    "51": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA888C2CD"
    },
    "58": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x36B"
    },
    "62": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEB321173"
    },
    "69": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3EB"
    },
    "73": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x401"
    },
    "84": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF3F480D9"
    },
    "91": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x421"
    },
    "95": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "REVERT",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "107": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "108": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x291"
    },
    "111": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8F1D3776"
    },
    "118": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B9"
    },
    "122": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x92C824D8"
    },
    "129": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x32F"
    },
    "133": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x973A814E"
    },
    "140": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342"
    },
    "144": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "REVERT",
      "path": "5"
    },
    "149": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "150": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2E1A7D4D"
    },
    "156": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "GT",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDC"
    },
    "160": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2E1A7D4D"
    },
    "167": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19C"
    },
    "171": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4EFA8F17"
    },
    "178": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BC"
    },
    "182": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "189": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D2"
    },
    "193": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x7DC2CD98"
    },
    "200": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "204": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x81D12C58"
    },
    "211": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FD"
    },
    "215": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "218": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "REVERT",
      "path": "5"
    },
    "220": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "221": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "222": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE0FE0EB"
    },
    "227": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "228": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10E"
    },
    "231": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1215FCE4"
    },
    "238": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x141"
    },
    "242": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x19A4E062"
    },
    "249": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x171"
    },
    "253": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1D18ADC5"
    },
    "260": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x186"
    },
    "264": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "268": {
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "DUP1",
      "path": "5"
    },
    "269": {
      "first_revert": true,
      "fn": null,
      "offset": [
        392,
        8336
      ],
      "op": "REVERT",
      "path": "5"
    },
    "270": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "271": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "272": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "DUP1",
      "path": "5"
    },
    "273": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "274": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11A"
    },
    "277": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "278": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "280": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "DUP1",
      "path": "5"
    },
    "281": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "REVERT",
      "path": "5"
    },
    "282": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "287": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x129"
    },
    "290": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "291": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "293": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x122F"
    },
    "296": {
      "fn": "RequestManager.request",
      "jump": "i",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMP",
      "path": "5"
    },
    "297": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "298": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x437"
    },
    "301": {
      "fn": "RequestManager.request",
      "jump": "i",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMP",
      "path": "5"
    },
    "302": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "303": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "305": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "313": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "315": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "316": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "DUP1",
      "path": "5"
    },
    "317": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "318": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "SUB",
      "path": "5"
    },
    "319": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "320": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "RETURN",
      "path": "5"
    },
    "321": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "322": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "323": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "324": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "325": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14D"
    },
    "328": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "329": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "331": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "332": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "REVERT",
      "path": "5"
    },
    "333": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "334": {
      "op": "POP"
    },
    "335": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x161"
    },
    "338": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15C"
    },
    "341": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "342": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "344": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "347": {
      "fn": "RequestManager.claimSuccessful",
      "jump": "i",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "348": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "349": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5CB"
    },
    "352": {
      "fn": "RequestManager.claimSuccessful",
      "jump": "i",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "353": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "354": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "356": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "370": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "373": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17F"
    },
    "376": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "377": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "379": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "382": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "383": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "384": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66C"
    },
    "387": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "388": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "389": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "STOP",
      "path": "5"
    },
    "390": {
      "offset": [
        1761,
        1800
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "391": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "392": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "DUP1",
      "path": "5"
    },
    "393": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "394": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x192"
    },
    "397": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "398": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "400": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "DUP1",
      "path": "5"
    },
    "401": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "REVERT",
      "path": "5"
    },
    "402": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "403": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "POP",
      "path": "5"
    },
    "404": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "407": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "409": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "410": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "DUP2",
      "path": "5"
    },
    "411": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        1761,
        1800
      ],
      "op": "JUMP",
      "path": "5"
    },
    "412": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "413": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "414": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "DUP1",
      "path": "5"
    },
    "415": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "416": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A8"
    },
    "419": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "420": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "422": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "DUP1",
      "path": "5"
    },
    "423": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "REVERT",
      "path": "5"
    },
    "424": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "425": {
      "op": "POP"
    },
    "426": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "429": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B7"
    },
    "432": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "433": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "435": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "438": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMP",
      "path": "5"
    },
    "439": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "440": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B2"
    },
    "443": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMP",
      "path": "5"
    },
    "444": {
      "offset": [
        1859,
        1886
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "445": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "446": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "447": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "448": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C8"
    },
    "451": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "452": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "454": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "DUP1",
      "path": "5"
    },
    "455": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "REVERT",
      "path": "5"
    },
    "456": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "457": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "POP",
      "path": "5"
    },
    "458": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "461": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "463": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "464": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "465": {
      "fn": "RequestManager.withdraw",
      "offset": [
        1859,
        1886
      ],
      "op": "JUMP",
      "path": "5"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "467": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "468": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "470": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE"
    },
    "473": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "474": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "476": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "477": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "478": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "479": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "480": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "483": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB43"
    },
    "486": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "489": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP1",
      "path": "5"
    },
    "490": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "491": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F3"
    },
    "494": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "495": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "497": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP1",
      "path": "5"
    },
    "498": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "REVERT",
      "path": "5"
    },
    "499": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "500": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "POP",
      "path": "5"
    },
    "501": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "504": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "506": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "507": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "DUP2",
      "path": "5"
    },
    "508": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1693,
        1719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "509": {
      "offset": [
        1892,
        1936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "510": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "511": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "512": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "513": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x209"
    },
    "516": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "517": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "519": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "520": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "REVERT",
      "path": "5"
    },
    "521": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "522": {
      "op": "POP"
    },
    "523": {
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x256"
    },
    "526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x218"
    },
    "529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "530": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "532": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "535": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMP",
      "path": "5"
    },
    "536": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "537": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "539": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "541": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "542": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "544": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "545": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP2",
      "path": "5"
    },
    "546": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "547": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "550": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "551": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "552": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "553": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "555": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP3",
      "path": "5"
    },
    "556": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "ADD",
      "path": "5"
    },
    "557": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "558": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "560": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP4",
      "path": "5"
    },
    "561": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "ADD",
      "path": "5"
    },
    "562": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "563": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "565": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP5",
      "path": "5"
    },
    "566": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "ADD",
      "path": "5"
    },
    "567": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "568": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "570": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "571": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "572": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "ADD",
      "path": "5"
    },
    "573": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "580": {
      "op": "SHL"
    },
    "581": {
      "op": "SUB"
    },
    "582": {
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "583": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP5",
      "path": "5"
    },
    "584": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "AND",
      "path": "5"
    },
    "585": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "586": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "588": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "589": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP3",
      "path": "5"
    },
    "590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "AND",
      "path": "5"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "592": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "593": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "AND",
      "path": "5"
    },
    "595": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "596": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP6",
      "path": "5"
    },
    "597": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMP",
      "path": "5"
    },
    "598": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "599": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "601": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "602": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1892,
        1936
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "op": "SWAP7"
    },
    "612": {
      "op": "DUP8"
    },
    "613": {
      "op": "AND"
    },
    "614": {
      "op": "DUP2"
    },
    "615": {
      "op": "MSTORE"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "618": {
      "op": "DUP2"
    },
    "619": {
      "op": "ADD"
    },
    "620": {
      "op": "SWAP6"
    },
    "621": {
      "op": "SWAP1"
    },
    "622": {
      "op": "SWAP6"
    },
    "623": {
      "op": "MSTORE"
    },
    "624": {
      "op": "SWAP3"
    },
    "625": {
      "op": "DUP6"
    },
    "626": {
      "op": "AND"
    },
    "627": {
      "op": "SWAP3"
    },
    "628": {
      "op": "DUP5"
    },
    "629": {
      "op": "ADD"
    },
    "630": {
      "op": "SWAP3"
    },
    "631": {
      "op": "SWAP1"
    },
    "632": {
      "op": "SWAP3"
    },
    "633": {
      "op": "MSTORE"
    },
    "634": {
      "op": "SWAP1"
    },
    "635": {
      "op": "SWAP3"
    },
    "636": {
      "op": "AND"
    },
    "637": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "639": {
      "op": "DUP3"
    },
    "640": {
      "op": "ADD"
    },
    "641": {
      "op": "MSTORE"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "644": {
      "op": "DUP2"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "SWAP2"
    },
    "647": {
      "op": "SWAP1"
    },
    "648": {
      "op": "SWAP2"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "ADD"
    },
    "653": {
      "offset": [
        1892,
        1936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "656": {
      "op": "JUMP"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "658": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "660": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29D"
    },
    "664": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "665": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "667": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "668": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "669": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "670": {
      "op": "POP"
    },
    "671": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "673": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "674": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "676": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "683": {
      "op": "SHL"
    },
    "684": {
      "op": "SUB"
    },
    "685": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "687": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "688": {
      "op": "DUP2"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "692": {
      "op": "ADD"
    },
    "693": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138"
    },
    "696": {
      "op": "JUMP"
    },
    "697": {
      "offset": [
        1988,
        2036
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "698": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "699": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "700": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "701": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C5"
    },
    "704": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "705": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "707": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "708": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "REVERT",
      "path": "5"
    },
    "709": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "710": {
      "op": "POP"
    },
    "711": {
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x305"
    },
    "714": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D4"
    },
    "717": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "718": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "720": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "723": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMP",
      "path": "5"
    },
    "724": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "725": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "727": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "729": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "730": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "732": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "733": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP2",
      "path": "5"
    },
    "734": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "735": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "737": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "738": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "739": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "740": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "741": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "743": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP3",
      "path": "5"
    },
    "744": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "ADD",
      "path": "5"
    },
    "745": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "746": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "748": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP4",
      "path": "5"
    },
    "749": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "ADD",
      "path": "5"
    },
    "750": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "751": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "753": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "754": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "755": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "ADD",
      "path": "5"
    },
    "756": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "766": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "767": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "AND",
      "path": "5"
    },
    "768": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "769": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "770": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "771": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP5",
      "path": "5"
    },
    "772": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMP",
      "path": "5"
    },
    "773": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "774": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "776": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "DUP1",
      "path": "5"
    },
    "777": {
      "fn": "Ownable.owner",
      "offset": [
        1988,
        2036
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "op": "SWAP1"
    },
    "787": {
      "op": "SWAP6"
    },
    "788": {
      "op": "AND"
    },
    "789": {
      "op": "DUP6"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "793": {
      "op": "DUP6"
    },
    "794": {
      "op": "ADD"
    },
    "795": {
      "op": "SWAP4"
    },
    "796": {
      "op": "SWAP1"
    },
    "797": {
      "op": "SWAP4"
    },
    "798": {
      "op": "MSTORE"
    },
    "799": {
      "op": "SWAP2"
    },
    "800": {
      "op": "DUP4"
    },
    "801": {
      "op": "ADD"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "MSTORE"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "offset": [
        1988,
        2036
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "814": {
      "op": "JUMP"
    },
    "815": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "816": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "819": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33D"
    },
    "822": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "823": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "825": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "828": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMP",
      "path": "5"
    },
    "829": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "830": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA9"
    },
    "833": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMP",
      "path": "5"
    },
    "834": {
      "offset": [
        1824,
        1853
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "835": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "836": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "DUP1",
      "path": "5"
    },
    "837": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "838": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34E"
    },
    "841": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "842": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "844": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "DUP1",
      "path": "5"
    },
    "845": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "REVERT",
      "path": "5"
    },
    "846": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "847": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "POP",
      "path": "5"
    },
    "848": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "851": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "853": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "854": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "DUP2",
      "path": "5"
    },
    "855": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        1824,
        1853
      ],
      "op": "JUMP",
      "path": "5"
    },
    "856": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "857": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "860": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x366"
    },
    "863": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "864": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "866": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "869": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "870": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "871": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4C"
    },
    "874": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "875": {
      "offset": [
        1942,
        1982
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "876": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "877": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP1",
      "path": "5"
    },
    "878": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "879": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "882": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "883": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "885": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP1",
      "path": "5"
    },
    "886": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "REVERT",
      "path": "5"
    },
    "887": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BD"
    },
    "892": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x386"
    },
    "895": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "896": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "898": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1216"
    },
    "901": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMP",
      "path": "5"
    },
    "902": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "903": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "905": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "907": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "908": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "910": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "911": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP2",
      "path": "5"
    },
    "912": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "913": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "915": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "916": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "917": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP1",
      "path": "5"
    },
    "918": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "919": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "921": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP3",
      "path": "5"
    },
    "922": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "ADD",
      "path": "5"
    },
    "923": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "924": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "926": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "927": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "928": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "ADD",
      "path": "5"
    },
    "929": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "930": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "931": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "936": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "938": {
      "op": "SHL"
    },
    "939": {
      "op": "SUB"
    },
    "940": {
      "offset": [
        1942,
        1982
      ],
      "op": "DUP2",
      "path": "5"
    },
    "941": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "AND",
      "path": "5"
    },
    "942": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "949": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "950": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DIV",
      "path": "5"
    },
    "951": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "953": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "AND",
      "path": "5"
    },
    "954": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "955": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP5",
      "path": "5"
    },
    "956": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMP",
      "path": "5"
    },
    "957": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "958": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "960": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "DUP1",
      "path": "5"
    },
    "961": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1942,
        1982
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "962": {
      "op": "SWAP5"
    },
    "963": {
      "op": "DUP6"
    },
    "964": {
      "op": "MSTORE"
    },
    "965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "971": {
      "op": "SHL"
    },
    "972": {
      "op": "SUB"
    },
    "973": {
      "op": "SWAP1"
    },
    "974": {
      "op": "SWAP4"
    },
    "975": {
      "op": "AND"
    },
    "976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "978": {
      "op": "DUP6"
    },
    "979": {
      "op": "ADD"
    },
    "980": {
      "op": "MSTORE"
    },
    "981": {
      "op": "SWAP1"
    },
    "982": {
      "op": "ISZERO"
    },
    "983": {
      "op": "ISZERO"
    },
    "984": {
      "op": "SWAP2"
    },
    "985": {
      "op": "DUP4"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "SWAP2"
    },
    "988": {
      "op": "SWAP1"
    },
    "989": {
      "op": "SWAP2"
    },
    "990": {
      "op": "MSTORE"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "993": {
      "op": "DUP3"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "offset": [
        1942,
        1982
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "1002": {
      "op": "JUMP"
    },
    "1003": {
      "offset": [
        1662,
        1687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1004": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1005": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1006": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1007": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F7"
    },
    "1010": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1011": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1013": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1014": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1015": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1016": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "POP",
      "path": "5"
    },
    "1017": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "1020": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1022": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1023": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1024": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        1662,
        1687
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1025": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1027": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40D"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1033": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1038": {
      "op": "POP"
    },
    "1039": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41C"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D9"
    },
    "1051": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE56"
    },
    "1056": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1057": {
      "offset": [
        1725,
        1755
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1060": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1061": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42D"
    },
    "1064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1065": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1067": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1068": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1069": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1070": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "POP",
      "path": "5"
    },
    "1071": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "1074": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1077": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1725,
        1755
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1079": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1080": {
      "fn": "RequestManager.request",
      "offset": [
        2747,
        2754
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1082": {
      "fn": "RequestManager.request",
      "offset": [
        2788,
        2789
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 1,
      "value": "0x1"
    },
    "1084": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1086": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2784
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1088": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1089": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1090": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1091": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x44C"
    },
    "1094": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1095": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1096": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "1099": {
      "fn": "RequestManager.request",
      "jump": "i",
      "offset": [
        2770,
        2789
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1100": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1101": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1102": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1103": {
      "fn": "RequestManager.request",
      "offset": [
        2770,
        2789
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "op": "POP"
    },
    "1106": {
      "fn": "RequestManager.request",
      "offset": [
        2819,
        2833
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1108": {
      "fn": "RequestManager.request",
      "offset": [
        2819,
        2833
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1109": {
      "fn": "RequestManager.request",
      "offset": [
        2799,
        2816
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1111": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1112": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1113": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1114": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2881
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "1116": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1118": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1119": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1121": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1122": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1123": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1124": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1125": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 2
    },
    "1126": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1133": {
      "op": "SHL"
    },
    "1134": {
      "op": "SUB"
    },
    "1135": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1136": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1137": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "AND",
      "path": "5"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "op": "NOT"
    },
    "1147": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1148": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1149": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "AND",
      "path": "5"
    },
    "1150": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "OR",
      "path": "5"
    },
    "1151": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1152": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1153": {
      "fn": "RequestManager.request",
      "offset": [
        2902,
        2952
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1155": {
      "fn": "RequestManager.request",
      "offset": [
        2962,
        2986
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 3
    },
    "1156": {
      "fn": "RequestManager.request",
      "offset": [
        2962,
        2986
      ],
      "op": "ADD",
      "path": "5"
    },
    "1157": {
      "fn": "RequestManager.request",
      "offset": [
        2962,
        3002
      ],
      "op": "DUP12",
      "path": "5"
    },
    "1158": {
      "fn": "RequestManager.request",
      "offset": [
        2962,
        3002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1159": {
      "fn": "RequestManager.request",
      "offset": [
        2962,
        3002
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1160": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3041
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0x2"
    },
    "1162": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3041
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1163": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3041
      ],
      "op": "ADD",
      "path": "5"
    },
    "1164": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1165": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1166": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1167": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1168": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "AND",
      "path": "5"
    },
    "1169": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1170": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1171": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "AND",
      "path": "5"
    },
    "1172": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1173": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "OR",
      "path": "5"
    },
    "1174": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1175": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1176": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1177": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3096
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 5,
      "value": "0x3"
    },
    "1179": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3096
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1180": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3096
      ],
      "op": "ADD",
      "path": "5"
    },
    "1181": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1182": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1183": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1184": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1185": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "AND",
      "path": "5"
    },
    "1186": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1187": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1188": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1189": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "AND",
      "path": "5"
    },
    "1190": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1191": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1192": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1193": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "OR",
      "path": "5"
    },
    "1194": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1195": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1196": {
      "fn": "RequestManager.request",
      "offset": [
        3072,
        3112
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1197": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3139
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x4"
    },
    "1199": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3139
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1200": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3139
      ],
      "op": "ADD",
      "path": "5"
    },
    "1201": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3148
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1202": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3148
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1203": {
      "fn": "RequestManager.request",
      "offset": [
        3122,
        3148
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1204": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 7
    },
    "1205": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1206": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1207": {
      "fn": "RequestManager.request",
      "offset": [
        2873,
        2892
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1208": {
      "fn": "RequestManager.request",
      "offset": [
        3012,
        3062
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1209": {
      "fn": "RequestManager.request",
      "offset": [
        2989,
        3002
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1210": {
      "fn": "RequestManager.request",
      "offset": [
        2989,
        3002
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1211": {
      "fn": "RequestManager.request",
      "offset": [
        2819,
        2833
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1212": {
      "fn": "RequestManager.request",
      "offset": [
        2819,
        2833
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1213": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x84D53118259DD61386D5F2D40EA401E6F35D831E04EC37F7D424660886BFB11D"
    },
    "1246": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1247": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4EB"
    },
    "1250": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1251": {
      "fn": "RequestManager.request",
      "offset": [
        3142,
        3148
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1252": {
      "op": "DUP2"
    },
    "1253": {
      "op": "MSTORE"
    },
    "1254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "SWAP1"
    },
    "1258": {
      "op": "JUMP"
    },
    "1259": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1260": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1262": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1263": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1264": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1265": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SUB",
      "path": "5"
    },
    "1266": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1267": {
      "fn": "RequestManager.request",
      "offset": [
        3164,
        3290
      ],
      "op": "LOG4",
      "path": "5"
    },
    "1268": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x40"
    },
    "1270": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1271": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1280": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1281": {
      "fn": "RequestManager.request",
      "offset": [
        3379,
        3389
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1282": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1284": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1285": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ADD",
      "path": "5"
    },
    "1286": {
      "op": "MSTORE"
    },
    "1287": {
      "fn": "RequestManager.request",
      "offset": [
        3399,
        3403
      ],
      "op": "ADDRESS",
      "path": "5"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1290": {
      "op": "DUP3"
    },
    "1291": {
      "op": "ADD"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1295": {
      "op": "DUP2"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "op": "DUP6"
    },
    "1298": {
      "op": "SWAP1"
    },
    "1299": {
      "op": "MSTORE"
    },
    "1300": {
      "fn": "RequestManager.request",
      "offset": [
        3323,
        3341
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1301": {
      "fn": "RequestManager.request",
      "offset": [
        3323,
        3341
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1308": {
      "op": "SHL"
    },
    "1309": {
      "op": "SUB"
    },
    "1310": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3378
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1311": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3378
      ],
      "op": "AND",
      "path": "5"
    },
    "1312": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1313": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3378
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "1318": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3378
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1321": {
      "op": "ADD"
    },
    "1322": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1324": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1326": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1327": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1328": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1329": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "SUB",
      "path": "5"
    },
    "1330": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1331": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1333": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1334": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1335": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "1336": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1337": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1338": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1339": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x543"
    },
    "1342": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1343": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1345": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1346": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "1347": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1348": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1349": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "GAS",
      "path": "5"
    },
    "1350": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "CALL",
      "path": "5"
    },
    "1351": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1352": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1353": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1354": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x557"
    },
    "1357": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1358": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1359": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1361": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1362": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1363": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1364": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1366": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1367": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1368": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1369": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1370": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1371": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1372": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1374": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1375": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1376": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1378": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "NOT",
      "path": "5"
    },
    "1379": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1381": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1382": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ADD",
      "path": "5"
    },
    "1383": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "AND",
      "path": "5"
    },
    "1384": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1385": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ADD",
      "path": "5"
    },
    "1386": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1387": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1389": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1390": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "POP",
      "path": "5"
    },
    "1391": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1392": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "ADD",
      "path": "5"
    },
    "1393": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1394": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57B"
    },
    "1397": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1398": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1399": {
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F4"
    },
    "1402": {
      "fn": "RequestManager.request",
      "jump": "i",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1403": {
      "branch": 53,
      "fn": "RequestManager.request",
      "offset": [
        3360,
        3413
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1404": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BE"
    },
    "1407": {
      "branch": 53,
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1408": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1410": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1417": {
      "op": "SHL"
    },
    "1418": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1419": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1422": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1424": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1425": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "ADD",
      "path": "5"
    },
    "1426": {
      "op": "MSTORE"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1431": {
      "op": "DUP3"
    },
    "1432": {
      "op": "ADD"
    },
    "1433": {
      "op": "MSTORE"
    },
    "1434": {
      "op": "PUSH15",
      "value": "0x151C985B9CD9995C8819985A5B1959"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "1452": {
      "op": "SHL"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1460": {
      "op": "ADD"
    },
    "1461": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1462": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1464": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1465": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1466": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1467": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "SUB",
      "path": "5"
    },
    "1468": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1469": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1470": {
      "fn": "RequestManager.request",
      "offset": [
        3352,
        3433
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1471": {
      "op": "POP"
    },
    "1472": {
      "fn": "RequestManager.request",
      "offset": [
        3451,
        3460
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 9
    },
    "1473": {
      "fn": "RequestManager.request",
      "offset": [
        3451,
        3460
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1474": {
      "fn": "RequestManager.request",
      "offset": [
        2544,
        3467
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "op": "POP"
    },
    "1477": {
      "op": "POP"
    },
    "1478": {
      "op": "POP"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "op": "POP"
    },
    "1481": {
      "op": "POP"
    },
    "1482": {
      "fn": "RequestManager.request",
      "jump": "o",
      "offset": [
        2544,
        3467
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1483": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1484": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6286,
        6290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1486": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6268,
        6275
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1487": {
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "1489": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2128,
        2140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1490": {
      "offset": [
        2117,
        2124
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1491": {
      "offset": [
        2117,
        2140
      ],
      "op": "GT",
      "path": "5"
    },
    "1492": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2117,
        2140
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1493": {
      "offset": [
        2117,
        2155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1494": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2117,
        2155
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1495": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2117,
        2155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E0"
    },
    "1498": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1499": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2117,
        2155
      ],
      "op": "POP",
      "path": "5"
    },
    "1500": {
      "offset": [
        2154,
        2155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1502": {
      "offset": [
        2144,
        2151
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1503": {
      "offset": [
        2144,
        2155
      ],
      "op": "GT",
      "path": "5"
    },
    "1504": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1505": {
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5FC"
    },
    "1508": {
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1509": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1511": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1512": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1518": {
      "op": "SHL"
    },
    "1519": {
      "offset": [
        2109,
        2177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1520": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1521": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1523": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "ADD",
      "path": "5"
    },
    "1524": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "1527": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1528": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1284"
    },
    "1531": {
      "fn": "RequestManager.claimSuccessful",
      "jump": "i",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1532": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1533": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x0"
    },
    "1535": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1536": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1537": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1538": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6320
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "1540": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1542": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1543": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1545": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1546": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6329
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1547": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1549": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6341
      ],
      "op": "ADD",
      "path": "5"
    },
    "1550": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6341
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1551": {
      "branch": 54,
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6310,
        6346
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1552": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x652"
    },
    "1555": {
      "branch": 54,
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1556": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1558": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1559": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1567": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1570": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1572": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1573": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "ADD",
      "path": "5"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1579": {
      "op": "DUP3"
    },
    "1580": {
      "op": "ADD"
    },
    "1581": {
      "op": "MSTORE"
    },
    "1582": {
      "op": "PUSH20",
      "value": "0x10DB185A5B481DD85CC818DA185B1B195B99D959"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1605": {
      "op": "SHL"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1608": {
      "op": "DUP3"
    },
    "1609": {
      "op": "ADD"
    },
    "1610": {
      "op": "MSTORE"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "1617": {
      "op": "JUMP"
    },
    "1618": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6302,
        6372
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1619": {
      "op": "POP"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x0"
    },
    "1623": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1624": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1625": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1626": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6415
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1628": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1630": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1631": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1633": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1634": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6424
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1635": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1637": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6436
      ],
      "op": "ADD",
      "path": "5"
    },
    "1638": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6409,
        6436
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1639": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6390,
        6405
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1640": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6390,
        6436
      ],
      "op": "LT",
      "path": "5"
    },
    "1641": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6390,
        6436
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1642": {
      "fn": "RequestManager.claimSuccessful",
      "offset": [
        6390,
        6436
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1643": {
      "fn": "RequestManager.claimSuccessful",
      "jump": "o",
      "offset": [
        6201,
        6443
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1644": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1645": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4864,
        4871
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1646": {
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "1648": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2128,
        2140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1649": {
      "offset": [
        2117,
        2124
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1650": {
      "offset": [
        2117,
        2140
      ],
      "op": "GT",
      "path": "5"
    },
    "1651": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2117,
        2140
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1652": {
      "offset": [
        2117,
        2155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1653": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2117,
        2155
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1654": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2117,
        2155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67F"
    },
    "1657": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1658": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2117,
        2155
      ],
      "op": "POP",
      "path": "5"
    },
    "1659": {
      "offset": [
        2154,
        2155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1661": {
      "offset": [
        2144,
        2151
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1662": {
      "offset": [
        2144,
        2155
      ],
      "op": "GT",
      "path": "5"
    },
    "1663": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1664": {
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x69B"
    },
    "1667": {
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1668": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1670": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1671": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "offset": [
        2109,
        2177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1679": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1680": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1682": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "ADD",
      "path": "5"
    },
    "1683": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "1686": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1687": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1284"
    },
    "1690": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1691": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1692": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4891,
        4910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1694": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1695": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1696": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1697": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "1699": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1701": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1702": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1703": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1704": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1706": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1707": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1708": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4913,
        4928
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1709": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4978
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "1711": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1712": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1713": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1714": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1715": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1716": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4968,
        4987
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1717": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5005,
        5025
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 12
    },
    "1718": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5005,
        5025
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5005,
        5025
      ],
      "op": "AND",
      "path": "5"
    },
    "1728": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x70B"
    },
    "1731": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1732": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1734": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1743": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1746": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1748": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1749": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "ADD",
      "path": "5"
    },
    "1750": {
      "op": "MSTORE"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1755": {
      "op": "DUP3"
    },
    "1756": {
      "op": "ADD"
    },
    "1757": {
      "op": "MSTORE"
    },
    "1758": {
      "op": "PUSH32",
      "value": "0x436C61696D206E6F7420796574206368616C6C656E6765640000000000000000"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1793": {
      "op": "DUP3"
    },
    "1794": {
      "op": "ADD"
    },
    "1795": {
      "op": "MSTORE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1798": {
      "op": "ADD"
    },
    "1799": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "1802": {
      "op": "JUMP"
    },
    "1803": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4997,
        5068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1804": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5100,
        5113
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 13,
      "value": "0x1"
    },
    "1806": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5100,
        5113
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1807": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5100,
        5113
      ],
      "op": "ADD",
      "path": "5"
    },
    "1808": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5100,
        5113
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "SUB"
    },
    "1817": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5100,
        5113
      ],
      "op": "AND",
      "path": "5"
    },
    "1818": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5096
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1819": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5113
      ],
      "op": "EQ",
      "path": "5"
    },
    "1820": {
      "branch": 55,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5113
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1821": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5151
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72F"
    },
    "1824": {
      "branch": 55,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5151
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1825": {
      "op": "POP"
    },
    "1826": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5131,
        5151
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1827": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5131,
        5151
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1834": {
      "op": "SHL"
    },
    "1835": {
      "op": "SUB"
    },
    "1836": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5131,
        5151
      ],
      "op": "AND",
      "path": "5"
    },
    "1837": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5117,
        5127
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1838": {
      "branch": 56,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5117,
        5151
      ],
      "op": "EQ",
      "path": "5"
    },
    "1839": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5086,
        5151
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1840": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x789"
    },
    "1843": {
      "branch": 56,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1844": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1846": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1847": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1853": {
      "op": "SHL"
    },
    "1854": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1855": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1858": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1860": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1861": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "ADD",
      "path": "5"
    },
    "1862": {
      "op": "MSTORE"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1867": {
      "op": "DUP3"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "MSTORE"
    },
    "1870": {
      "op": "PUSH32",
      "value": "0x416C7265616479206368616C6C656E67656420627920616E6F74686572206164"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1905": {
      "op": "DUP3"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "op": "MSTORE"
    },
    "1908": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1916": {
      "op": "SHL"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "MSTORE"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1924": {
      "op": "ADD"
    },
    "1925": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "1928": {
      "op": "JUMP"
    },
    "1929": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5078,
        5193
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1930": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5229,
        5238
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 14
    },
    "1931": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5229,
        5250
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "1933": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5229,
        5250
      ],
      "op": "ADD",
      "path": "5"
    },
    "1934": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5229,
        5250
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1935": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5211,
        5226
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1936": {
      "branch": 57,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5211,
        5250
      ],
      "op": "LT",
      "path": "5"
    },
    "1937": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7DC"
    },
    "1940": {
      "branch": 57,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1941": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1943": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1950": {
      "op": "SHL"
    },
    "1951": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1952": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1955": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1957": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1958": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "ADD",
      "path": "5"
    },
    "1959": {
      "op": "MSTORE"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1964": {
      "op": "DUP3"
    },
    "1965": {
      "op": "ADD"
    },
    "1966": {
      "op": "MSTORE"
    },
    "1967": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E676520706572696F642066696E697368656400000000000000"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2002": {
      "op": "DUP3"
    },
    "2003": {
      "op": "ADD"
    },
    "2004": {
      "op": "MSTORE"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2007": {
      "op": "ADD"
    },
    "2008": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2011": {
      "op": "JUMP"
    },
    "2012": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5203,
        5280
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2013": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5342,
        5367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2015": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5342,
        5367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2016": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5342,
        5367
      ],
      "op": "ADD",
      "path": "5"
    },
    "2017": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5342,
        5367
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2018": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5339
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2020": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5339
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2021": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5339
      ],
      "op": "ADD",
      "path": "5"
    },
    "2022": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5339
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2023": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5367
      ],
      "op": "GT",
      "path": "5"
    },
    "2024": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5291,
        5314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2026": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5317,
        5367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2027": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x801"
    },
    "2030": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2031": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5441,
        5454
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2033": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5441,
        5454
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2034": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5441,
        5454
      ],
      "op": "ADD",
      "path": "5"
    },
    "2035": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5441,
        5454
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2042": {
      "op": "SHL"
    },
    "2043": {
      "op": "SUB"
    },
    "2044": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5441,
        5454
      ],
      "op": "AND",
      "path": "5"
    },
    "2045": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80D"
    },
    "2048": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2049": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2050": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5418,
        5438
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2051": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5418,
        5438
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5418,
        5438
      ],
      "op": "AND",
      "path": "5"
    },
    "2061": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5397,
        5454
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2062": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5377,
        5454
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2063": {
      "op": "POP"
    },
    "2064": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5472,
        5482
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 15
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "op": "SUB"
    },
    "2073": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5472,
        5495
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2074": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5472,
        5495
      ],
      "op": "AND",
      "path": "5"
    },
    "2075": {
      "branch": 58,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5472,
        5495
      ],
      "op": "EQ",
      "path": "5"
    },
    "2076": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x860"
    },
    "2079": {
      "branch": 58,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2080": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2082": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2089": {
      "op": "SHL"
    },
    "2090": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2091": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2094": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2096": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2097": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "ADD",
      "path": "5"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2103": {
      "op": "DUP3"
    },
    "2104": {
      "op": "ADD"
    },
    "2105": {
      "op": "MSTORE"
    },
    "2106": {
      "op": "PUSH22",
      "value": "0x139BDD08195B1A59DA589B19481D1BC81BDD5D189A59"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "2131": {
      "op": "SHL"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2134": {
      "op": "DUP3"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "op": "MSTORE"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2143": {
      "op": "JUMP"
    },
    "2144": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5464,
        5522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2145": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5533,
        5549
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2147": {
      "branch": 59,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5570
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2148": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x880"
    },
    "2151": {
      "branch": 59,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5676
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2152": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5654,
        5663
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2153": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5654,
        5676
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2155": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5654,
        5676
      ],
      "op": "ADD",
      "path": "5"
    },
    "2156": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5654,
        5676
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2157": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5635
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2158": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2160": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5651
      ],
      "op": "ADD",
      "path": "5"
    },
    "2161": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5651
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2162": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87B"
    },
    "2165": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5676
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2166": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2167": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C7"
    },
    "2170": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5626,
        5676
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2171": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5626,
        5676
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2172": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5676
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x894"
    },
    "2175": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5676
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2176": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5552,
        5676
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2177": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5598,
        5607
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2178": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5598,
        5623
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2180": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5598,
        5623
      ],
      "op": "ADD",
      "path": "5"
    },
    "2181": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5598,
        5623
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2182": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5582
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2183": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5595
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2185": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5595
      ],
      "op": "ADD",
      "path": "5"
    },
    "2186": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5595
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2187": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x894"
    },
    "2190": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2191": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2192": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5623
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12C7"
    },
    "2195": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5573,
        5623
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2196": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5573,
        5623
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2197": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5533,
        5676
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2198": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5533,
        5676
      ],
      "op": "POP",
      "path": "5"
    },
    "2199": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5706,
        5714
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 16
    },
    "2200": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5694,
        5703
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "2201": {
      "branch": 60,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5694,
        5714
      ],
      "op": "GT",
      "path": "5"
    },
    "2202": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E1"
    },
    "2205": {
      "branch": 60,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2206": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2208": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2217": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2220": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2222": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2223": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "ADD",
      "path": "5"
    },
    "2224": {
      "op": "MSTORE"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA08199D5B991CC81C1C9BDD9A591959"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2272": {
      "op": "JUMP"
    },
    "2273": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5686,
        5744
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2274": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5773,
        5786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2276": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5773,
        5786
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2277": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5773,
        5786
      ],
      "op": "ADD",
      "path": "5"
    },
    "2278": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5773,
        5786
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5773,
        5786
      ],
      "op": "AND",
      "path": "5"
    },
    "2288": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5759,
        5769
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2289": {
      "branch": 61,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5759,
        5786
      ],
      "op": "EQ",
      "path": "5"
    },
    "2290": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2291": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x915"
    },
    "2294": {
      "branch": 61,
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2295": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5828,
        5837
      ],
      "op": "CALLVALUE",
      "path": "5",
      "statement": 17
    },
    "2296": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5811
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2297": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5824
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2299": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5824
      ],
      "op": "ADD",
      "path": "5"
    },
    "2300": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5824
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2302": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2303": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2304": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2305": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x90A"
    },
    "2308": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2309": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2310": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "2313": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5802,
        5837
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2314": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2315": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2316": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2317": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5802,
        5837
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2318": {
      "op": "POP"
    },
    "2319": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92F"
    },
    "2322": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2323": {
      "op": "POP"
    },
    "2324": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2325": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2326": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5897,
        5906
      ],
      "op": "CALLVALUE",
      "path": "5",
      "statement": 18
    },
    "2327": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5877
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2328": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2330": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5893
      ],
      "op": "ADD",
      "path": "5"
    },
    "2331": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2333": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2334": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2335": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2336": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x929"
    },
    "2339": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2340": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2341": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "2344": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5868,
        5906
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2345": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2346": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2347": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2348": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5868,
        5906
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5755,
        5917
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2352": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5951,
        6026
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 19,
      "value": "0x94A"
    },
    "2355": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5960,
        5969
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2356": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5960,
        5981
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2358": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5960,
        5981
      ],
      "op": "ADD",
      "path": "5"
    },
    "2359": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5960,
        5981
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2360": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6001,
        6025
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2362": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6001,
        6025
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2363": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        5998
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2364": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        6025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x945"
    },
    "2367": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        6025
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2368": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        6025
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2369": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        6025
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "2372": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5983,
        6025
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2373": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5983,
        6025
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2374": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5951,
        5959
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF21"
    },
    "2377": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        5951,
        6026
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2378": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5951,
        6026
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2379": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        5936
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2380": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        5948
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2382": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        5948
      ],
      "op": "ADD",
      "path": "5"
    },
    "2383": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        6026
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2384": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        6026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2385": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        6026
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2386": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        5927,
        6026
      ],
      "op": "POP",
      "path": "5"
    },
    "2387": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6074,
        6081
      ],
      "op": "DUP7",
      "path": "5",
      "statement": 20
    },
    "2388": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x4626E30DC12B4C7F8133ABB51A00DD8828CA7A90EF06E23DB76298BB6091016A"
    },
    "2421": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6095,
        6105
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2422": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6119,
        6178
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x987"
    },
    "2425": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6128,
        6137
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2426": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6128,
        6153
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2428": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6128,
        6153
      ],
      "op": "ADD",
      "path": "5"
    },
    "2429": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6128,
        6153
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2430": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6155,
        6164
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2431": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6155,
        6177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2433": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6155,
        6177
      ],
      "op": "ADD",
      "path": "5"
    },
    "2434": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6155,
        6177
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2435": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6119,
        6127
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF21"
    },
    "2438": {
      "fn": "RequestManager.counterChallenge",
      "jump": "i",
      "offset": [
        6119,
        6178
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2439": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6119,
        6178
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2440": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2442": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2443": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "op": "SUB"
    },
    "2452": {
      "op": "SWAP1"
    },
    "2453": {
      "op": "SWAP4"
    },
    "2454": {
      "op": "AND"
    },
    "2455": {
      "op": "DUP4"
    },
    "2456": {
      "op": "MSTORE"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2459": {
      "op": "DUP4"
    },
    "2460": {
      "op": "ADD"
    },
    "2461": {
      "op": "SWAP2"
    },
    "2462": {
      "op": "SWAP1"
    },
    "2463": {
      "op": "SWAP2"
    },
    "2464": {
      "op": "MSTORE"
    },
    "2465": {
      "op": "ADD"
    },
    "2466": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2468": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2469": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2470": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2471": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "SUB",
      "path": "5"
    },
    "2472": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2473": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        6042,
        6188
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2474": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4881,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2475": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4881,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2476": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4881,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2477": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4881,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2478": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4881,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2479": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2480": {
      "fn": "RequestManager.counterChallenge",
      "offset": [
        4799,
        6195
      ],
      "op": "POP",
      "path": "5"
    },
    "2481": {
      "fn": "RequestManager.counterChallenge",
      "jump": "o",
      "offset": [
        4799,
        6195
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2482": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2483": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6506,
        6513
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2484": {
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2486": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2128,
        2140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2487": {
      "offset": [
        2117,
        2124
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2488": {
      "offset": [
        2117,
        2140
      ],
      "op": "GT",
      "path": "5"
    },
    "2489": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2117,
        2140
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2490": {
      "offset": [
        2117,
        2155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2491": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2117,
        2155
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2492": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2117,
        2155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C5"
    },
    "2495": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2496": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2117,
        2155
      ],
      "op": "POP",
      "path": "5"
    },
    "2497": {
      "offset": [
        2154,
        2155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2499": {
      "offset": [
        2144,
        2151
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2500": {
      "offset": [
        2144,
        2155
      ],
      "op": "GT",
      "path": "5"
    },
    "2501": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2502": {
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E1"
    },
    "2505": {
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2506": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2508": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "offset": [
        2109,
        2177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2517": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2518": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2520": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "ADD",
      "path": "5"
    },
    "2521": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2524": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2525": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1284"
    },
    "2528": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2529": {
      "fn": "RequestManager.withdraw",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2530": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6525,
        6544
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2532": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2533": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2534": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2535": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6553
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "2537": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2539": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2540": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2541": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2542": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2544": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2545": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2546": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6547,
        6562
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2547": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6607,
        6622
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2548": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6607,
        6622
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2549": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2550": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2551": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6606
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x7"
    },
    "2553": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2554": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2555": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2556": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2557": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2558": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6598,
        6623
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2559": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x1"
    },
    "2561": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2562": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "ADD",
      "path": "5"
    },
    "2563": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2568": {
      "op": "SHL"
    },
    "2569": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2570": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "DIV",
      "path": "5"
    },
    "2571": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2573": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6642,
        6657
      ],
      "op": "AND",
      "path": "5"
    },
    "2574": {
      "branch": 62,
      "fn": "RequestManager.withdraw",
      "offset": [
        6641,
        6657
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2575": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA4E"
    },
    "2578": {
      "branch": 62,
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2579": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2581": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2582": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2588": {
      "op": "SHL"
    },
    "2589": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2590": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2593": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2595": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2596": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "ADD",
      "path": "5"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2602": {
      "op": "DUP3"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "MSTORE"
    },
    "2605": {
      "op": "PUSH17",
      "value": "0x20B63932B0B23C903BB4BA34323930BBB7"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2628": {
      "op": "DUP3"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2637": {
      "op": "JUMP"
    },
    "2638": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6633,
        6679
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2639": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6690,
        6710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2641": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2642": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2643": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2644": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2646": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2648": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2649": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2651": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2652": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6732
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2653": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6744
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2655": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6744
      ],
      "op": "ADD",
      "path": "5"
    },
    "2656": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6744
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2657": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6749
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2658": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6749
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2659": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6713,
        6749
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2660": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6759,
        7039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC0"
    },
    "2663": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6759,
        7039
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2664": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6822,
        6827
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 22
    },
    "2665": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6822,
        6839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2667": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6822,
        6839
      ],
      "op": "ADD",
      "path": "5"
    },
    "2668": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6822,
        6839
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2669": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6803,
        6818
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2670": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6803,
        6839
      ],
      "op": "LT",
      "path": "5"
    },
    "2671": {
      "branch": 63,
      "fn": "RequestManager.withdraw",
      "offset": [
        6803,
        6839
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2672": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xABB"
    },
    "2675": {
      "branch": 63,
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2676": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2678": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2679": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2687": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2690": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2692": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2693": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "ADD",
      "path": "5"
    },
    "2694": {
      "op": "MSTORE"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2699": {
      "op": "DUP3"
    },
    "2700": {
      "op": "ADD"
    },
    "2701": {
      "op": "MSTORE"
    },
    "2702": {
      "op": "PUSH32",
      "value": "0x436C61696D20706572696F64206E6F742066696E697368656400000000000000"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2737": {
      "op": "DUP3"
    },
    "2738": {
      "op": "ADD"
    },
    "2739": {
      "op": "MSTORE"
    },
    "2740": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2742": {
      "op": "ADD"
    },
    "2743": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2746": {
      "op": "JUMP"
    },
    "2747": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6795,
        6869
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2748": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6759,
        7039
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB21"
    },
    "2751": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6759,
        7039
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2752": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6759,
        7039
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2753": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 23,
      "value": "0x0"
    },
    "2755": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2756": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2757": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2758": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6937
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "2760": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2762": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2763": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2765": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2766": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6946
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2767": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6958
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2769": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6958
      ],
      "op": "ADD",
      "path": "5"
    },
    "2770": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6927,
        6958
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2771": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6908,
        6923
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "2772": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6908,
        6958
      ],
      "op": "LT",
      "path": "5"
    },
    "2773": {
      "branch": 64,
      "fn": "RequestManager.withdraw",
      "offset": [
        6908,
        6958
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2774": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB21"
    },
    "2777": {
      "branch": 64,
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2778": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2780": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2787": {
      "op": "SHL"
    },
    "2788": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2789": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2792": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2794": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2795": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "ADD",
      "path": "5"
    },
    "2796": {
      "op": "MSTORE"
    },
    "2797": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2799": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2801": {
      "op": "DUP3"
    },
    "2802": {
      "op": "ADD"
    },
    "2803": {
      "op": "MSTORE"
    },
    "2804": {
      "op": "PUSH32",
      "value": "0x4368616C6C656E676520706572696F64206E6F742066696E6973686564000000"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2839": {
      "op": "DUP3"
    },
    "2840": {
      "op": "ADD"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2844": {
      "op": "ADD"
    },
    "2845": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "2848": {
      "op": "JUMP"
    },
    "2849": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6900,
        6992
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2850": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7049,
        7088
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 24,
      "value": "0xB2C"
    },
    "2853": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7064,
        7071
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2854": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7073,
        7080
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2855": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7082,
        7087
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2856": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7049,
        7063
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3A"
    },
    "2859": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        7049,
        7088
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2860": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7049,
        7088
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2861": {
      "branch": 65,
      "fn": "RequestManager.withdraw",
      "offset": [
        7251,
        7266
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2862": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7247,
        7327
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2863": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7247,
        7327
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB3C"
    },
    "2866": {
      "branch": 65,
      "fn": "RequestManager.withdraw",
      "offset": [
        7247,
        7327
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2867": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7282,
        7316
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 25,
      "value": "0xB3C"
    },
    "2870": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7301,
        7308
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2871": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7310,
        7315
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2872": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7282,
        7300
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x106C"
    },
    "2875": {
      "fn": "RequestManager.withdraw",
      "jump": "i",
      "offset": [
        7282,
        7316
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2876": {
      "fn": "RequestManager.withdraw",
      "offset": [
        7282,
        7316
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2877": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6515,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "2878": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6515,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "2879": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6515,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "2880": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "2881": {
      "fn": "RequestManager.withdraw",
      "offset": [
        6449,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "2882": {
      "fn": "RequestManager.withdraw",
      "jump": "o",
      "offset": [
        6449,
        7333
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2884": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2886": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2893": {
      "op": "SHL"
    },
    "2894": {
      "op": "SUB"
    },
    "2895": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2896": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 26
    },
    "2897": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2898": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9D"
    },
    "2901": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2902": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2904": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2911": {
      "op": "SHL"
    },
    "2912": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2913": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2916": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2918": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2919": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2920": {
      "op": "DUP2"
    },
    "2921": {
      "op": "SWAP1"
    },
    "2922": {
      "op": "MSTORE"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2925": {
      "op": "DUP3"
    },
    "2926": {
      "op": "ADD"
    },
    "2927": {
      "op": "MSTORE"
    },
    "2928": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2963": {
      "op": "DUP3"
    },
    "2964": {
      "op": "ADD"
    },
    "2965": {
      "op": "MSTORE"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2968": {
      "op": "ADD"
    },
    "2969": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "2972": {
      "op": "JUMP"
    },
    "2973": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2974": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xBA7"
    },
    "2977": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2979": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116D"
    },
    "2982": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2983": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2984": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2985": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2986": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4180,
        4187
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2987": {
      "offset": [
        2128,
        2140
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "2989": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2128,
        2140
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2990": {
      "offset": [
        2117,
        2124
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2991": {
      "offset": [
        2117,
        2140
      ],
      "op": "GT",
      "path": "5"
    },
    "2992": {
      "branch": 66,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2117,
        2140
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2993": {
      "offset": [
        2117,
        2155
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2994": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2117,
        2155
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2995": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2117,
        2155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBBC"
    },
    "2998": {
      "branch": 66,
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2999": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2117,
        2155
      ],
      "op": "POP",
      "path": "5"
    },
    "3000": {
      "offset": [
        2154,
        2155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3002": {
      "offset": [
        2144,
        2151
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3003": {
      "offset": [
        2144,
        2155
      ],
      "op": "GT",
      "path": "5"
    },
    "3004": {
      "offset": [
        2117,
        2155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3005": {
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD8"
    },
    "3008": {
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3009": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3011": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "offset": [
        2109,
        2177
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3020": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3021": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3023": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "ADD",
      "path": "5"
    },
    "3024": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "3027": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3028": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1284"
    },
    "3031": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3032": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        2109,
        2177
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3033": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4206,
        4233
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3035": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3036": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3037": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3038": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4246
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "3040": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3042": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3043": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3045": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3046": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4236,
        4255
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3047": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4274,
        4294
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 28
    },
    "3048": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4274,
        4294
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3055": {
      "op": "SHL"
    },
    "3056": {
      "op": "SUB"
    },
    "3057": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4274,
        4294
      ],
      "op": "AND",
      "path": "5"
    },
    "3058": {
      "branch": 67,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4274,
        4308
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3059": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC33"
    },
    "3062": {
      "branch": 67,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3063": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3065": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3072": {
      "op": "SHL"
    },
    "3073": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3074": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3077": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3079": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3080": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "ADD",
      "path": "5"
    },
    "3081": {
      "op": "MSTORE"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3086": {
      "op": "DUP3"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "MSTORE"
    },
    "3089": {
      "op": "PUSH18",
      "value": "0x105B1C9958591E4818DA185B1B195B99D959"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "3110": {
      "op": "SHL"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3113": {
      "op": "DUP3"
    },
    "3114": {
      "op": "ADD"
    },
    "3115": {
      "op": "MSTORE"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "3122": {
      "op": "JUMP"
    },
    "3123": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4266,
        4331
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3124": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x0"
    },
    "3126": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3127": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3128": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3129": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4373
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3131": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3133": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3134": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3136": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3137": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4382
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3138": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4394
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3140": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4394
      ],
      "op": "ADD",
      "path": "5"
    },
    "3141": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4367,
        4394
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3142": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4349,
        4364
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3143": {
      "branch": 68,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4349,
        4394
      ],
      "op": "LT",
      "path": "5"
    },
    "3144": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC93"
    },
    "3147": {
      "branch": 68,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3148": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3150": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3157": {
      "op": "SHL"
    },
    "3158": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3159": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3162": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3164": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3165": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "ADD",
      "path": "5"
    },
    "3166": {
      "op": "MSTORE"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3171": {
      "op": "DUP3"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "MSTORE"
    },
    "3174": {
      "op": "PUSH32",
      "value": "0x416C726561647920636C61696D6564207375636365737366756C6C7900000000"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3209": {
      "op": "DUP3"
    },
    "3210": {
      "op": "ADD"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3214": {
      "op": "ADD"
    },
    "3215": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "3218": {
      "op": "JUMP"
    },
    "3219": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4341,
        4427
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3220": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4457,
        4467
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 30,
      "value": "0x1"
    },
    "3222": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4457,
        4467
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3223": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4445,
        4454
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3224": {
      "branch": 69,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4445,
        4467
      ],
      "op": "GT",
      "path": "5"
    },
    "3225": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE0"
    },
    "3228": {
      "branch": 69,
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3229": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3231": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3232": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3238": {
      "op": "SHL"
    },
    "3239": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3240": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3243": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3245": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3246": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "ADD",
      "path": "5"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3252": {
      "op": "DUP3"
    },
    "3253": {
      "op": "ADD"
    },
    "3254": {
      "op": "MSTORE"
    },
    "3255": {
      "op": "PUSH25",
      "value": "0x139BDD08195B9BDD59DA08199D5B991CC81C1C9BDD9A591959"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3286": {
      "op": "DUP3"
    },
    "3287": {
      "op": "ADD"
    },
    "3288": {
      "op": "MSTORE"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3291": {
      "op": "ADD"
    },
    "3292": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "3295": {
      "op": "JUMP"
    },
    "3296": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4437,
        4497
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3297": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 31
    },
    "3298": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3305": {
      "op": "SHL"
    },
    "3306": {
      "op": "SUB"
    },
    "3307": {
      "op": "NOT"
    },
    "3308": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "AND",
      "path": "5"
    },
    "3309": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4531,
        4541
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3310": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "OR",
      "path": "5"
    },
    "3311": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3312": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3313": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4579,
        4588
      ],
      "op": "CALLVALUE",
      "path": "5",
      "statement": 32
    },
    "3314": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4508,
        4541
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3316": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4576
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3317": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4576
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3318": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4576
      ],
      "op": "ADD",
      "path": "5"
    },
    "3319": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4588
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3320": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4588
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3321": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4588
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3322": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4551,
        4588
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3323": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4623,
        4633
      ],
      "op": "SLOAD",
      "path": "5",
      "statement": 33
    },
    "3324": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4598,
        4620
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3326": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4598,
        4620
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3327": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4598,
        4620
      ],
      "op": "ADD",
      "path": "5"
    },
    "3328": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4598,
        4633
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3329": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4685,
        4700
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x3"
    },
    "3331": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4685,
        4700
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3332": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4667,
        4700
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0D"
    },
    "3335": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4667,
        4700
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3336": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4667,
        4682
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3337": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4667,
        4700
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "3340": {
      "fn": "RequestManager.challengeClaim",
      "jump": "i",
      "offset": [
        4667,
        4700
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3341": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4667,
        4700
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3342": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4643,
        4664
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "3344": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4643,
        4664
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3345": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4643,
        4664
      ],
      "op": "ADD",
      "path": "5"
    },
    "3346": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4643,
        4700
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3347": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x40"
    },
    "3349": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3350": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4766,
        4776
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3351": {
      "op": "DUP2"
    },
    "3352": {
      "op": "MSTORE"
    },
    "3353": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4745,
        4752
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3354": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4745,
        4752
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3355": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x829B4D84D4743D197A9B0FAD05ABEF9F517535E06D50E0B85B1E77089B8AFA9D"
    },
    "3388": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3394": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3395": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3396": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3397": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "SUB",
      "path": "5"
    },
    "3398": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3399": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4716,
        4786
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3400": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4196,
        4793
      ],
      "op": "POP",
      "path": "5"
    },
    "3401": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "POP",
      "path": "5"
    },
    "3402": {
      "fn": "RequestManager.challengeClaim",
      "offset": [
        4117,
        4793
      ],
      "op": "POP",
      "path": "5"
    },
    "3403": {
      "fn": "RequestManager.challengeClaim",
      "jump": "o",
      "offset": [
        4117,
        4793
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3404": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3405": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3540,
        3547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3407": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3580,
        3590
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 36,
      "value": "0x1"
    },
    "3409": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3580,
        3590
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3410": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3567,
        3576
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3411": {
      "branch": 70,
      "fn": "RequestManager.claimRequest",
      "offset": [
        3567,
        3590
      ],
      "op": "EQ",
      "path": "5"
    },
    "3412": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD9F"
    },
    "3415": {
      "branch": 70,
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3416": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3418": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3427": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3430": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3432": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3433": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "ADD",
      "path": "5"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3439": {
      "op": "DUP3"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "MSTORE"
    },
    "3442": {
      "op": "PUSH32",
      "value": "0x5374616B652070726F7669646564206E6F7420636F7272656374000000000000"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3477": {
      "op": "DUP3"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3482": {
      "op": "ADD"
    },
    "3483": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "3486": {
      "op": "JUMP"
    },
    "3487": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3559,
        3621
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3488": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3648,
        3649
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x1"
    },
    "3490": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "3492": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3494": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3495": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3496": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3497": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB2"
    },
    "3500": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3501": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3502": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "3505": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        3632,
        3649
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3506": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3507": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3508": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3509": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3632,
        3649
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3510": {
      "op": "POP"
    },
    "3511": {
      "op": "POP"
    },
    "3512": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3680,
        3692
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x6"
    },
    "3514": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3680,
        3692
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3515": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3659,
        3677
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3517": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3518": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3519": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3520": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3734
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x8"
    },
    "3522": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3524": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3525": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3527": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3528": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3728,
        3748
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3529": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 38
    },
    "3530": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3758,
        3788
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3531": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3758,
        3788
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3532": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3798,
        3814
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 39,
      "value": "0x1"
    },
    "3534": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3798,
        3814
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3535": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3798,
        3814
      ],
      "op": "ADD",
      "path": "5"
    },
    "3536": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3798,
        3827
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3537": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3798,
        3827
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "3544": {
      "op": "SHL"
    },
    "3545": {
      "op": "SUB"
    },
    "3546": {
      "op": "NOT"
    },
    "3547": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3837,
        3863
      ],
      "op": "AND",
      "path": "5",
      "statement": 40
    },
    "3548": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3817,
        3827
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3553": {
      "op": "SHL"
    },
    "3554": {
      "op": "NOT"
    },
    "3555": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3837,
        3863
      ],
      "op": "AND",
      "path": "5"
    },
    "3556": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3837,
        3863
      ],
      "op": "OR",
      "path": "5"
    },
    "3557": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3837,
        3863
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3558": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3837,
        3863
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3559": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3914,
        3925
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 41,
      "value": "0x2"
    },
    "3561": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3914,
        3925
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3562": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3896,
        3925
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDF3"
    },
    "3565": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3896,
        3925
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3566": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3896,
        3911
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3567": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3896,
        3925
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "3570": {
      "fn": "RequestManager.claimRequest",
      "jump": "i",
      "offset": [
        3896,
        3925
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3571": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3896,
        3925
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3572": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3574": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3893
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3575": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3893
      ],
      "op": "ADD",
      "path": "5"
    },
    "3576": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3925
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3577": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3925
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3578": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3873,
        3925
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3579": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x1"
    },
    "3581": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3582": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "ADD",
      "path": "5"
    },
    "3583": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3584": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3586": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3587": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3588": {
      "op": "DUP8"
    },
    "3589": {
      "op": "DUP2"
    },
    "3590": {
      "op": "MSTORE"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3597": {
      "op": "SHL"
    },
    "3598": {
      "op": "SUB"
    },
    "3599": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3600": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3601": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4014,
        4030
      ],
      "op": "AND",
      "path": "5"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3604": {
      "op": "DUP4"
    },
    "3605": {
      "op": "ADD"
    },
    "3606": {
      "op": "MSTORE"
    },
    "3607": {
      "op": "DUP2"
    },
    "3608": {
      "op": "ADD"
    },
    "3609": {
      "op": "SWAP2"
    },
    "3610": {
      "op": "SWAP1"
    },
    "3611": {
      "op": "SWAP2"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3967,
        3977
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3614": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3967,
        3977
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3615": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xD970DABCC5F2873D6EB169E62FDF8A4691BE874148AB73513C8C939E44663099"
    },
    "3648": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3654": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3655": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3656": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3657": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "SUB",
      "path": "5"
    },
    "3658": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3659": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3941,
        4074
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3660": {
      "op": "POP"
    },
    "3661": {
      "op": "POP"
    },
    "3662": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4092,
        4104
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 43,
      "value": "0x6"
    },
    "3664": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4092,
        4104
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3665": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        4092,
        4104
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3666": {
      "fn": "RequestManager.claimRequest",
      "offset": [
        3473,
        4111
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3667": {
      "op": "POP"
    },
    "3668": {
      "op": "POP"
    },
    "3669": {
      "fn": "RequestManager.claimRequest",
      "jump": "o",
      "offset": [
        3473,
        4111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3671": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3673": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3680": {
      "op": "SHL"
    },
    "3681": {
      "op": "SUB"
    },
    "3682": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3683": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3684": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3685": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB0"
    },
    "3688": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3689": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3691": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3698": {
      "op": "SHL"
    },
    "3699": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3700": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3703": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3705": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3706": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3707": {
      "op": "DUP2"
    },
    "3708": {
      "op": "SWAP1"
    },
    "3709": {
      "op": "MSTORE"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3712": {
      "op": "DUP3"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "MSTORE"
    },
    "3715": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3750": {
      "op": "DUP3"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "op": "MSTORE"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3755": {
      "op": "ADD"
    },
    "3756": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "3759": {
      "op": "JUMP"
    },
    "3760": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3767": {
      "op": "SHL"
    },
    "3768": {
      "op": "SUB"
    },
    "3769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 44
    },
    "3770": {
      "branch": 74,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "3771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF15"
    },
    "3774": {
      "branch": 74,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3784": {
      "op": "SHL"
    },
    "3785": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3793": {
      "op": "MSTORE"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3798": {
      "op": "DUP3"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3836": {
      "op": "DUP3"
    },
    "3837": {
      "op": "ADD"
    },
    "3838": {
      "op": "MSTORE"
    },
    "3839": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3848": {
      "op": "SHL"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B5"
    },
    "3860": {
      "op": "JUMP"
    },
    "3861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0xF1E"
    },
    "3865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116D"
    },
    "3869": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "3872": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3873": {
      "fn": "Math.max",
      "offset": [
        215,
        320
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3874": {
      "fn": "Math.max",
      "offset": [
        273,
        280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3876": {
      "fn": "Math.max",
      "offset": [
        304,
        305
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 46
    },
    "3877": {
      "fn": "Math.max",
      "offset": [
        299,
        300
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3878": {
      "fn": "Math.max",
      "offset": [
        299,
        305
      ],
      "op": "LT",
      "path": "3"
    },
    "3879": {
      "branch": 73,
      "fn": "Math.max",
      "offset": [
        299,
        305
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3880": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF31"
    },
    "3883": {
      "branch": 73,
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3884": {
      "fn": "Math.max",
      "offset": [
        312,
        313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3885": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF33"
    },
    "3888": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3889": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3890": {
      "fn": "Math.max",
      "offset": [
        308,
        309
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3891": {
      "fn": "Math.max",
      "offset": [
        299,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3892": {
      "fn": "Math.max",
      "offset": [
        292,
        313
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3893": {
      "fn": "Math.max",
      "offset": [
        215,
        320
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3894": {
      "op": "POP"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        215,
        320
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3898": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7339,
        7733
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3899": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7462,
        7466
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 47,
      "value": "0x1"
    },
    "3901": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7459
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3902": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7459
      ],
      "op": "ADD",
      "path": "5"
    },
    "3903": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3904": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "op": "NOT"
    },
    "3916": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3917": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "AND",
      "path": "5"
    },
    "3918": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "OR",
      "path": "5"
    },
    "3919": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3920": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3921": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7444,
        7466
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3922": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7531,
        7546
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 48
    },
    "3923": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7531,
        7546
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3924": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3926": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3927": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3928": {
      "op": "SWAP2"
    },
    "3929": {
      "op": "DUP3"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7560,
        7573
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3940": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7560,
        7573
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3941": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7560,
        7573
      ],
      "op": "AND",
      "path": "5"
    },
    "3942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3944": {
      "op": "DUP3"
    },
    "3945": {
      "op": "ADD"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7510,
        7517
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3948": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7510,
        7517
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3949": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xC494C0D9B07FAE9D937A92117991D3017AD9408A7D344CAA86C184C47F7BD183"
    },
    "3982": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3983": {
      "op": "ADD"
    },
    "3984": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3986": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3987": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3988": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3989": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "SUB",
      "path": "5"
    },
    "3990": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3991": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7482,
        7583
      ],
      "op": "LOG2",
      "path": "5"
    },
    "3992": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3993": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3994": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3996": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 49
    },
    "3997": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "ADD",
      "path": "5"
    },
    "3998": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3999": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7691,
        7705
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4001": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7691,
        7705
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4002": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7691,
        7705
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4003": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7691,
        7705
      ],
      "op": "ADD",
      "path": "5"
    },
    "4004": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7691,
        7705
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4005": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4007": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4008": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4015": {
      "op": "SHL"
    },
    "4016": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4017": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4024": {
      "op": "SHL"
    },
    "4025": {
      "op": "SUB"
    },
    "4026": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4027": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4028": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7676,
        7689
      ],
      "op": "AND",
      "path": "5"
    },
    "4029": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4030": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4031": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ADD",
      "path": "5"
    },
    "4032": {
      "op": "SWAP3"
    },
    "4033": {
      "op": "SWAP1"
    },
    "4034": {
      "op": "SWAP3"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "op": "MSTORE"
    },
    "4041": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4042": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "AND",
      "path": "5"
    },
    "4043": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4044": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4045": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7616,
        7642
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4046": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7675
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "4051": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7675
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4054": {
      "op": "ADD"
    },
    "4055": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4057": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4059": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4060": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4061": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4062": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "SUB",
      "path": "5"
    },
    "4063": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4064": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4066": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4067": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4068": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "4069": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4070": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4071": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4072": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF0"
    },
    "4075": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4076": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4078": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4079": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4080": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4081": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4082": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "GAS",
      "path": "5"
    },
    "4083": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "CALL",
      "path": "5"
    },
    "4084": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4085": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4086": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4087": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1004"
    },
    "4090": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4091": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4092": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4094": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4095": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "4096": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4097": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4099": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4100": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4101": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4102": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4103": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4104": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4105": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4107": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4108": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4109": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4111": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "NOT",
      "path": "5"
    },
    "4112": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4114": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4115": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ADD",
      "path": "5"
    },
    "4116": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "AND",
      "path": "5"
    },
    "4117": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4118": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ADD",
      "path": "5"
    },
    "4119": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4120": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4122": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4123": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "POP",
      "path": "5"
    },
    "4124": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4125": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "ADD",
      "path": "5"
    },
    "4126": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4127": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1028"
    },
    "4130": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4131": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4132": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F4"
    },
    "4135": {
      "fn": "RequestManager.withdraw_claim",
      "jump": "i",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4136": {
      "branch": 71,
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7661,
        7706
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4137": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1066"
    },
    "4140": {
      "branch": 71,
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4141": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4143": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4150": {
      "op": "SHL"
    },
    "4151": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4152": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4155": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4157": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4158": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "ADD",
      "path": "5"
    },
    "4159": {
      "op": "MSTORE"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4164": {
      "op": "DUP3"
    },
    "4165": {
      "op": "ADD"
    },
    "4166": {
      "op": "MSTORE"
    },
    "4167": {
      "op": "PUSH15",
      "value": "0x151C985B9CD9995C8819985A5B1959"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4185": {
      "op": "SHL"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4188": {
      "op": "DUP3"
    },
    "4189": {
      "op": "ADD"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "4197": {
      "op": "JUMP"
    },
    "4198": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7653,
        7726
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4199": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7434,
        7733
      ],
      "op": "POP",
      "path": "5"
    },
    "4200": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7339,
        7733
      ],
      "op": "POP",
      "path": "5"
    },
    "4201": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7339,
        7733
      ],
      "op": "POP",
      "path": "5"
    },
    "4202": {
      "fn": "RequestManager.withdraw_claim",
      "offset": [
        7339,
        7733
      ],
      "op": "POP",
      "path": "5"
    },
    "4203": {
      "fn": "RequestManager.withdraw_claim",
      "jump": "o",
      "offset": [
        7339,
        7733
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4204": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7739,
        8334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4205": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7823,
        7850
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4207": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4208": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4209": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4210": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7863
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x9"
    },
    "4212": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4214": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4215": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4217": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4218": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "4219": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7934,
        7959
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4221": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7934,
        7959
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4222": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7934,
        7959
      ],
      "op": "ADD",
      "path": "5"
    },
    "4223": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7934,
        7959
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4224": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7931
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4226": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7931
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4227": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7931
      ],
      "op": "ADD",
      "path": "5"
    },
    "4228": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7931
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4229": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4230": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7853,
        7872
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4231": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7959
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4232": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7959
      ],
      "op": "GT",
      "path": "5"
    },
    "4233": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7959
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4234": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7909,
        7959
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4235": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A1"
    },
    "4238": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4239": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8039,
        8052
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4241": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8039,
        8052
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4242": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8039,
        8052
      ],
      "op": "ADD",
      "path": "5"
    },
    "4243": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8039,
        8052
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4250": {
      "op": "SHL"
    },
    "4251": {
      "op": "SUB"
    },
    "4252": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8039,
        8052
      ],
      "op": "AND",
      "path": "5"
    },
    "4253": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10AD"
    },
    "4256": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4257": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4258": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8016,
        8036
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4259": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8016,
        8036
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4266": {
      "op": "SHL"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8016,
        8036
      ],
      "op": "AND",
      "path": "5"
    },
    "4269": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7995,
        8052
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4270": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7969,
        8052
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4271": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7969,
        8052
      ],
      "op": "POP",
      "path": "5"
    },
    "4272": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8062,
        8084
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4274": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8112,
        8121
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4275": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8112,
        8137
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "4277": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8112,
        8137
      ],
      "op": "ADD",
      "path": "5"
    },
    "4278": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8112,
        8137
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4279": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8096
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4280": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "4282": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8109
      ],
      "op": "ADD",
      "path": "5"
    },
    "4283": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8109
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4284": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8137
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10C5"
    },
    "4287": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8137
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4288": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8137
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4289": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8137
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12AF"
    },
    "4292": {
      "fn": "RequestManager.withdraw_challenge",
      "jump": "i",
      "offset": [
        8087,
        8137
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4293": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8087,
        8137
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4294": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8062,
        8137
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4295": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8062,
        8137
      ],
      "op": "POP",
      "path": "5"
    },
    "4296": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8149,
        8158
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4298": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8160,
        8177
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4299": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8196
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4306": {
      "op": "SHL"
    },
    "4307": {
      "op": "SUB"
    },
    "4308": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8201
      ],
      "op": "AND",
      "path": "5"
    },
    "4309": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8209,
        8223
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4310": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4312": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4313": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4315": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4317": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4318": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4319": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4320": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "SUB",
      "path": "5"
    },
    "4321": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4322": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4323": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP8",
      "path": "5"
    },
    "4324": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "GAS",
      "path": "5"
    },
    "4325": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "CALL",
      "path": "5"
    },
    "4326": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "4327": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4328": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4329": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4330": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4331": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4332": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4334": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4335": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "EQ",
      "path": "5"
    },
    "4336": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1115"
    },
    "4339": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4340": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4342": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4343": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4344": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4345": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "4347": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "NOT",
      "path": "5"
    },
    "4348": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3F"
    },
    "4350": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4351": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "ADD",
      "path": "5"
    },
    "4352": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "AND",
      "path": "5"
    },
    "4353": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4354": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "ADD",
      "path": "5"
    },
    "4355": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4357": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4358": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4359": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4360": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4361": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4362": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4364": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "4366": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4367": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "ADD",
      "path": "5"
    },
    "4368": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "4369": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x111A"
    },
    "4372": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4373": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4374": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "4376": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4377": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4378": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4379": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8181,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4380": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8148,
        8228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4381": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8148,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4382": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8148,
        8228
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4383": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8148,
        8228
      ],
      "op": "POP",
      "path": "5"
    },
    "4384": {
      "branch": 72,
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8246,
        8250
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 50
    },
    "4385": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1163"
    },
    "4388": {
      "branch": 72,
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4389": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4391": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4392": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4398": {
      "op": "SHL"
    },
    "4399": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4400": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4403": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4405": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4406": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "ADD",
      "path": "5"
    },
    "4407": {
      "op": "MSTORE"
    },
    "4408": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4412": {
      "op": "DUP3"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "MSTORE"
    },
    "4415": {
      "op": "PUSH20",
      "value": "0x2330B4B632B2103A379039B2B7321022BA3432B9"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4441": {
      "op": "DUP3"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "MSTORE"
    },
    "4444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4446": {
      "op": "ADD"
    },
    "4447": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B5"
    },
    "4450": {
      "op": "JUMP"
    },
    "4451": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        8238,
        8275
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4452": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4453": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4454": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4455": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4456": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4457": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7813,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4458": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7739,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4459": {
      "fn": "RequestManager.withdraw_challenge",
      "offset": [
        7739,
        8334
      ],
      "op": "POP",
      "path": "5"
    },
    "4460": {
      "fn": "RequestManager.withdraw_challenge",
      "jump": "o",
      "offset": [
        7739,
        8334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4461": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4462": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4464": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4465": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4472": {
      "op": "SHL"
    },
    "4473": {
      "op": "SUB"
    },
    "4474": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 51
    },
    "4475": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4476": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "op": "SUB"
    },
    "4485": {
      "op": "NOT"
    },
    "4486": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4487": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "4488": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4489": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "4490": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4491": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4492": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x40"
    },
    "4494": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4495": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4496": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4497": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4498": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "4499": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4500": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4501": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4502": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4535": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4536": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4537": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4538": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4539": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4540": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4541": {
      "op": "JUMPDEST"
    },
    "4542": {
      "op": "DUP1"
    },
    "4543": {
      "op": "CALLDATALOAD"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4550": {
      "op": "SHL"
    },
    "4551": {
      "op": "SUB"
    },
    "4552": {
      "op": "DUP2"
    },
    "4553": {
      "op": "AND"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "EQ"
    },
    "4556": {
      "op": "PUSH2",
      "value": "0x11D4"
    },
    "4559": {
      "op": "JUMPI"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4562": {
      "op": "DUP1"
    },
    "4563": {
      "op": "REVERT"
    },
    "4564": {
      "op": "JUMPDEST"
    },
    "4565": {
      "op": "SWAP2"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "jump": "o",
      "op": "JUMP"
    },
    "4569": {
      "op": "JUMPDEST"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4574": {
      "op": "DUP3"
    },
    "4575": {
      "op": "DUP5"
    },
    "4576": {
      "op": "SUB"
    },
    "4577": {
      "op": "SLT"
    },
    "4578": {
      "op": "ISZERO"
    },
    "4579": {
      "op": "PUSH2",
      "value": "0x11EB"
    },
    "4582": {
      "op": "JUMPI"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4585": {
      "op": "DUP1"
    },
    "4586": {
      "op": "REVERT"
    },
    "4587": {
      "op": "JUMPDEST"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "4591": {
      "op": "DUP3"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4595": {
      "jump": "i",
      "op": "JUMP"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4601": {
      "op": "DUP3"
    },
    "4602": {
      "op": "DUP5"
    },
    "4603": {
      "op": "SUB"
    },
    "4604": {
      "op": "SLT"
    },
    "4605": {
      "op": "ISZERO"
    },
    "4606": {
      "op": "PUSH2",
      "value": "0x1206"
    },
    "4609": {
      "op": "JUMPI"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4612": {
      "op": "DUP1"
    },
    "4613": {
      "op": "REVERT"
    },
    "4614": {
      "op": "JUMPDEST"
    },
    "4615": {
      "op": "DUP2"
    },
    "4616": {
      "op": "MLOAD"
    },
    "4617": {
      "op": "DUP1"
    },
    "4618": {
      "op": "ISZERO"
    },
    "4619": {
      "op": "ISZERO"
    },
    "4620": {
      "op": "DUP2"
    },
    "4621": {
      "op": "EQ"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0xF33"
    },
    "4625": {
      "op": "JUMPI"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4628": {
      "op": "DUP1"
    },
    "4629": {
      "op": "REVERT"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4635": {
      "op": "DUP3"
    },
    "4636": {
      "op": "DUP5"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "op": "SLT"
    },
    "4639": {
      "op": "ISZERO"
    },
    "4640": {
      "op": "PUSH2",
      "value": "0x1228"
    },
    "4643": {
      "op": "JUMPI"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4646": {
      "op": "DUP1"
    },
    "4647": {
      "op": "REVERT"
    },
    "4648": {
      "op": "JUMPDEST"
    },
    "4649": {
      "op": "POP"
    },
    "4650": {
      "op": "CALLDATALOAD"
    },
    "4651": {
      "op": "SWAP2"
    },
    "4652": {
      "op": "SWAP1"
    },
    "4653": {
      "op": "POP"
    },
    "4654": {
      "jump": "o",
      "op": "JUMP"
    },
    "4655": {
      "op": "JUMPDEST"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4658": {
      "op": "DUP1"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "DUP1"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4666": {
      "op": "DUP7"
    },
    "4667": {
      "op": "DUP9"
    },
    "4668": {
      "op": "SUB"
    },
    "4669": {
      "op": "SLT"
    },
    "4670": {
      "op": "ISZERO"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0x1247"
    },
    "4674": {
      "op": "JUMPI"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4677": {
      "op": "DUP1"
    },
    "4678": {
      "op": "REVERT"
    },
    "4679": {
      "op": "JUMPDEST"
    },
    "4680": {
      "op": "DUP6"
    },
    "4681": {
      "op": "CALLDATALOAD"
    },
    "4682": {
      "op": "SWAP5"
    },
    "4683": {
      "op": "POP"
    },
    "4684": {
      "op": "PUSH2",
      "value": "0x1257"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4689": {
      "op": "DUP8"
    },
    "4690": {
      "op": "ADD"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4694": {
      "jump": "i",
      "op": "JUMP"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "SWAP4"
    },
    "4697": {
      "op": "POP"
    },
    "4698": {
      "op": "PUSH2",
      "value": "0x1265"
    },
    "4701": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4703": {
      "op": "DUP8"
    },
    "4704": {
      "op": "ADD"
    },
    "4705": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4708": {
      "jump": "i",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "SWAP3"
    },
    "4711": {
      "op": "POP"
    },
    "4712": {
      "op": "PUSH2",
      "value": "0x1273"
    },
    "4715": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4717": {
      "op": "DUP8"
    },
    "4718": {
      "op": "ADD"
    },
    "4719": {
      "op": "PUSH2",
      "value": "0x11BD"
    },
    "4722": {
      "jump": "i",
      "op": "JUMP"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "SWAP5"
    },
    "4725": {
      "op": "SWAP8"
    },
    "4726": {
      "op": "SWAP4"
    },
    "4727": {
      "op": "SWAP7"
    },
    "4728": {
      "op": "POP"
    },
    "4729": {
      "op": "SWAP2"
    },
    "4730": {
      "op": "SWAP5"
    },
    "4731": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4733": {
      "op": "ADD"
    },
    "4734": {
      "op": "CALLDATALOAD"
    },
    "4735": {
      "op": "SWAP3"
    },
    "4736": {
      "op": "SWAP2"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "jump": "o",
      "op": "JUMP"
    },
    "4740": {
      "op": "JUMPDEST"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4743": {
      "op": "DUP1"
    },
    "4744": {
      "op": "DUP3"
    },
    "4745": {
      "op": "MSTORE"
    },
    "4746": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4748": {
      "op": "SWAP1"
    },
    "4749": {
      "op": "DUP3"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "op": "MSTORE"
    },
    "4752": {
      "op": "PUSH17",
      "value": "0x18DB185A5B5259081B9BDD081D985B1A59"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4772": {
      "op": "SHL"
    },
    "4773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4775": {
      "op": "DUP3"
    },
    "4776": {
      "op": "ADD"
    },
    "4777": {
      "op": "MSTORE"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4780": {
      "op": "ADD"
    },
    "4781": {
      "op": "SWAP1"
    },
    "4782": {
      "jump": "o",
      "op": "JUMP"
    },
    "4783": {
      "op": "JUMPDEST"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "NOT"
    },
    "4788": {
      "op": "DUP3"
    },
    "4789": {
      "op": "GT"
    },
    "4790": {
      "op": "ISZERO"
    },
    "4791": {
      "op": "PUSH2",
      "value": "0x12C2"
    },
    "4794": {
      "op": "JUMPI"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x12C2"
    },
    "4798": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4801": {
      "jump": "i",
      "op": "JUMP"
    },
    "4802": {
      "op": "JUMPDEST"
    },
    "4803": {
      "op": "POP"
    },
    "4804": {
      "op": "ADD"
    },
    "4805": {
      "op": "SWAP1"
    },
    "4806": {
      "jump": "o",
      "op": "JUMP"
    },
    "4807": {
      "op": "JUMPDEST"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4810": {
      "op": "DUP3"
    },
    "4811": {
      "op": "DUP3"
    },
    "4812": {
      "op": "LT"
    },
    "4813": {
      "op": "ISZERO"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4817": {
      "op": "JUMPI"
    },
    "4818": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4824": {
      "jump": "i",
      "op": "JUMP"
    },
    "4825": {
      "op": "JUMPDEST"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "SUB"
    },
    "4828": {
      "op": "SWAP1"
    },
    "4829": {
      "jump": "o",
      "op": "JUMP"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4838": {
      "op": "SHL"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4841": {
      "op": "MSTORE"
    },
    "4842": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4846": {
      "op": "MSTORE"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4851": {
      "op": "REVERT"
    }
  },
  "sha1": "1681ddd49f7e779d248be688e1f0977c32b82fae",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/token/ERC20/IERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/access/Ownable.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/SafeMath.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@4.3.2/contracts/utils/math/Math.sol\";\n\ncontract RequestManager is Ownable {\n    using SafeMath for uint256;\n    using Math for uint256;\n\n    // Structs\n    struct Request {\n        address sourceTokenAddress;\n        uint256 targetChainId;\n        address targetTokenAddress;\n        address targetAddress;\n        uint256 amount;\n    }\n\n    struct Claim {\n        uint256 requestId;\n        address claimer;\n        bool withdrawn;\n        uint256 termination;\n    }\n\n    struct Challenge {\n        address challenger;\n        uint256 challengerStake;\n        uint256 claimerStake;\n        uint256 termination;\n    }\n\n    // Events\n    event RequestCreated(\n        uint256 indexed requestId,\n        uint256 indexed targetChainId,\n        address indexed targetTokenAddress,\n        uint256 amount\n    );\n\n    event ClaimCreated(\n        uint256 indexed claimId,\n        uint256 requestId,\n        address claimer,\n        uint256 termination\n    );\n\n    event ClaimWithdrawn(\n        uint256 indexed claimId,\n        uint256 requestId,\n        address claimer\n    );\n\n    event ClaimChallenged(\n        uint256 indexed claimId,\n        address challenger\n    );\n\n    event ChallengeCountered(\n        uint256 indexed claimId,\n        address leader,\n        uint256 highestBid\n    );\n\n    // Constants\n    uint256 public claimStake;\n    uint256 public claimPeriod;\n    uint256 public challengePeriod;\n    uint256 public challengePeriodExtension;\n\n    // Variables\n    uint256 public requestCounter;\n    uint256 public claimCounter;\n    mapping (uint256 => Request) public requests;\n    mapping (uint256 => Claim) public claims;\n    mapping (uint256 => Challenge) public challenges;\n\n    // Modifiers\n    modifier validClaimId(uint256 claimId) {\n        require(claimId <= claimCounter && claimId > 0, \"claimId not valid\");\n        _;\n    }\n\n    constructor(\n        uint256 _claimStake,\n        uint256 _claimPeriod,\n        uint256 _challengePeriod,\n        uint256 _challengePeriodExtension\n    ) {\n        claimStake = _claimStake;\n        claimPeriod = _claimPeriod;\n        challengePeriod = _challengePeriod;\n        challengePeriodExtension = _challengePeriodExtension;\n    }\n\n    function request(\n        uint256 targetChainId,\n        address sourceTokenAddress,\n        address targetTokenAddress,\n        address targetAddress,\n        uint256 amount\n    )\n    external returns (uint256)\n    {\n        requestCounter += 1;\n        uint256 requestId = requestCounter;\n\n        Request storage newRequest = requests[requestId];\n        newRequest.sourceTokenAddress = sourceTokenAddress;\n        newRequest.targetChainId = targetChainId;\n        newRequest.targetTokenAddress = targetTokenAddress;\n        newRequest.targetAddress = targetAddress;\n        newRequest.amount = amount;\n\n        emit RequestCreated(\n            requestId,\n            targetChainId,\n            targetTokenAddress,\n            amount\n        );\n\n        IERC20 token = IERC20(sourceTokenAddress);\n        require(token.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n\n        return requestId;\n    }\n\n    function claimRequest(uint256 requestId) external payable returns (uint256) {\n        require(msg.value == claimStake, \"Stake provided not correct\");\n\n        claimCounter += 1;\n        uint256 newClaimId = claimCounter;\n\n        Claim storage newClaim = claims[claimCounter];\n        newClaim.requestId = requestId;\n        newClaim.claimer = msg.sender;\n        newClaim.withdrawn = false;\n        newClaim.termination = block.timestamp + claimPeriod;\n\n        emit ClaimCreated(\n            newClaimId,\n            requestId,\n            newClaim.claimer,\n            newClaim.termination\n        );\n\n        return claimCounter;\n    }\n\n    function challengeClaim(uint256 claimId) external validClaimId(claimId) payable{\n        Challenge storage challenge = challenges[claimId];\n\n        require(challenge.challenger == address(0), \"Already challenged\");\n        require(block.timestamp < claims[claimId].termination, \"Already claimed successfully\");\n        require(msg.value > claimStake, \"Not enough funds provided\");\n\n        challenge.challenger = msg.sender;\n        challenge.challengerStake = msg.value;\n        challenge.claimerStake = claimStake;\n        challenge.termination = block.timestamp + challengePeriod;\n\n        emit ClaimChallenged(\n            claimId,\n            msg.sender\n        );\n    }\n\n    function counterChallenge(uint256 claimId) external validClaimId(claimId) payable {\n        Claim storage claim = claims[claimId];\n        Challenge storage challenge = challenges[claimId];\n        require(challenge.challenger != address(0), \"Claim not yet challenged\");\n        require(msg.sender == claim.claimer || msg.sender == challenge.challenger, \"Already challenged by another address\");\n        require(block.timestamp < challenge.termination, \"Challenge period finished\");\n\n        bool claimerStakeBigger = challenge.claimerStake > challenge.challengerStake;\n        address nextActor = claimerStakeBigger ? challenge.challenger : claim.claimer;\n        require(msg.sender == nextActor, \"Not eligible to outbid\");\n\n        uint256 minStake = claimerStakeBigger ? challenge.claimerStake - challenge.challengerStake : challenge.challengerStake - challenge.claimerStake;\n        require(msg.value > minStake, \"Not enough funds provided\");\n\n        if (msg.sender == claim.claimer) {\n            challenge.claimerStake += msg.value;\n        } else {\n            challenge.challengerStake += msg.value;\n        }\n\n        challenge.termination = Math.max(challenge.termination, block.timestamp + challengePeriodExtension);\n\n        emit ChallengeCountered(\n            claimId,\n            msg.sender,\n            Math.max(challenge.challengerStake, challenge.claimerStake)\n        );\n    }\n\n    function claimSuccessful(uint256 claimId) public view validClaimId(claimId) returns (bool) {\n        require(challenges[claimId].termination == 0 , \"Claim was challenged\");\n\n        return block.timestamp >= claims[claimId].termination;\n    }\n\n    function withdraw(uint256 claimId) external validClaimId(claimId) {\n        Claim storage claim = claims[claimId];\n        Request storage request = requests[claim.requestId];\n        require(!claim.withdrawn, \"Already withdrawn\");\n\n        bool claimChallenged = challenges[claimId].termination != 0;\n        if (!claimChallenged) {\n            require(block.timestamp >= claim.termination, \"Claim period not finished\");\n        } else {\n            require(block.timestamp >= challenges[claimId].termination, \"Challenge period not finished\");\n            // check if l1 resolved\n        }\n\n        withdraw_claim(claimId, request, claim);\n        // The claim is set the `withdrawn` state above, so the following effects\n        // needs to happen afterwards to avoid reentrency problems\n        if (claimChallenged) {\n            withdraw_challenge(claimId, claim);\n        }\n    }\n\n    function withdraw_claim(uint256 claimId, Request storage request, Claim storage claim) private {\n        claim.withdrawn = true;\n\n        emit ClaimWithdrawn(\n            claimId,\n            claim.requestId,\n            claim.claimer\n        );\n\n        IERC20 token = IERC20(request.sourceTokenAddress);\n        require(token.transfer(claim.claimer, request.amount), \"Transfer failed\");\n    }\n\n    function withdraw_challenge(uint256 claimId, Claim storage claim) private {\n        Challenge storage challenge = challenges[claimId];\n\n        bool claimerStakeBigger = challenge.claimerStake > challenge.challengerStake;\n        address challengeWinner = claimerStakeBigger ? challenge.challenger : claim.claimer;\n        uint256 challengeStake = challenge.claimerStake + challenge.challengerStake;\n\n        (bool sent, bytes memory data) = challengeWinner.call{value: challengeStake}(\"\");\n        require(sent, \"Failed to send Ether\");\n\n        // TODO: can we remove the challenge here?\n    }\n}\n",
  "sourceMap": "392:7944:5:-:0;;;2201:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;666:10:2;867:9:0;:23::i;:::-;2365:10:5;:24;;;;2399:11;:26;;;;2435:15;:34;2479:24;:52;392:7944;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:368:6:-;111:6;119;127;135;188:3;176:9;167:7;163:23;159:33;156:53;;;205:1;202;195:12;156:53;-1:-1:-1;;228:16:6;;284:2;269:18;;263:25;328:2;313:18;;307:25;372:2;357:18;;;351:25;228:16;;263:25;;-1:-1:-1;351:25:6;;-1:-1:-1;14:368:6;-1:-1:-1;14:368:6:o;:::-;392:7944:5;;;;;;",
  "sourcePath": "contracts/RequestManager.sol",
  "type": "contract"
}